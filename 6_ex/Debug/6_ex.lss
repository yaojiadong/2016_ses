
6_ex.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000063a  00800200  000022fc  00002390  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000022fc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000024c  0080083a  0080083a  000029ca  2**0
                  ALLOC
  3 .stab         000040d4  00000000  00000000  000029cc  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000055cf  00000000  00000000  00006aa0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000008c  00000000  00000000  0000c06f  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000c0fc  2**2
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 90 00 	jmp	0x120	; 0x120 <__ctors_end>
       4:	0c 94 ea 06 	jmp	0xdd4	; 0xdd4 <__vector_1>
       8:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
       c:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      10:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      14:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      18:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      1c:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      20:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      24:	0c 94 1d 04 	jmp	0x83a	; 0x83a <__vector_9>
      28:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      2c:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      30:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      34:	0c 94 5d 0c 	jmp	0x18ba	; 0x18ba <__vector_13>
      38:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      3c:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      40:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      44:	0c 94 27 0c 	jmp	0x184e	; 0x184e <__vector_17>
      48:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      4c:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      50:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      54:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      58:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      5c:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      60:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      64:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      68:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      6c:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      70:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      74:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      78:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      7c:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      80:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      84:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      88:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      8c:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      90:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      94:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      98:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      9c:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      a0:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      a4:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      a8:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      ac:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      b0:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      b4:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      b8:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      bc:	0c 94 8a 07 	jmp	0xf14	; 0xf14 <__vector_47>
      c0:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      c4:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      c8:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      cc:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      d0:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      d4:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      d8:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      dc:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      e0:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      e4:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      e8:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      ec:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      f0:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      f4:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      f8:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      fc:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
     100:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
     104:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
     108:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
     10c:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
     110:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
     114:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
     118:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
     11c:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>

00000120 <__ctors_end>:
     120:	11 24       	eor	r1, r1
     122:	1f be       	out	0x3f, r1	; 63
     124:	cf ef       	ldi	r28, 0xFF	; 255
     126:	d1 e4       	ldi	r29, 0x41	; 65
     128:	de bf       	out	0x3e, r29	; 62
     12a:	cd bf       	out	0x3d, r28	; 61

0000012c <__do_copy_data>:
     12c:	18 e0       	ldi	r17, 0x08	; 8
     12e:	a0 e0       	ldi	r26, 0x00	; 0
     130:	b2 e0       	ldi	r27, 0x02	; 2
     132:	ec ef       	ldi	r30, 0xFC	; 252
     134:	f2 e2       	ldi	r31, 0x22	; 34
     136:	00 e0       	ldi	r16, 0x00	; 0
     138:	0b bf       	out	0x3b, r16	; 59
     13a:	02 c0       	rjmp	.+4      	; 0x140 <__do_copy_data+0x14>
     13c:	07 90       	elpm	r0, Z+
     13e:	0d 92       	st	X+, r0
     140:	aa 33       	cpi	r26, 0x3A	; 58
     142:	b1 07       	cpc	r27, r17
     144:	d9 f7       	brne	.-10     	; 0x13c <__do_copy_data+0x10>

00000146 <__do_clear_bss>:
     146:	2a e0       	ldi	r18, 0x0A	; 10
     148:	aa e3       	ldi	r26, 0x3A	; 58
     14a:	b8 e0       	ldi	r27, 0x08	; 8
     14c:	01 c0       	rjmp	.+2      	; 0x150 <.do_clear_bss_start>

0000014e <.do_clear_bss_loop>:
     14e:	1d 92       	st	X+, r1

00000150 <.do_clear_bss_start>:
     150:	a6 38       	cpi	r26, 0x86	; 134
     152:	b2 07       	cpc	r27, r18
     154:	e1 f7       	brne	.-8      	; 0x14e <.do_clear_bss_loop>
     156:	0e 94 b1 00 	call	0x162	; 0x162 <main>
     15a:	0c 94 7c 11 	jmp	0x22f8	; 0x22f8 <_exit>

0000015e <__bad_interrupt>:
     15e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000162 <main>:
static void display();
static void wrapper_pid(void*);

static uint8_t set_point = 0;

int main() {
     162:	cf 93       	push	r28
     164:	df 93       	push	r29
     166:	cd b7       	in	r28, 0x3d	; 61
     168:	de b7       	in	r29, 0x3e	; 62
     16a:	a8 97       	sbiw	r28, 0x28	; 40
     16c:	0f b6       	in	r0, 0x3f	; 63
     16e:	f8 94       	cli
     170:	de bf       	out	0x3e, r29	; 62
     172:	0f be       	out	0x3f, r0	; 63
     174:	cd bf       	out	0x3d, r28	; 61

//task 6.1
	pButtonCallback joystickButton = wrapper_pwm;
     176:	8e e1       	ldi	r24, 0x1E	; 30
     178:	91 e0       	ldi	r25, 0x01	; 1
     17a:	9a 83       	std	Y+2, r25	; 0x02
     17c:	89 83       	std	Y+1, r24	; 0x01
	button_init(true); //debouncing, timer1 is initialized in this function
     17e:	81 e0       	ldi	r24, 0x01	; 1
     180:	0e 94 a6 03 	call	0x74c	; 0x74c <button_init>
	button_setJoystickButtonCallback(joystickButton);
     184:	89 81       	ldd	r24, Y+1	; 0x01
     186:	9a 81       	ldd	r25, Y+2	; 0x02
     188:	0e 94 7f 04 	call	0x8fe	; 0x8fe <button_setJoystickButtonCallback>

	pwm_init();
     18c:	0e 94 79 08 	call	0x10f2	; 0x10f2 <pwm_init>
	pwm_setDutyCycle(0); //initially motor idle
     190:	80 e0       	ldi	r24, 0x00	; 0
     192:	0e 94 da 08 	call	0x11b4	; 0x11b4 <pwm_setDutyCycle>

//task 6.2,6.3
	lcd_init();
     196:	0e 94 7a 0d 	call	0x1af4	; 0x1af4 <lcd_init>
	led_yellowInit();
     19a:	0e 94 6d 05 	call	0xada	; 0xada <led_yellowInit>
	led_greenInit();
     19e:	0e 94 b0 05 	call	0xb60	; 0xb60 <led_greenInit>
	scheduler_init(); // timer2_start() is called there.
     1a2:	0e 94 65 09 	call	0x12ca	; 0x12ca <scheduler_init>
	motorFrequency_init(); //timer 5 and external interrupt settings
     1a6:	0e 94 10 06 	call	0xc20	; 0xc20 <motorFrequency_init>

	taskDescriptor td1; //= (taskDescriptor*) malloc(sizeof(taskDescriptor));
	td1.task = &display;
     1aa:	8e e3       	ldi	r24, 0x3E	; 62
     1ac:	91 e0       	ldi	r25, 0x01	; 1
     1ae:	9c 83       	std	Y+4, r25	; 0x04
     1b0:	8b 83       	std	Y+3, r24	; 0x03
//td.param = &;  //void pointer point to void, param is of type void
	td1.expire = 0;
     1b2:	18 86       	std	Y+8, r1	; 0x08
     1b4:	1f 82       	std	Y+7, r1	; 0x07
	td1.period = 500; //timer2 INT every 1ms
     1b6:	84 ef       	ldi	r24, 0xF4	; 244
     1b8:	91 e0       	ldi	r25, 0x01	; 1
     1ba:	9a 87       	std	Y+10, r25	; 0x0a
     1bc:	89 87       	std	Y+9, r24	; 0x09
	td1.execute = 0;
     1be:	8b 85       	ldd	r24, Y+11	; 0x0b
     1c0:	8e 7f       	andi	r24, 0xFE	; 254
     1c2:	8b 87       	std	Y+11, r24	; 0x0b
	td1.next = NULL;
     1c4:	1d 86       	std	Y+13, r1	; 0x0d
     1c6:	1c 86       	std	Y+12, r1	; 0x0c
	scheduler_add(&td1);
     1c8:	ce 01       	movw	r24, r28
     1ca:	03 96       	adiw	r24, 0x03	; 3
     1cc:	0e 94 e0 09 	call	0x13c0	; 0x13c0 <scheduler_add>

//task6.4
	uart_init(57600); //debugging
     1d0:	60 e0       	ldi	r22, 0x00	; 0
     1d2:	71 ee       	ldi	r23, 0xE1	; 225
     1d4:	80 e0       	ldi	r24, 0x00	; 0
     1d6:	90 e0       	ldi	r25, 0x00	; 0
     1d8:	0e 94 dc 0d 	call	0x1bb8	; 0x1bb8 <uart_init>

	pidData_t pidData;
	pid_Init(P * SCALING_FACTOR, I* SCALING_FACTOR, D *SCALING_FACTOR, &pidData); //set p=0; i=1.5, d=0;
     1dc:	ce 01       	movw	r24, r28
     1de:	0e 96       	adiw	r24, 0x0e	; 14
     1e0:	9c 01       	movw	r18, r24
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	64 e0       	ldi	r22, 0x04	; 4
     1e8:	70 e0       	ldi	r23, 0x00	; 0
     1ea:	81 e0       	ldi	r24, 0x01	; 1
     1ec:	90 e0       	ldi	r25, 0x00	; 0
     1ee:	0e 94 21 02 	call	0x442	; 0x442 <pid_Init>
	taskDescriptor td2; //= (taskDescriptor*) malloc(sizeof(taskDescriptor));
	td2.task = &wrapper_pid;
     1f2:	8a ee       	ldi	r24, 0xEA	; 234
     1f4:	91 e0       	ldi	r25, 0x01	; 1
     1f6:	9f 8f       	std	Y+31, r25	; 0x1f
     1f8:	8e 8f       	std	Y+30, r24	; 0x1e
	td2.param = &pidData;  //void pointer point to void, param is of type void
     1fa:	ce 01       	movw	r24, r28
     1fc:	0e 96       	adiw	r24, 0x0e	; 14
     1fe:	99 a3       	std	Y+33, r25	; 0x21
     200:	88 a3       	std	Y+32, r24	; 0x20
	td2.expire = 0;
     202:	1b a2       	std	Y+35, r1	; 0x23
     204:	1a a2       	std	Y+34, r1	; 0x22
	td2.period = 200; //timer2 INT every 1ms
     206:	88 ec       	ldi	r24, 0xC8	; 200
     208:	90 e0       	ldi	r25, 0x00	; 0
     20a:	9d a3       	std	Y+37, r25	; 0x25
     20c:	8c a3       	std	Y+36, r24	; 0x24
	td2.execute = 0;
     20e:	8e a1       	ldd	r24, Y+38	; 0x26
     210:	8e 7f       	andi	r24, 0xFE	; 254
     212:	8e a3       	std	Y+38, r24	; 0x26
	td2.next = NULL;
     214:	18 a6       	std	Y+40, r1	; 0x28
     216:	1f a2       	std	Y+39, r1	; 0x27
	scheduler_add(&td2);
     218:	ce 01       	movw	r24, r28
     21a:	4e 96       	adiw	r24, 0x1e	; 30
     21c:	0e 94 e0 09 	call	0x13c0	; 0x13c0 <scheduler_add>

	sei();
     220:	78 94       	sei
	scheduler_run();
     222:	0e 94 72 09 	call	0x12e4	; 0x12e4 <scheduler_run>
	return 0;
     226:	80 e0       	ldi	r24, 0x00	; 0
     228:	90 e0       	ldi	r25, 0x00	; 0
}
     22a:	a8 96       	adiw	r28, 0x28	; 40
     22c:	0f b6       	in	r0, 0x3f	; 63
     22e:	f8 94       	cli
     230:	de bf       	out	0x3e, r29	; 62
     232:	0f be       	out	0x3f, r0	; 63
     234:	cd bf       	out	0x3d, r28	; 61
     236:	df 91       	pop	r29
     238:	cf 91       	pop	r28
     23a:	08 95       	ret

0000023c <wrapper_pwm>:

static void wrapper_pwm() {
     23c:	cf 93       	push	r28
     23e:	df 93       	push	r29
     240:	cd b7       	in	r28, 0x3d	; 61
     242:	de b7       	in	r29, 0x3e	; 62
	static bool stop = true;

	stop = !stop;
     244:	80 91 00 02 	lds	r24, 0x0200
     248:	88 2f       	mov	r24, r24
     24a:	90 e0       	ldi	r25, 0x00	; 0
     24c:	21 e0       	ldi	r18, 0x01	; 1
     24e:	89 2b       	or	r24, r25
     250:	09 f4       	brne	.+2      	; 0x254 <wrapper_pwm+0x18>
     252:	20 e0       	ldi	r18, 0x00	; 0
     254:	81 e0       	ldi	r24, 0x01	; 1
     256:	82 27       	eor	r24, r18
     258:	88 2f       	mov	r24, r24
     25a:	90 e0       	ldi	r25, 0x00	; 0
     25c:	81 70       	andi	r24, 0x01	; 1
     25e:	80 93 00 02 	sts	0x0200, r24
	if (stop) {
     262:	80 91 00 02 	lds	r24, 0x0200
     266:	88 23       	and	r24, r24
     268:	19 f0       	breq	.+6      	; 0x270 <wrapper_pwm+0x34>
		set_point = 0;
     26a:	10 92 3a 08 	sts	0x083A, r1
     26e:	03 c0       	rjmp	.+6      	; 0x276 <wrapper_pwm+0x3a>
	} else {
		set_point = 100;
     270:	84 e6       	ldi	r24, 0x64	; 100
     272:	80 93 3a 08 	sts	0x083A, r24
	}
	//task 6.2, 6.3
	//	pwm_setDutyCycle(85); //duty cycle is 85.

}
     276:	df 91       	pop	r29
     278:	cf 91       	pop	r28
     27a:	08 95       	ret

0000027c <display>:

static void display() {
     27c:	cf 93       	push	r28
     27e:	df 93       	push	r29
     280:	00 d0       	rcall	.+0      	; 0x282 <display+0x6>
     282:	00 d0       	rcall	.+0      	; 0x284 <display+0x8>
     284:	00 d0       	rcall	.+0      	; 0x286 <display+0xa>
     286:	cd b7       	in	r28, 0x3d	; 61
     288:	de b7       	in	r29, 0x3e	; 62
	uint16_t recent_freq = motorFrequency_getRecent();
     28a:	0e 94 99 06 	call	0xd32	; 0xd32 <motorFrequency_getRecent>
     28e:	9c 83       	std	Y+4, r25	; 0x04
     290:	8b 83       	std	Y+3, r24	; 0x03

//task 6.2, 6.3
//	uint16_t rpm_recent = 60 * recent_freq;
//	uint16_t rpm_median = 60 * motorFrequency_getMedian();

	int16_t step = 0;
     292:	1a 82       	std	Y+2, r1	; 0x02
     294:	19 82       	std	Y+1, r1	; 0x01
	uint8_t static pos = 0;

	step = ((int16_t) recent_freq - set_point) / 10;
     296:	2b 81       	ldd	r18, Y+3	; 0x03
     298:	3c 81       	ldd	r19, Y+4	; 0x04
     29a:	80 91 3a 08 	lds	r24, 0x083A
     29e:	88 2f       	mov	r24, r24
     2a0:	90 e0       	ldi	r25, 0x00	; 0
     2a2:	a9 01       	movw	r20, r18
     2a4:	48 1b       	sub	r20, r24
     2a6:	59 0b       	sbc	r21, r25
     2a8:	ca 01       	movw	r24, r20
     2aa:	2a e0       	ldi	r18, 0x0A	; 10
     2ac:	30 e0       	ldi	r19, 0x00	; 0
     2ae:	b9 01       	movw	r22, r18
     2b0:	0e 94 56 0e 	call	0x1cac	; 0x1cac <__divmodhi4>
     2b4:	cb 01       	movw	r24, r22
     2b6:	9a 83       	std	Y+2, r25	; 0x02
     2b8:	89 83       	std	Y+1, r24	; 0x01
	if (step > 3)
     2ba:	89 81       	ldd	r24, Y+1	; 0x01
     2bc:	9a 81       	ldd	r25, Y+2	; 0x02
     2be:	04 97       	sbiw	r24, 0x04	; 4
     2c0:	24 f0       	brlt	.+8      	; 0x2ca <display+0x4e>
		step = 3;
     2c2:	83 e0       	ldi	r24, 0x03	; 3
     2c4:	90 e0       	ldi	r25, 0x00	; 0
     2c6:	9a 83       	std	Y+2, r25	; 0x02
     2c8:	89 83       	std	Y+1, r24	; 0x01
	if (step < -4)
     2ca:	89 81       	ldd	r24, Y+1	; 0x01
     2cc:	9a 81       	ldd	r25, Y+2	; 0x02
     2ce:	8c 3f       	cpi	r24, 0xFC	; 252
     2d0:	9f 4f       	sbci	r25, 0xFF	; 255
     2d2:	24 f4       	brge	.+8      	; 0x2dc <display+0x60>
		step = -4;
     2d4:	8c ef       	ldi	r24, 0xFC	; 252
     2d6:	9f ef       	ldi	r25, 0xFF	; 255
     2d8:	9a 83       	std	Y+2, r25	; 0x02
     2da:	89 83       	std	Y+1, r24	; 0x01

	lcd_setCursor(0, 2);
     2dc:	62 e0       	ldi	r22, 0x02	; 2
     2de:	80 e0       	ldi	r24, 0x00	; 0
     2e0:	0e 94 c6 0c 	call	0x198c	; 0x198c <lcd_setCursor>
	fprintf(lcdout, "%d\t %d      \n", set_point, recent_freq);	//space
     2e4:	80 91 3a 08 	lds	r24, 0x083A
     2e8:	28 2f       	mov	r18, r24
     2ea:	30 e0       	ldi	r19, 0x00	; 0
     2ec:	80 91 01 02 	lds	r24, 0x0201
     2f0:	90 91 02 02 	lds	r25, 0x0202
     2f4:	4c 81       	ldd	r20, Y+4	; 0x04
     2f6:	4f 93       	push	r20
     2f8:	4b 81       	ldd	r20, Y+3	; 0x03
     2fa:	4f 93       	push	r20
     2fc:	43 2f       	mov	r20, r19
     2fe:	4f 93       	push	r20
     300:	2f 93       	push	r18
     302:	25 e0       	ldi	r18, 0x05	; 5
     304:	32 e0       	ldi	r19, 0x02	; 2
     306:	23 2f       	mov	r18, r19
     308:	2f 93       	push	r18
     30a:	25 e0       	ldi	r18, 0x05	; 5
     30c:	32 e0       	ldi	r19, 0x02	; 2
     30e:	2f 93       	push	r18
     310:	29 2f       	mov	r18, r25
     312:	2f 93       	push	r18
     314:	8f 93       	push	r24
     316:	0e 94 c5 0e 	call	0x1d8a	; 0x1d8a <fprintf>
     31a:	8d b7       	in	r24, 0x3d	; 61
     31c:	9e b7       	in	r25, 0x3e	; 62
     31e:	08 96       	adiw	r24, 0x08	; 8
     320:	0f b6       	in	r0, 0x3f	; 63
     322:	f8 94       	cli
     324:	de bf       	out	0x3e, r29	; 62
     326:	0f be       	out	0x3f, r0	; 63
     328:	cd bf       	out	0x3d, r28	; 61

	if (set_point == 0)
     32a:	80 91 3a 08 	lds	r24, 0x083A
     32e:	88 23       	and	r24, r24
     330:	41 f4       	brne	.+16     	; 0x342 <display+0xc6>
		lcd_setPixel(0, pos, 1);
     332:	80 91 3b 08 	lds	r24, 0x083B
     336:	41 e0       	ldi	r20, 0x01	; 1
     338:	68 2f       	mov	r22, r24
     33a:	80 e0       	ldi	r24, 0x00	; 0
     33c:	0e 94 10 0d 	call	0x1a20	; 0x1a20 <lcd_setPixel>
     340:	0b c0       	rjmp	.+22     	; 0x358 <display+0xdc>
	else
		lcd_setPixel(BASE_LINE - step, pos, 1);	//row 0 automatically. How to change row??
     342:	20 91 3b 08 	lds	r18, 0x083B
     346:	89 81       	ldd	r24, Y+1	; 0x01
     348:	93 e0       	ldi	r25, 0x03	; 3
     34a:	39 2f       	mov	r19, r25
     34c:	38 1b       	sub	r19, r24
     34e:	83 2f       	mov	r24, r19
     350:	41 e0       	ldi	r20, 0x01	; 1
     352:	62 2f       	mov	r22, r18
     354:	0e 94 10 0d 	call	0x1a20	; 0x1a20 <lcd_setPixel>
	pos++;
     358:	80 91 3b 08 	lds	r24, 0x083B
     35c:	8f 5f       	subi	r24, 0xFF	; 255
     35e:	80 93 3b 08 	sts	0x083B, r24
	if (pos == SCREEN_LENGTH) { //end of screen
     362:	80 91 3b 08 	lds	r24, 0x083B
     366:	8a 37       	cpi	r24, 0x7A	; 122
     368:	61 f5       	brne	.+88     	; 0x3c2 <display+0x146>
		lcd_clear();
     36a:	0e 94 57 0d 	call	0x1aae	; 0x1aae <lcd_clear>
		lcd_setCursor(0, 2);
     36e:	62 e0       	ldi	r22, 0x02	; 2
     370:	80 e0       	ldi	r24, 0x00	; 0
     372:	0e 94 c6 0c 	call	0x198c	; 0x198c <lcd_setCursor>
		fprintf(lcdout, "%d\t %d\n", set_point, recent_freq);
     376:	80 91 3a 08 	lds	r24, 0x083A
     37a:	28 2f       	mov	r18, r24
     37c:	30 e0       	ldi	r19, 0x00	; 0
     37e:	80 91 01 02 	lds	r24, 0x0201
     382:	90 91 02 02 	lds	r25, 0x0202
     386:	4c 81       	ldd	r20, Y+4	; 0x04
     388:	4f 93       	push	r20
     38a:	4b 81       	ldd	r20, Y+3	; 0x03
     38c:	4f 93       	push	r20
     38e:	43 2f       	mov	r20, r19
     390:	4f 93       	push	r20
     392:	2f 93       	push	r18
     394:	23 e1       	ldi	r18, 0x13	; 19
     396:	32 e0       	ldi	r19, 0x02	; 2
     398:	23 2f       	mov	r18, r19
     39a:	2f 93       	push	r18
     39c:	23 e1       	ldi	r18, 0x13	; 19
     39e:	32 e0       	ldi	r19, 0x02	; 2
     3a0:	2f 93       	push	r18
     3a2:	29 2f       	mov	r18, r25
     3a4:	2f 93       	push	r18
     3a6:	8f 93       	push	r24
     3a8:	0e 94 c5 0e 	call	0x1d8a	; 0x1d8a <fprintf>
     3ac:	4d b7       	in	r20, 0x3d	; 61
     3ae:	5e b7       	in	r21, 0x3e	; 62
     3b0:	48 5f       	subi	r20, 0xF8	; 248
     3b2:	5f 4f       	sbci	r21, 0xFF	; 255
     3b4:	0f b6       	in	r0, 0x3f	; 63
     3b6:	f8 94       	cli
     3b8:	de bf       	out	0x3e, r29	; 62
     3ba:	0f be       	out	0x3f, r0	; 63
     3bc:	cd bf       	out	0x3d, r28	; 61
		pos = 0;
     3be:	10 92 3b 08 	sts	0x083B, r1
	}

//task 6.2 6.3
//	fprintf(lcdout, "The recent frequency is %d rpm.\nThe median frequency is %d rpm\n ",rpm_recent, rpm_median);
}
     3c2:	26 96       	adiw	r28, 0x06	; 6
     3c4:	0f b6       	in	r0, 0x3f	; 63
     3c6:	f8 94       	cli
     3c8:	de bf       	out	0x3e, r29	; 62
     3ca:	0f be       	out	0x3f, r0	; 63
     3cc:	cd bf       	out	0x3d, r28	; 61
     3ce:	df 91       	pop	r29
     3d0:	cf 91       	pop	r28
     3d2:	08 95       	ret

000003d4 <wrapper_pid>:

static void wrapper_pid(void * pidData) {
     3d4:	cf 93       	push	r28
     3d6:	df 93       	push	r29
     3d8:	00 d0       	rcall	.+0      	; 0x3da <wrapper_pid+0x6>
     3da:	1f 92       	push	r1
     3dc:	cd b7       	in	r28, 0x3d	; 61
     3de:	de b7       	in	r29, 0x3e	; 62
     3e0:	9b 83       	std	Y+3, r25	; 0x03
     3e2:	8a 83       	std	Y+2, r24	; 0x02

	uint8_t pid_out = pid_control(set_point, (pidData_t*) pidData); //setpoint 100Hz
     3e4:	80 91 3a 08 	lds	r24, 0x083A
     3e8:	88 2f       	mov	r24, r24
     3ea:	90 e0       	ldi	r25, 0x00	; 0
     3ec:	2a 81       	ldd	r18, Y+2	; 0x02
     3ee:	3b 81       	ldd	r19, Y+3	; 0x03
     3f0:	b9 01       	movw	r22, r18
     3f2:	0e 94 68 02 	call	0x4d0	; 0x4d0 <pid_control>
     3f6:	89 83       	std	Y+1, r24	; 0x01
	pwm_setDutyCycle(pid_out);
     3f8:	89 81       	ldd	r24, Y+1	; 0x01
     3fa:	0e 94 da 08 	call	0x11b4	; 0x11b4 <pwm_setDutyCycle>
	fprintf(uartout, "real dutycycle: %d\n", pid_out);
     3fe:	89 81       	ldd	r24, Y+1	; 0x01
     400:	28 2f       	mov	r18, r24
     402:	30 e0       	ldi	r19, 0x00	; 0
     404:	80 91 03 02 	lds	r24, 0x0203
     408:	90 91 04 02 	lds	r25, 0x0204
     40c:	43 2f       	mov	r20, r19
     40e:	4f 93       	push	r20
     410:	2f 93       	push	r18
     412:	2b e1       	ldi	r18, 0x1B	; 27
     414:	32 e0       	ldi	r19, 0x02	; 2
     416:	23 2f       	mov	r18, r19
     418:	2f 93       	push	r18
     41a:	2b e1       	ldi	r18, 0x1B	; 27
     41c:	32 e0       	ldi	r19, 0x02	; 2
     41e:	2f 93       	push	r18
     420:	29 2f       	mov	r18, r25
     422:	2f 93       	push	r18
     424:	8f 93       	push	r24
     426:	0e 94 c5 0e 	call	0x1d8a	; 0x1d8a <fprintf>
     42a:	0f 90       	pop	r0
     42c:	0f 90       	pop	r0
     42e:	0f 90       	pop	r0
     430:	0f 90       	pop	r0
     432:	0f 90       	pop	r0
     434:	0f 90       	pop	r0
}
     436:	0f 90       	pop	r0
     438:	0f 90       	pop	r0
     43a:	0f 90       	pop	r0
     43c:	df 91       	pop	r29
     43e:	cf 91       	pop	r28
     440:	08 95       	ret

00000442 <pid_Init>:

#include "pid.h"
#include "ses_uart.h"

void pid_Init(int16_t p_factor, int16_t i_factor, int16_t d_factor, pidData_t *pid)
{
     442:	cf 93       	push	r28
     444:	df 93       	push	r29
     446:	cd b7       	in	r28, 0x3d	; 61
     448:	de b7       	in	r29, 0x3e	; 62
     44a:	28 97       	sbiw	r28, 0x08	; 8
     44c:	0f b6       	in	r0, 0x3f	; 63
     44e:	f8 94       	cli
     450:	de bf       	out	0x3e, r29	; 62
     452:	0f be       	out	0x3f, r0	; 63
     454:	cd bf       	out	0x3d, r28	; 61
     456:	9a 83       	std	Y+2, r25	; 0x02
     458:	89 83       	std	Y+1, r24	; 0x01
     45a:	7c 83       	std	Y+4, r23	; 0x04
     45c:	6b 83       	std	Y+3, r22	; 0x03
     45e:	5e 83       	std	Y+6, r21	; 0x06
     460:	4d 83       	std	Y+5, r20	; 0x05
     462:	38 87       	std	Y+8, r19	; 0x08
     464:	2f 83       	std	Y+7, r18	; 0x07
	// Start values for PID controller
	pid->I_sumError = 0;
     466:	8f 81       	ldd	r24, Y+7	; 0x07
     468:	98 85       	ldd	r25, Y+8	; 0x08
     46a:	fc 01       	movw	r30, r24
     46c:	12 82       	std	Z+2, r1	; 0x02
     46e:	13 82       	std	Z+3, r1	; 0x03
     470:	14 82       	std	Z+4, r1	; 0x04
     472:	15 82       	std	Z+5, r1	; 0x05
	pid->lastProcessValue = 0;
     474:	8f 81       	ldd	r24, Y+7	; 0x07
     476:	98 85       	ldd	r25, Y+8	; 0x08
     478:	fc 01       	movw	r30, r24
     47a:	11 82       	std	Z+1, r1	; 0x01
     47c:	10 82       	st	Z, r1
	// Tuning constants for PID loop
	pid->P_Factor = p_factor ;
     47e:	8f 81       	ldd	r24, Y+7	; 0x07
     480:	98 85       	ldd	r25, Y+8	; 0x08
     482:	29 81       	ldd	r18, Y+1	; 0x01
     484:	3a 81       	ldd	r19, Y+2	; 0x02
     486:	fc 01       	movw	r30, r24
     488:	37 83       	std	Z+7, r19	; 0x07
     48a:	26 83       	std	Z+6, r18	; 0x06
	pid->I_Factor = i_factor ;
     48c:	8f 81       	ldd	r24, Y+7	; 0x07
     48e:	98 85       	ldd	r25, Y+8	; 0x08
     490:	2b 81       	ldd	r18, Y+3	; 0x03
     492:	3c 81       	ldd	r19, Y+4	; 0x04
     494:	fc 01       	movw	r30, r24
     496:	31 87       	std	Z+9, r19	; 0x09
     498:	20 87       	std	Z+8, r18	; 0x08
	pid->D_Factor = d_factor ;
     49a:	8f 81       	ldd	r24, Y+7	; 0x07
     49c:	98 85       	ldd	r25, Y+8	; 0x08
     49e:	2d 81       	ldd	r18, Y+5	; 0x05
     4a0:	3e 81       	ldd	r19, Y+6	; 0x06
     4a2:	fc 01       	movw	r30, r24
     4a4:	33 87       	std	Z+11, r19	; 0x0b
     4a6:	22 87       	std	Z+10, r18	; 0x0a
	// Limits to avoid overflow
	pid->I_maxSumError = MAX_ERROR;
     4a8:	2f 81       	ldd	r18, Y+7	; 0x07
     4aa:	38 85       	ldd	r19, Y+8	; 0x08
     4ac:	8f ef       	ldi	r24, 0xFF	; 255
     4ae:	9f e7       	ldi	r25, 0x7F	; 127
     4b0:	a0 e0       	ldi	r26, 0x00	; 0
     4b2:	b0 e0       	ldi	r27, 0x00	; 0
     4b4:	f9 01       	movw	r30, r18
     4b6:	84 87       	std	Z+12, r24	; 0x0c
     4b8:	95 87       	std	Z+13, r25	; 0x0d
     4ba:	a6 87       	std	Z+14, r26	; 0x0e
     4bc:	b7 87       	std	Z+15, r27	; 0x0f
}
     4be:	28 96       	adiw	r28, 0x08	; 8
     4c0:	0f b6       	in	r0, 0x3f	; 63
     4c2:	f8 94       	cli
     4c4:	de bf       	out	0x3e, r29	; 62
     4c6:	0f be       	out	0x3f, r0	; 63
     4c8:	cd bf       	out	0x3d, r28	; 61
     4ca:	df 91       	pop	r29
     4cc:	cf 91       	pop	r28
     4ce:	08 95       	ret

000004d0 <pid_control>:

uint8_t pid_control(int16_t setPoint, pidData_t* pid_st) {
     4d0:	cf 93       	push	r28
     4d2:	df 93       	push	r29
     4d4:	cd b7       	in	r28, 0x3d	; 61
     4d6:	de b7       	in	r29, 0x3e	; 62
     4d8:	6c 97       	sbiw	r28, 0x1c	; 28
     4da:	0f b6       	in	r0, 0x3f	; 63
     4dc:	f8 94       	cli
     4de:	de bf       	out	0x3e, r29	; 62
     4e0:	0f be       	out	0x3f, r0	; 63
     4e2:	cd bf       	out	0x3d, r28	; 61
     4e4:	9e 8b       	std	Y+22, r25	; 0x16
     4e6:	8d 8b       	std	Y+21, r24	; 0x15
     4e8:	78 8f       	std	Y+24, r23	; 0x18
     4ea:	6f 8b       	std	Y+23, r22	; 0x17
	uint16_t pv;
	int16_t  error, p_term, d_term;
	int32_t i_term, ret, temp;
	pv = motorFrequency_getRecent();
     4ec:	0e 94 99 06 	call	0xd32	; 0xd32 <motorFrequency_getRecent>
     4f0:	9e 83       	std	Y+6, r25	; 0x06
     4f2:	8d 83       	std	Y+5, r24	; 0x05
	error = setPoint - pv;
     4f4:	2d 89       	ldd	r18, Y+21	; 0x15
     4f6:	3e 89       	ldd	r19, Y+22	; 0x16
     4f8:	8d 81       	ldd	r24, Y+5	; 0x05
     4fa:	9e 81       	ldd	r25, Y+6	; 0x06
     4fc:	a9 01       	movw	r20, r18
     4fe:	48 1b       	sub	r20, r24
     500:	59 0b       	sbc	r21, r25
     502:	ca 01       	movw	r24, r20
     504:	98 87       	std	Y+8, r25	; 0x08
     506:	8f 83       	std	Y+7, r24	; 0x07

	fprintf(uartout,"error %d\n", error); //debugging
     508:	80 91 03 02 	lds	r24, 0x0203
     50c:	90 91 04 02 	lds	r25, 0x0204
     510:	28 85       	ldd	r18, Y+8	; 0x08
     512:	2f 93       	push	r18
     514:	2f 81       	ldd	r18, Y+7	; 0x07
     516:	2f 93       	push	r18
     518:	2f e2       	ldi	r18, 0x2F	; 47
     51a:	32 e0       	ldi	r19, 0x02	; 2
     51c:	23 2f       	mov	r18, r19
     51e:	2f 93       	push	r18
     520:	2f e2       	ldi	r18, 0x2F	; 47
     522:	32 e0       	ldi	r19, 0x02	; 2
     524:	2f 93       	push	r18
     526:	29 2f       	mov	r18, r25
     528:	2f 93       	push	r18
     52a:	8f 93       	push	r24
     52c:	0e 94 c5 0e 	call	0x1d8a	; 0x1d8a <fprintf>
     530:	0f 90       	pop	r0
     532:	0f 90       	pop	r0
     534:	0f 90       	pop	r0
     536:	0f 90       	pop	r0
     538:	0f 90       	pop	r0
     53a:	0f 90       	pop	r0

	//calculate P
	p_term = pid_st->P_Factor * error;
     53c:	8f 89       	ldd	r24, Y+23	; 0x17
     53e:	98 8d       	ldd	r25, Y+24	; 0x18
     540:	fc 01       	movw	r30, r24
     542:	46 81       	ldd	r20, Z+6	; 0x06
     544:	57 81       	ldd	r21, Z+7	; 0x07
     546:	2f 81       	ldd	r18, Y+7	; 0x07
     548:	38 85       	ldd	r19, Y+8	; 0x08
     54a:	42 9f       	mul	r20, r18
     54c:	c0 01       	movw	r24, r0
     54e:	43 9f       	mul	r20, r19
     550:	90 0d       	add	r25, r0
     552:	52 9f       	mul	r21, r18
     554:	90 0d       	add	r25, r0
     556:	11 24       	eor	r1, r1
     558:	9a 87       	std	Y+10, r25	; 0x0a
     55a:	89 87       	std	Y+9, r24	; 0x09

	//calculate I
	temp = pid_st->I_sumError + error;
     55c:	8f 89       	ldd	r24, Y+23	; 0x17
     55e:	98 8d       	ldd	r25, Y+24	; 0x18
     560:	fc 01       	movw	r30, r24
     562:	22 81       	ldd	r18, Z+2	; 0x02
     564:	33 81       	ldd	r19, Z+3	; 0x03
     566:	44 81       	ldd	r20, Z+4	; 0x04
     568:	55 81       	ldd	r21, Z+5	; 0x05
     56a:	8f 81       	ldd	r24, Y+7	; 0x07
     56c:	98 85       	ldd	r25, Y+8	; 0x08
     56e:	09 2e       	mov	r0, r25
     570:	00 0c       	add	r0, r0
     572:	aa 0b       	sbc	r26, r26
     574:	bb 0b       	sbc	r27, r27
     576:	82 0f       	add	r24, r18
     578:	93 1f       	adc	r25, r19
     57a:	a4 1f       	adc	r26, r20
     57c:	b5 1f       	adc	r27, r21
     57e:	8b 87       	std	Y+11, r24	; 0x0b
     580:	9c 87       	std	Y+12, r25	; 0x0c
     582:	ad 87       	std	Y+13, r26	; 0x0d
     584:	be 87       	std	Y+14, r27	; 0x0e
	if (temp > pid_st->I_maxSumError) {
     586:	8f 89       	ldd	r24, Y+23	; 0x17
     588:	98 8d       	ldd	r25, Y+24	; 0x18
     58a:	fc 01       	movw	r30, r24
     58c:	24 85       	ldd	r18, Z+12	; 0x0c
     58e:	35 85       	ldd	r19, Z+13	; 0x0d
     590:	46 85       	ldd	r20, Z+14	; 0x0e
     592:	57 85       	ldd	r21, Z+15	; 0x0f
     594:	8b 85       	ldd	r24, Y+11	; 0x0b
     596:	9c 85       	ldd	r25, Y+12	; 0x0c
     598:	ad 85       	ldd	r26, Y+13	; 0x0d
     59a:	be 85       	ldd	r27, Y+14	; 0x0e
     59c:	28 17       	cp	r18, r24
     59e:	39 07       	cpc	r19, r25
     5a0:	4a 07       	cpc	r20, r26
     5a2:	5b 07       	cpc	r21, r27
     5a4:	bc f4       	brge	.+46     	; 0x5d4 <pid_control+0x104>
		i_term =MAX_ERROR;
     5a6:	8f ef       	ldi	r24, 0xFF	; 255
     5a8:	9f e7       	ldi	r25, 0x7F	; 127
     5aa:	a0 e0       	ldi	r26, 0x00	; 0
     5ac:	b0 e0       	ldi	r27, 0x00	; 0
     5ae:	89 83       	std	Y+1, r24	; 0x01
     5b0:	9a 83       	std	Y+2, r25	; 0x02
     5b2:	ab 83       	std	Y+3, r26	; 0x03
     5b4:	bc 83       	std	Y+4, r27	; 0x04
		pid_st->I_sumError = pid_st->I_maxSumError;
     5b6:	8f 89       	ldd	r24, Y+23	; 0x17
     5b8:	98 8d       	ldd	r25, Y+24	; 0x18
     5ba:	fc 01       	movw	r30, r24
     5bc:	84 85       	ldd	r24, Z+12	; 0x0c
     5be:	95 85       	ldd	r25, Z+13	; 0x0d
     5c0:	a6 85       	ldd	r26, Z+14	; 0x0e
     5c2:	b7 85       	ldd	r27, Z+15	; 0x0f
     5c4:	2f 89       	ldd	r18, Y+23	; 0x17
     5c6:	38 8d       	ldd	r19, Y+24	; 0x18
     5c8:	f9 01       	movw	r30, r18
     5ca:	82 83       	std	Z+2, r24	; 0x02
     5cc:	93 83       	std	Z+3, r25	; 0x03
     5ce:	a4 83       	std	Z+4, r26	; 0x04
     5d0:	b5 83       	std	Z+5, r27	; 0x05
     5d2:	5a c0       	rjmp	.+180    	; 0x688 <pid_control+0x1b8>

	} else if (temp < -pid_st->I_maxSumError) {
     5d4:	8f 89       	ldd	r24, Y+23	; 0x17
     5d6:	98 8d       	ldd	r25, Y+24	; 0x18
     5d8:	fc 01       	movw	r30, r24
     5da:	84 85       	ldd	r24, Z+12	; 0x0c
     5dc:	95 85       	ldd	r25, Z+13	; 0x0d
     5de:	a6 85       	ldd	r26, Z+14	; 0x0e
     5e0:	b7 85       	ldd	r27, Z+15	; 0x0f
     5e2:	22 27       	eor	r18, r18
     5e4:	33 27       	eor	r19, r19
     5e6:	a9 01       	movw	r20, r18
     5e8:	28 1b       	sub	r18, r24
     5ea:	39 0b       	sbc	r19, r25
     5ec:	4a 0b       	sbc	r20, r26
     5ee:	5b 0b       	sbc	r21, r27
     5f0:	8b 85       	ldd	r24, Y+11	; 0x0b
     5f2:	9c 85       	ldd	r25, Y+12	; 0x0c
     5f4:	ad 85       	ldd	r26, Y+13	; 0x0d
     5f6:	be 85       	ldd	r27, Y+14	; 0x0e
     5f8:	82 17       	cp	r24, r18
     5fa:	93 07       	cpc	r25, r19
     5fc:	a4 07       	cpc	r26, r20
     5fe:	b5 07       	cpc	r27, r21
     600:	f4 f4       	brge	.+60     	; 0x63e <pid_control+0x16e>
		i_term = -MAX_ERROR ;
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	90 e8       	ldi	r25, 0x80	; 128
     606:	af ef       	ldi	r26, 0xFF	; 255
     608:	bf ef       	ldi	r27, 0xFF	; 255
     60a:	89 83       	std	Y+1, r24	; 0x01
     60c:	9a 83       	std	Y+2, r25	; 0x02
     60e:	ab 83       	std	Y+3, r26	; 0x03
     610:	bc 83       	std	Y+4, r27	; 0x04
		pid_st->I_sumError = -pid_st->I_maxSumError;
     612:	8f 89       	ldd	r24, Y+23	; 0x17
     614:	98 8d       	ldd	r25, Y+24	; 0x18
     616:	fc 01       	movw	r30, r24
     618:	84 85       	ldd	r24, Z+12	; 0x0c
     61a:	95 85       	ldd	r25, Z+13	; 0x0d
     61c:	a6 85       	ldd	r26, Z+14	; 0x0e
     61e:	b7 85       	ldd	r27, Z+15	; 0x0f
     620:	b0 95       	com	r27
     622:	a0 95       	com	r26
     624:	90 95       	com	r25
     626:	81 95       	neg	r24
     628:	9f 4f       	sbci	r25, 0xFF	; 255
     62a:	af 4f       	sbci	r26, 0xFF	; 255
     62c:	bf 4f       	sbci	r27, 0xFF	; 255
     62e:	2f 89       	ldd	r18, Y+23	; 0x17
     630:	38 8d       	ldd	r19, Y+24	; 0x18
     632:	f9 01       	movw	r30, r18
     634:	82 83       	std	Z+2, r24	; 0x02
     636:	93 83       	std	Z+3, r25	; 0x03
     638:	a4 83       	std	Z+4, r26	; 0x04
     63a:	b5 83       	std	Z+5, r27	; 0x05
     63c:	25 c0       	rjmp	.+74     	; 0x688 <pid_control+0x1b8>

	} else {
		pid_st->I_sumError = temp;
     63e:	2f 89       	ldd	r18, Y+23	; 0x17
     640:	38 8d       	ldd	r19, Y+24	; 0x18
     642:	8b 85       	ldd	r24, Y+11	; 0x0b
     644:	9c 85       	ldd	r25, Y+12	; 0x0c
     646:	ad 85       	ldd	r26, Y+13	; 0x0d
     648:	be 85       	ldd	r27, Y+14	; 0x0e
     64a:	f9 01       	movw	r30, r18
     64c:	82 83       	std	Z+2, r24	; 0x02
     64e:	93 83       	std	Z+3, r25	; 0x03
     650:	a4 83       	std	Z+4, r26	; 0x04
     652:	b5 83       	std	Z+5, r27	; 0x05
		i_term = pid_st->I_Factor * pid_st->I_sumError;
     654:	8f 89       	ldd	r24, Y+23	; 0x17
     656:	98 8d       	ldd	r25, Y+24	; 0x18
     658:	fc 01       	movw	r30, r24
     65a:	80 85       	ldd	r24, Z+8	; 0x08
     65c:	91 85       	ldd	r25, Z+9	; 0x09
     65e:	9c 01       	movw	r18, r24
     660:	99 0f       	add	r25, r25
     662:	44 0b       	sbc	r20, r20
     664:	55 0b       	sbc	r21, r21
     666:	8f 89       	ldd	r24, Y+23	; 0x17
     668:	98 8d       	ldd	r25, Y+24	; 0x18
     66a:	fc 01       	movw	r30, r24
     66c:	82 81       	ldd	r24, Z+2	; 0x02
     66e:	93 81       	ldd	r25, Z+3	; 0x03
     670:	a4 81       	ldd	r26, Z+4	; 0x04
     672:	b5 81       	ldd	r27, Z+5	; 0x05
     674:	bc 01       	movw	r22, r24
     676:	cd 01       	movw	r24, r26
     678:	0e 94 32 0e 	call	0x1c64	; 0x1c64 <__mulsi3>
     67c:	dc 01       	movw	r26, r24
     67e:	cb 01       	movw	r24, r22
     680:	89 83       	std	Y+1, r24	; 0x01
     682:	9a 83       	std	Y+2, r25	; 0x02
     684:	ab 83       	std	Y+3, r26	; 0x03
     686:	bc 83       	std	Y+4, r27	; 0x04
	}

	//calculate D
	d_term = pid_st->D_Factor * (pid_st->lastProcessValue - error);
     688:	8f 89       	ldd	r24, Y+23	; 0x17
     68a:	98 8d       	ldd	r25, Y+24	; 0x18
     68c:	fc 01       	movw	r30, r24
     68e:	42 85       	ldd	r20, Z+10	; 0x0a
     690:	53 85       	ldd	r21, Z+11	; 0x0b
     692:	8f 89       	ldd	r24, Y+23	; 0x17
     694:	98 8d       	ldd	r25, Y+24	; 0x18
     696:	fc 01       	movw	r30, r24
     698:	20 81       	ld	r18, Z
     69a:	31 81       	ldd	r19, Z+1	; 0x01
     69c:	8f 81       	ldd	r24, Y+7	; 0x07
     69e:	98 85       	ldd	r25, Y+8	; 0x08
     6a0:	28 1b       	sub	r18, r24
     6a2:	39 0b       	sbc	r19, r25
     6a4:	42 9f       	mul	r20, r18
     6a6:	c0 01       	movw	r24, r0
     6a8:	43 9f       	mul	r20, r19
     6aa:	90 0d       	add	r25, r0
     6ac:	52 9f       	mul	r21, r18
     6ae:	90 0d       	add	r25, r0
     6b0:	11 24       	eor	r1, r1
     6b2:	98 8b       	std	Y+16, r25	; 0x10
     6b4:	8f 87       	std	Y+15, r24	; 0x0f
	pid_st->lastProcessValue = error;
     6b6:	8f 89       	ldd	r24, Y+23	; 0x17
     6b8:	98 8d       	ldd	r25, Y+24	; 0x18
     6ba:	2f 81       	ldd	r18, Y+7	; 0x07
     6bc:	38 85       	ldd	r19, Y+8	; 0x08
     6be:	fc 01       	movw	r30, r24
     6c0:	31 83       	std	Z+1, r19	; 0x01
     6c2:	20 83       	st	Z, r18


	ret = (p_term + i_term + d_term) / SCALING_FACTOR;
     6c4:	89 85       	ldd	r24, Y+9	; 0x09
     6c6:	9a 85       	ldd	r25, Y+10	; 0x0a
     6c8:	9c 01       	movw	r18, r24
     6ca:	99 0f       	add	r25, r25
     6cc:	44 0b       	sbc	r20, r20
     6ce:	55 0b       	sbc	r21, r21
     6d0:	89 81       	ldd	r24, Y+1	; 0x01
     6d2:	9a 81       	ldd	r25, Y+2	; 0x02
     6d4:	ab 81       	ldd	r26, Y+3	; 0x03
     6d6:	bc 81       	ldd	r27, Y+4	; 0x04
     6d8:	28 0f       	add	r18, r24
     6da:	39 1f       	adc	r19, r25
     6dc:	4a 1f       	adc	r20, r26
     6de:	5b 1f       	adc	r21, r27
     6e0:	8f 85       	ldd	r24, Y+15	; 0x0f
     6e2:	98 89       	ldd	r25, Y+16	; 0x10
     6e4:	09 2e       	mov	r0, r25
     6e6:	00 0c       	add	r0, r0
     6e8:	aa 0b       	sbc	r26, r26
     6ea:	bb 0b       	sbc	r27, r27
     6ec:	82 0f       	add	r24, r18
     6ee:	93 1f       	adc	r25, r19
     6f0:	a4 1f       	adc	r26, r20
     6f2:	b5 1f       	adc	r27, r21
     6f4:	24 e6       	ldi	r18, 0x64	; 100
     6f6:	30 e0       	ldi	r19, 0x00	; 0
     6f8:	40 e0       	ldi	r20, 0x00	; 0
     6fa:	50 e0       	ldi	r21, 0x00	; 0
     6fc:	bc 01       	movw	r22, r24
     6fe:	cd 01       	movw	r24, r26
     700:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <__divmodsi4>
     704:	da 01       	movw	r26, r20
     706:	c9 01       	movw	r24, r18
     708:	89 8b       	std	Y+17, r24	; 0x11
     70a:	9a 8b       	std	Y+18, r25	; 0x12
     70c:	ab 8b       	std	Y+19, r26	; 0x13
     70e:	bc 8b       	std	Y+20, r27	; 0x14
	if (ret > 255) {
     710:	89 89       	ldd	r24, Y+17	; 0x11
     712:	9a 89       	ldd	r25, Y+18	; 0x12
     714:	ab 89       	ldd	r26, Y+19	; 0x13
     716:	bc 89       	ldd	r27, Y+20	; 0x14
     718:	8f 3f       	cpi	r24, 0xFF	; 255
     71a:	91 05       	cpc	r25, r1
     71c:	a1 05       	cpc	r26, r1
     71e:	b1 05       	cpc	r27, r1
     720:	19 f0       	breq	.+6      	; 0x728 <pid_control+0x258>
     722:	14 f0       	brlt	.+4      	; 0x728 <pid_control+0x258>
		return 255;
     724:	8f ef       	ldi	r24, 0xFF	; 255
     726:	09 c0       	rjmp	.+18     	; 0x73a <pid_control+0x26a>
	} else if (ret < 0) {
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	9a 89       	ldd	r25, Y+18	; 0x12
     72c:	ab 89       	ldd	r26, Y+19	; 0x13
     72e:	bc 89       	ldd	r27, Y+20	; 0x14
     730:	bb 23       	and	r27, r27
     732:	14 f4       	brge	.+4      	; 0x738 <pid_control+0x268>
		return 0;
     734:	80 e0       	ldi	r24, 0x00	; 0
     736:	01 c0       	rjmp	.+2      	; 0x73a <pid_control+0x26a>
	}else{
		return (uint8_t)ret;
     738:	89 89       	ldd	r24, Y+17	; 0x11
	}
}
     73a:	6c 96       	adiw	r28, 0x1c	; 28
     73c:	0f b6       	in	r0, 0x3f	; 63
     73e:	f8 94       	cli
     740:	de bf       	out	0x3e, r29	; 62
     742:	0f be       	out	0x3f, r0	; 63
     744:	cd bf       	out	0x3d, r28	; 61
     746:	df 91       	pop	r29
     748:	cf 91       	pop	r28
     74a:	08 95       	ret

0000074c <button_init>:
     74c:	cf 93       	push	r28
     74e:	df 93       	push	r29
     750:	1f 92       	push	r1
     752:	cd b7       	in	r28, 0x3d	; 61
     754:	de b7       	in	r29, 0x3e	; 62
     756:	89 83       	std	Y+1, r24	; 0x01
     758:	84 e2       	ldi	r24, 0x24	; 36
     75a:	90 e0       	ldi	r25, 0x00	; 0
     75c:	24 e2       	ldi	r18, 0x24	; 36
     75e:	30 e0       	ldi	r19, 0x00	; 0
     760:	f9 01       	movw	r30, r18
     762:	20 81       	ld	r18, Z
     764:	2f 7b       	andi	r18, 0xBF	; 191
     766:	fc 01       	movw	r30, r24
     768:	20 83       	st	Z, r18
     76a:	84 e2       	ldi	r24, 0x24	; 36
     76c:	90 e0       	ldi	r25, 0x00	; 0
     76e:	24 e2       	ldi	r18, 0x24	; 36
     770:	30 e0       	ldi	r19, 0x00	; 0
     772:	f9 01       	movw	r30, r18
     774:	20 81       	ld	r18, Z
     776:	2f 77       	andi	r18, 0x7F	; 127
     778:	fc 01       	movw	r30, r24
     77a:	20 83       	st	Z, r18
     77c:	85 e2       	ldi	r24, 0x25	; 37
     77e:	90 e0       	ldi	r25, 0x00	; 0
     780:	25 e2       	ldi	r18, 0x25	; 37
     782:	30 e0       	ldi	r19, 0x00	; 0
     784:	f9 01       	movw	r30, r18
     786:	20 81       	ld	r18, Z
     788:	20 64       	ori	r18, 0x40	; 64
     78a:	fc 01       	movw	r30, r24
     78c:	20 83       	st	Z, r18
     78e:	85 e2       	ldi	r24, 0x25	; 37
     790:	90 e0       	ldi	r25, 0x00	; 0
     792:	25 e2       	ldi	r18, 0x25	; 37
     794:	30 e0       	ldi	r19, 0x00	; 0
     796:	f9 01       	movw	r30, r18
     798:	20 81       	ld	r18, Z
     79a:	20 68       	ori	r18, 0x80	; 128
     79c:	fc 01       	movw	r30, r24
     79e:	20 83       	st	Z, r18
     7a0:	89 81       	ldd	r24, Y+1	; 0x01
     7a2:	88 23       	and	r24, r24
     7a4:	39 f0       	breq	.+14     	; 0x7b4 <button_init+0x68>
     7a6:	0e 94 af 0b 	call	0x175e	; 0x175e <timer1_start>
     7aa:	81 e9       	ldi	r24, 0x91	; 145
     7ac:	94 e0       	ldi	r25, 0x04	; 4
     7ae:	0e 94 9d 0b 	call	0x173a	; 0x173a <timer1_setCallback>
     7b2:	1b c0       	rjmp	.+54     	; 0x7ea <button_init+0x9e>
     7b4:	88 e6       	ldi	r24, 0x68	; 104
     7b6:	90 e0       	ldi	r25, 0x00	; 0
     7b8:	28 e6       	ldi	r18, 0x68	; 104
     7ba:	30 e0       	ldi	r19, 0x00	; 0
     7bc:	f9 01       	movw	r30, r18
     7be:	20 81       	ld	r18, Z
     7c0:	21 60       	ori	r18, 0x01	; 1
     7c2:	fc 01       	movw	r30, r24
     7c4:	20 83       	st	Z, r18
     7c6:	8b e6       	ldi	r24, 0x6B	; 107
     7c8:	90 e0       	ldi	r25, 0x00	; 0
     7ca:	2b e6       	ldi	r18, 0x6B	; 107
     7cc:	30 e0       	ldi	r19, 0x00	; 0
     7ce:	f9 01       	movw	r30, r18
     7d0:	20 81       	ld	r18, Z
     7d2:	20 64       	ori	r18, 0x40	; 64
     7d4:	fc 01       	movw	r30, r24
     7d6:	20 83       	st	Z, r18
     7d8:	8b e6       	ldi	r24, 0x6B	; 107
     7da:	90 e0       	ldi	r25, 0x00	; 0
     7dc:	2b e6       	ldi	r18, 0x6B	; 107
     7de:	30 e0       	ldi	r19, 0x00	; 0
     7e0:	f9 01       	movw	r30, r18
     7e2:	20 81       	ld	r18, Z
     7e4:	20 68       	ori	r18, 0x80	; 128
     7e6:	fc 01       	movw	r30, r24
     7e8:	20 83       	st	Z, r18
     7ea:	0f 90       	pop	r0
     7ec:	df 91       	pop	r29
     7ee:	cf 91       	pop	r28
     7f0:	08 95       	ret

000007f2 <button_isJoystickPressed>:
     7f2:	cf 93       	push	r28
     7f4:	df 93       	push	r29
     7f6:	cd b7       	in	r28, 0x3d	; 61
     7f8:	de b7       	in	r29, 0x3e	; 62
     7fa:	83 e2       	ldi	r24, 0x23	; 35
     7fc:	90 e0       	ldi	r25, 0x00	; 0
     7fe:	fc 01       	movw	r30, r24
     800:	80 81       	ld	r24, Z
     802:	88 23       	and	r24, r24
     804:	14 f4       	brge	.+4      	; 0x80a <button_isJoystickPressed+0x18>
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	01 c0       	rjmp	.+2      	; 0x80c <button_isJoystickPressed+0x1a>
     80a:	81 e0       	ldi	r24, 0x01	; 1
     80c:	df 91       	pop	r29
     80e:	cf 91       	pop	r28
     810:	08 95       	ret

00000812 <button_isRotaryPressed>:
     812:	cf 93       	push	r28
     814:	df 93       	push	r29
     816:	cd b7       	in	r28, 0x3d	; 61
     818:	de b7       	in	r29, 0x3e	; 62
     81a:	83 e2       	ldi	r24, 0x23	; 35
     81c:	90 e0       	ldi	r25, 0x00	; 0
     81e:	fc 01       	movw	r30, r24
     820:	80 81       	ld	r24, Z
     822:	88 2f       	mov	r24, r24
     824:	90 e0       	ldi	r25, 0x00	; 0
     826:	80 74       	andi	r24, 0x40	; 64
     828:	99 27       	eor	r25, r25
     82a:	89 2b       	or	r24, r25
     82c:	11 f0       	breq	.+4      	; 0x832 <button_isRotaryPressed+0x20>
     82e:	80 e0       	ldi	r24, 0x00	; 0
     830:	01 c0       	rjmp	.+2      	; 0x834 <button_isRotaryPressed+0x22>
     832:	81 e0       	ldi	r24, 0x01	; 1
     834:	df 91       	pop	r29
     836:	cf 91       	pop	r28
     838:	08 95       	ret

0000083a <__vector_9>:
     83a:	1f 92       	push	r1
     83c:	0f 92       	push	r0
     83e:	00 90 5f 00 	lds	r0, 0x005F
     842:	0f 92       	push	r0
     844:	11 24       	eor	r1, r1
     846:	00 90 5b 00 	lds	r0, 0x005B
     84a:	0f 92       	push	r0
     84c:	2f 93       	push	r18
     84e:	3f 93       	push	r19
     850:	4f 93       	push	r20
     852:	5f 93       	push	r21
     854:	6f 93       	push	r22
     856:	7f 93       	push	r23
     858:	8f 93       	push	r24
     85a:	9f 93       	push	r25
     85c:	af 93       	push	r26
     85e:	bf 93       	push	r27
     860:	ef 93       	push	r30
     862:	ff 93       	push	r31
     864:	cf 93       	push	r28
     866:	df 93       	push	r29
     868:	cd b7       	in	r28, 0x3d	; 61
     86a:	de b7       	in	r29, 0x3e	; 62
     86c:	0e 94 09 04 	call	0x812	; 0x812 <button_isRotaryPressed>
     870:	88 23       	and	r24, r24
     872:	61 f0       	breq	.+24     	; 0x88c <__vector_9+0x52>
     874:	80 91 3c 08 	lds	r24, 0x083C
     878:	90 91 3d 08 	lds	r25, 0x083D
     87c:	89 2b       	or	r24, r25
     87e:	31 f0       	breq	.+12     	; 0x88c <__vector_9+0x52>
     880:	80 91 3c 08 	lds	r24, 0x083C
     884:	90 91 3d 08 	lds	r25, 0x083D
     888:	fc 01       	movw	r30, r24
     88a:	09 95       	icall
     88c:	0e 94 f9 03 	call	0x7f2	; 0x7f2 <button_isJoystickPressed>
     890:	88 23       	and	r24, r24
     892:	61 f0       	breq	.+24     	; 0x8ac <__vector_9+0x72>
     894:	80 91 3e 08 	lds	r24, 0x083E
     898:	90 91 3f 08 	lds	r25, 0x083F
     89c:	89 2b       	or	r24, r25
     89e:	31 f0       	breq	.+12     	; 0x8ac <__vector_9+0x72>
     8a0:	80 91 3e 08 	lds	r24, 0x083E
     8a4:	90 91 3f 08 	lds	r25, 0x083F
     8a8:	fc 01       	movw	r30, r24
     8aa:	09 95       	icall
     8ac:	df 91       	pop	r29
     8ae:	cf 91       	pop	r28
     8b0:	ff 91       	pop	r31
     8b2:	ef 91       	pop	r30
     8b4:	bf 91       	pop	r27
     8b6:	af 91       	pop	r26
     8b8:	9f 91       	pop	r25
     8ba:	8f 91       	pop	r24
     8bc:	7f 91       	pop	r23
     8be:	6f 91       	pop	r22
     8c0:	5f 91       	pop	r21
     8c2:	4f 91       	pop	r20
     8c4:	3f 91       	pop	r19
     8c6:	2f 91       	pop	r18
     8c8:	0f 90       	pop	r0
     8ca:	00 92 5b 00 	sts	0x005B, r0
     8ce:	0f 90       	pop	r0
     8d0:	00 92 5f 00 	sts	0x005F, r0
     8d4:	0f 90       	pop	r0
     8d6:	1f 90       	pop	r1
     8d8:	18 95       	reti

000008da <button_setRotaryButtonCallback>:
     8da:	cf 93       	push	r28
     8dc:	df 93       	push	r29
     8de:	00 d0       	rcall	.+0      	; 0x8e0 <button_setRotaryButtonCallback+0x6>
     8e0:	cd b7       	in	r28, 0x3d	; 61
     8e2:	de b7       	in	r29, 0x3e	; 62
     8e4:	9a 83       	std	Y+2, r25	; 0x02
     8e6:	89 83       	std	Y+1, r24	; 0x01
     8e8:	89 81       	ldd	r24, Y+1	; 0x01
     8ea:	9a 81       	ldd	r25, Y+2	; 0x02
     8ec:	90 93 3d 08 	sts	0x083D, r25
     8f0:	80 93 3c 08 	sts	0x083C, r24
     8f4:	0f 90       	pop	r0
     8f6:	0f 90       	pop	r0
     8f8:	df 91       	pop	r29
     8fa:	cf 91       	pop	r28
     8fc:	08 95       	ret

000008fe <button_setJoystickButtonCallback>:
     8fe:	cf 93       	push	r28
     900:	df 93       	push	r29
     902:	00 d0       	rcall	.+0      	; 0x904 <button_setJoystickButtonCallback+0x6>
     904:	cd b7       	in	r28, 0x3d	; 61
     906:	de b7       	in	r29, 0x3e	; 62
     908:	9a 83       	std	Y+2, r25	; 0x02
     90a:	89 83       	std	Y+1, r24	; 0x01
     90c:	89 81       	ldd	r24, Y+1	; 0x01
     90e:	9a 81       	ldd	r25, Y+2	; 0x02
     910:	90 93 3f 08 	sts	0x083F, r25
     914:	80 93 3e 08 	sts	0x083E, r24
     918:	0f 90       	pop	r0
     91a:	0f 90       	pop	r0
     91c:	df 91       	pop	r29
     91e:	cf 91       	pop	r28
     920:	08 95       	ret

00000922 <button_checkState>:
     922:	cf 93       	push	r28
     924:	df 93       	push	r29
     926:	00 d0       	rcall	.+0      	; 0x928 <button_checkState+0x6>
     928:	1f 92       	push	r1
     92a:	cd b7       	in	r28, 0x3d	; 61
     92c:	de b7       	in	r29, 0x3e	; 62
     92e:	80 91 40 08 	lds	r24, 0x0840
     932:	8b 83       	std	Y+3, r24	; 0x03
     934:	80 91 41 08 	lds	r24, 0x0841
     938:	88 2f       	mov	r24, r24
     93a:	90 e0       	ldi	r25, 0x00	; 0
     93c:	8e 5b       	subi	r24, 0xBE	; 190
     93e:	97 4f       	sbci	r25, 0xF7	; 247
     940:	fc 01       	movw	r30, r24
     942:	10 82       	st	Z, r1
     944:	0e 94 f9 03 	call	0x7f2	; 0x7f2 <button_isJoystickPressed>
     948:	88 23       	and	r24, r24
     94a:	89 f0       	breq	.+34     	; 0x96e <button_checkState+0x4c>
     94c:	80 91 41 08 	lds	r24, 0x0841
     950:	88 2f       	mov	r24, r24
     952:	90 e0       	ldi	r25, 0x00	; 0
     954:	20 91 41 08 	lds	r18, 0x0841
     958:	22 2f       	mov	r18, r18
     95a:	30 e0       	ldi	r19, 0x00	; 0
     95c:	2e 5b       	subi	r18, 0xBE	; 190
     95e:	37 4f       	sbci	r19, 0xF7	; 247
     960:	f9 01       	movw	r30, r18
     962:	20 81       	ld	r18, Z
     964:	21 60       	ori	r18, 0x01	; 1
     966:	8e 5b       	subi	r24, 0xBE	; 190
     968:	97 4f       	sbci	r25, 0xF7	; 247
     96a:	fc 01       	movw	r30, r24
     96c:	20 83       	st	Z, r18
     96e:	0e 94 09 04 	call	0x812	; 0x812 <button_isRotaryPressed>
     972:	88 23       	and	r24, r24
     974:	89 f0       	breq	.+34     	; 0x998 <button_checkState+0x76>
     976:	80 91 41 08 	lds	r24, 0x0841
     97a:	88 2f       	mov	r24, r24
     97c:	90 e0       	ldi	r25, 0x00	; 0
     97e:	20 91 41 08 	lds	r18, 0x0841
     982:	22 2f       	mov	r18, r18
     984:	30 e0       	ldi	r19, 0x00	; 0
     986:	2e 5b       	subi	r18, 0xBE	; 190
     988:	37 4f       	sbci	r19, 0xF7	; 247
     98a:	f9 01       	movw	r30, r18
     98c:	20 81       	ld	r18, Z
     98e:	22 60       	ori	r18, 0x02	; 2
     990:	8e 5b       	subi	r24, 0xBE	; 190
     992:	97 4f       	sbci	r25, 0xF7	; 247
     994:	fc 01       	movw	r30, r24
     996:	20 83       	st	Z, r18
     998:	80 91 41 08 	lds	r24, 0x0841
     99c:	8f 5f       	subi	r24, 0xFF	; 255
     99e:	80 93 41 08 	sts	0x0841, r24
     9a2:	80 91 41 08 	lds	r24, 0x0841
     9a6:	85 30       	cpi	r24, 0x05	; 5
     9a8:	11 f4       	brne	.+4      	; 0x9ae <button_checkState+0x8c>
     9aa:	10 92 41 08 	sts	0x0841, r1
     9ae:	8f ef       	ldi	r24, 0xFF	; 255
     9b0:	89 83       	std	Y+1, r24	; 0x01
     9b2:	1a 82       	std	Y+2, r1	; 0x02
     9b4:	0d c0       	rjmp	.+26     	; 0x9d0 <button_checkState+0xae>
     9b6:	8a 81       	ldd	r24, Y+2	; 0x02
     9b8:	88 2f       	mov	r24, r24
     9ba:	90 e0       	ldi	r25, 0x00	; 0
     9bc:	8e 5b       	subi	r24, 0xBE	; 190
     9be:	97 4f       	sbci	r25, 0xF7	; 247
     9c0:	fc 01       	movw	r30, r24
     9c2:	80 81       	ld	r24, Z
     9c4:	99 81       	ldd	r25, Y+1	; 0x01
     9c6:	89 23       	and	r24, r25
     9c8:	89 83       	std	Y+1, r24	; 0x01
     9ca:	8a 81       	ldd	r24, Y+2	; 0x02
     9cc:	8f 5f       	subi	r24, 0xFF	; 255
     9ce:	8a 83       	std	Y+2, r24	; 0x02
     9d0:	8a 81       	ldd	r24, Y+2	; 0x02
     9d2:	85 30       	cpi	r24, 0x05	; 5
     9d4:	80 f3       	brcs	.-32     	; 0x9b6 <button_checkState+0x94>
     9d6:	89 81       	ldd	r24, Y+1	; 0x01
     9d8:	80 93 40 08 	sts	0x0840, r24
     9dc:	80 91 40 08 	lds	r24, 0x0840
     9e0:	88 2f       	mov	r24, r24
     9e2:	90 e0       	ldi	r25, 0x00	; 0
     9e4:	81 70       	andi	r24, 0x01	; 1
     9e6:	99 27       	eor	r25, r25
     9e8:	89 2b       	or	r24, r25
     9ea:	99 f0       	breq	.+38     	; 0xa12 <button_checkState+0xf0>
     9ec:	8b 81       	ldd	r24, Y+3	; 0x03
     9ee:	88 2f       	mov	r24, r24
     9f0:	90 e0       	ldi	r25, 0x00	; 0
     9f2:	81 70       	andi	r24, 0x01	; 1
     9f4:	99 27       	eor	r25, r25
     9f6:	89 2b       	or	r24, r25
     9f8:	61 f4       	brne	.+24     	; 0xa12 <button_checkState+0xf0>
     9fa:	80 91 3e 08 	lds	r24, 0x083E
     9fe:	90 91 3f 08 	lds	r25, 0x083F
     a02:	89 2b       	or	r24, r25
     a04:	31 f0       	breq	.+12     	; 0xa12 <button_checkState+0xf0>
     a06:	80 91 3e 08 	lds	r24, 0x083E
     a0a:	90 91 3f 08 	lds	r25, 0x083F
     a0e:	fc 01       	movw	r30, r24
     a10:	09 95       	icall
     a12:	80 91 40 08 	lds	r24, 0x0840
     a16:	88 2f       	mov	r24, r24
     a18:	90 e0       	ldi	r25, 0x00	; 0
     a1a:	82 70       	andi	r24, 0x02	; 2
     a1c:	99 27       	eor	r25, r25
     a1e:	89 2b       	or	r24, r25
     a20:	99 f0       	breq	.+38     	; 0xa48 <button_checkState+0x126>
     a22:	8b 81       	ldd	r24, Y+3	; 0x03
     a24:	88 2f       	mov	r24, r24
     a26:	90 e0       	ldi	r25, 0x00	; 0
     a28:	82 70       	andi	r24, 0x02	; 2
     a2a:	99 27       	eor	r25, r25
     a2c:	89 2b       	or	r24, r25
     a2e:	61 f4       	brne	.+24     	; 0xa48 <button_checkState+0x126>
     a30:	80 91 3c 08 	lds	r24, 0x083C
     a34:	90 91 3d 08 	lds	r25, 0x083D
     a38:	89 2b       	or	r24, r25
     a3a:	31 f0       	breq	.+12     	; 0xa48 <button_checkState+0x126>
     a3c:	80 91 3c 08 	lds	r24, 0x083C
     a40:	90 91 3d 08 	lds	r25, 0x083D
     a44:	fc 01       	movw	r30, r24
     a46:	09 95       	icall
     a48:	0f 90       	pop	r0
     a4a:	0f 90       	pop	r0
     a4c:	0f 90       	pop	r0
     a4e:	df 91       	pop	r29
     a50:	cf 91       	pop	r28
     a52:	08 95       	ret

00000a54 <led_redInit>:
     a54:	cf 93       	push	r28
     a56:	df 93       	push	r29
     a58:	cd b7       	in	r28, 0x3d	; 61
     a5a:	de b7       	in	r29, 0x3e	; 62
     a5c:	83 e3       	ldi	r24, 0x33	; 51
     a5e:	90 e0       	ldi	r25, 0x00	; 0
     a60:	23 e3       	ldi	r18, 0x33	; 51
     a62:	30 e0       	ldi	r19, 0x00	; 0
     a64:	f9 01       	movw	r30, r18
     a66:	20 81       	ld	r18, Z
     a68:	22 60       	ori	r18, 0x02	; 2
     a6a:	fc 01       	movw	r30, r24
     a6c:	20 83       	st	Z, r18
     a6e:	0e 94 5d 05 	call	0xaba	; 0xaba <led_redOff>
     a72:	df 91       	pop	r29
     a74:	cf 91       	pop	r28
     a76:	08 95       	ret

00000a78 <led_redToggle>:
     a78:	cf 93       	push	r28
     a7a:	df 93       	push	r29
     a7c:	cd b7       	in	r28, 0x3d	; 61
     a7e:	de b7       	in	r29, 0x3e	; 62
     a80:	84 e3       	ldi	r24, 0x34	; 52
     a82:	90 e0       	ldi	r25, 0x00	; 0
     a84:	24 e3       	ldi	r18, 0x34	; 52
     a86:	30 e0       	ldi	r19, 0x00	; 0
     a88:	f9 01       	movw	r30, r18
     a8a:	30 81       	ld	r19, Z
     a8c:	22 e0       	ldi	r18, 0x02	; 2
     a8e:	23 27       	eor	r18, r19
     a90:	fc 01       	movw	r30, r24
     a92:	20 83       	st	Z, r18
     a94:	df 91       	pop	r29
     a96:	cf 91       	pop	r28
     a98:	08 95       	ret

00000a9a <led_redOn>:
     a9a:	cf 93       	push	r28
     a9c:	df 93       	push	r29
     a9e:	cd b7       	in	r28, 0x3d	; 61
     aa0:	de b7       	in	r29, 0x3e	; 62
     aa2:	84 e3       	ldi	r24, 0x34	; 52
     aa4:	90 e0       	ldi	r25, 0x00	; 0
     aa6:	24 e3       	ldi	r18, 0x34	; 52
     aa8:	30 e0       	ldi	r19, 0x00	; 0
     aaa:	f9 01       	movw	r30, r18
     aac:	20 81       	ld	r18, Z
     aae:	2d 7f       	andi	r18, 0xFD	; 253
     ab0:	fc 01       	movw	r30, r24
     ab2:	20 83       	st	Z, r18
     ab4:	df 91       	pop	r29
     ab6:	cf 91       	pop	r28
     ab8:	08 95       	ret

00000aba <led_redOff>:
     aba:	cf 93       	push	r28
     abc:	df 93       	push	r29
     abe:	cd b7       	in	r28, 0x3d	; 61
     ac0:	de b7       	in	r29, 0x3e	; 62
     ac2:	84 e3       	ldi	r24, 0x34	; 52
     ac4:	90 e0       	ldi	r25, 0x00	; 0
     ac6:	24 e3       	ldi	r18, 0x34	; 52
     ac8:	30 e0       	ldi	r19, 0x00	; 0
     aca:	f9 01       	movw	r30, r18
     acc:	20 81       	ld	r18, Z
     ace:	22 60       	ori	r18, 0x02	; 2
     ad0:	fc 01       	movw	r30, r24
     ad2:	20 83       	st	Z, r18
     ad4:	df 91       	pop	r29
     ad6:	cf 91       	pop	r28
     ad8:	08 95       	ret

00000ada <led_yellowInit>:
     ada:	cf 93       	push	r28
     adc:	df 93       	push	r29
     ade:	cd b7       	in	r28, 0x3d	; 61
     ae0:	de b7       	in	r29, 0x3e	; 62
     ae2:	80 e3       	ldi	r24, 0x30	; 48
     ae4:	90 e0       	ldi	r25, 0x00	; 0
     ae6:	20 e3       	ldi	r18, 0x30	; 48
     ae8:	30 e0       	ldi	r19, 0x00	; 0
     aea:	f9 01       	movw	r30, r18
     aec:	20 81       	ld	r18, Z
     aee:	20 68       	ori	r18, 0x80	; 128
     af0:	fc 01       	movw	r30, r24
     af2:	20 83       	st	Z, r18
     af4:	0e 94 a0 05 	call	0xb40	; 0xb40 <led_yellowOff>
     af8:	df 91       	pop	r29
     afa:	cf 91       	pop	r28
     afc:	08 95       	ret

00000afe <led_yellowToggle>:
     afe:	cf 93       	push	r28
     b00:	df 93       	push	r29
     b02:	cd b7       	in	r28, 0x3d	; 61
     b04:	de b7       	in	r29, 0x3e	; 62
     b06:	81 e3       	ldi	r24, 0x31	; 49
     b08:	90 e0       	ldi	r25, 0x00	; 0
     b0a:	21 e3       	ldi	r18, 0x31	; 49
     b0c:	30 e0       	ldi	r19, 0x00	; 0
     b0e:	f9 01       	movw	r30, r18
     b10:	30 81       	ld	r19, Z
     b12:	20 e8       	ldi	r18, 0x80	; 128
     b14:	23 27       	eor	r18, r19
     b16:	fc 01       	movw	r30, r24
     b18:	20 83       	st	Z, r18
     b1a:	df 91       	pop	r29
     b1c:	cf 91       	pop	r28
     b1e:	08 95       	ret

00000b20 <led_yellowOn>:
     b20:	cf 93       	push	r28
     b22:	df 93       	push	r29
     b24:	cd b7       	in	r28, 0x3d	; 61
     b26:	de b7       	in	r29, 0x3e	; 62
     b28:	81 e3       	ldi	r24, 0x31	; 49
     b2a:	90 e0       	ldi	r25, 0x00	; 0
     b2c:	21 e3       	ldi	r18, 0x31	; 49
     b2e:	30 e0       	ldi	r19, 0x00	; 0
     b30:	f9 01       	movw	r30, r18
     b32:	20 81       	ld	r18, Z
     b34:	2f 77       	andi	r18, 0x7F	; 127
     b36:	fc 01       	movw	r30, r24
     b38:	20 83       	st	Z, r18
     b3a:	df 91       	pop	r29
     b3c:	cf 91       	pop	r28
     b3e:	08 95       	ret

00000b40 <led_yellowOff>:
     b40:	cf 93       	push	r28
     b42:	df 93       	push	r29
     b44:	cd b7       	in	r28, 0x3d	; 61
     b46:	de b7       	in	r29, 0x3e	; 62
     b48:	81 e3       	ldi	r24, 0x31	; 49
     b4a:	90 e0       	ldi	r25, 0x00	; 0
     b4c:	21 e3       	ldi	r18, 0x31	; 49
     b4e:	30 e0       	ldi	r19, 0x00	; 0
     b50:	f9 01       	movw	r30, r18
     b52:	20 81       	ld	r18, Z
     b54:	20 68       	ori	r18, 0x80	; 128
     b56:	fc 01       	movw	r30, r24
     b58:	20 83       	st	Z, r18
     b5a:	df 91       	pop	r29
     b5c:	cf 91       	pop	r28
     b5e:	08 95       	ret

00000b60 <led_greenInit>:
     b60:	cf 93       	push	r28
     b62:	df 93       	push	r29
     b64:	cd b7       	in	r28, 0x3d	; 61
     b66:	de b7       	in	r29, 0x3e	; 62
     b68:	80 e3       	ldi	r24, 0x30	; 48
     b6a:	90 e0       	ldi	r25, 0x00	; 0
     b6c:	20 e3       	ldi	r18, 0x30	; 48
     b6e:	30 e0       	ldi	r19, 0x00	; 0
     b70:	f9 01       	movw	r30, r18
     b72:	20 81       	ld	r18, Z
     b74:	20 64       	ori	r18, 0x40	; 64
     b76:	fc 01       	movw	r30, r24
     b78:	20 83       	st	Z, r18
     b7a:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <led_greenOff>
     b7e:	df 91       	pop	r29
     b80:	cf 91       	pop	r28
     b82:	08 95       	ret

00000b84 <led_greenToggle>:
     b84:	cf 93       	push	r28
     b86:	df 93       	push	r29
     b88:	cd b7       	in	r28, 0x3d	; 61
     b8a:	de b7       	in	r29, 0x3e	; 62
     b8c:	81 e3       	ldi	r24, 0x31	; 49
     b8e:	90 e0       	ldi	r25, 0x00	; 0
     b90:	21 e3       	ldi	r18, 0x31	; 49
     b92:	30 e0       	ldi	r19, 0x00	; 0
     b94:	f9 01       	movw	r30, r18
     b96:	30 81       	ld	r19, Z
     b98:	20 e4       	ldi	r18, 0x40	; 64
     b9a:	23 27       	eor	r18, r19
     b9c:	fc 01       	movw	r30, r24
     b9e:	20 83       	st	Z, r18
     ba0:	df 91       	pop	r29
     ba2:	cf 91       	pop	r28
     ba4:	08 95       	ret

00000ba6 <led_greenOn>:
     ba6:	cf 93       	push	r28
     ba8:	df 93       	push	r29
     baa:	cd b7       	in	r28, 0x3d	; 61
     bac:	de b7       	in	r29, 0x3e	; 62
     bae:	81 e3       	ldi	r24, 0x31	; 49
     bb0:	90 e0       	ldi	r25, 0x00	; 0
     bb2:	21 e3       	ldi	r18, 0x31	; 49
     bb4:	30 e0       	ldi	r19, 0x00	; 0
     bb6:	f9 01       	movw	r30, r18
     bb8:	20 81       	ld	r18, Z
     bba:	2f 7b       	andi	r18, 0xBF	; 191
     bbc:	fc 01       	movw	r30, r24
     bbe:	20 83       	st	Z, r18
     bc0:	df 91       	pop	r29
     bc2:	cf 91       	pop	r28
     bc4:	08 95       	ret

00000bc6 <led_greenOff>:
     bc6:	cf 93       	push	r28
     bc8:	df 93       	push	r29
     bca:	cd b7       	in	r28, 0x3d	; 61
     bcc:	de b7       	in	r29, 0x3e	; 62
     bce:	81 e3       	ldi	r24, 0x31	; 49
     bd0:	90 e0       	ldi	r25, 0x00	; 0
     bd2:	21 e3       	ldi	r18, 0x31	; 49
     bd4:	30 e0       	ldi	r19, 0x00	; 0
     bd6:	f9 01       	movw	r30, r18
     bd8:	20 81       	ld	r18, Z
     bda:	20 64       	ori	r18, 0x40	; 64
     bdc:	fc 01       	movw	r30, r24
     bde:	20 83       	st	Z, r18
     be0:	df 91       	pop	r29
     be2:	cf 91       	pop	r28
     be4:	08 95       	ret

00000be6 <__iCliRetVal>:
    sei();
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
     be6:	cf 93       	push	r28
     be8:	df 93       	push	r29
     bea:	cd b7       	in	r28, 0x3d	; 61
     bec:	de b7       	in	r29, 0x3e	; 62
    cli();
     bee:	f8 94       	cli
    return 1;
     bf0:	81 e0       	ldi	r24, 0x01	; 1
}
     bf2:	df 91       	pop	r29
     bf4:	cf 91       	pop	r28
     bf6:	08 95       	ret

00000bf8 <__iRestore>:
    __asm__ volatile ("" ::: "memory");
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
     bf8:	cf 93       	push	r28
     bfa:	df 93       	push	r29
     bfc:	00 d0       	rcall	.+0      	; 0xbfe <__iRestore+0x6>
     bfe:	cd b7       	in	r28, 0x3d	; 61
     c00:	de b7       	in	r29, 0x3e	; 62
     c02:	9a 83       	std	Y+2, r25	; 0x02
     c04:	89 83       	std	Y+1, r24	; 0x01
    SREG = *__s;
     c06:	8f e5       	ldi	r24, 0x5F	; 95
     c08:	90 e0       	ldi	r25, 0x00	; 0
     c0a:	29 81       	ldd	r18, Y+1	; 0x01
     c0c:	3a 81       	ldd	r19, Y+2	; 0x02
     c0e:	f9 01       	movw	r30, r18
     c10:	20 81       	ld	r18, Z
     c12:	fc 01       	movw	r30, r24
     c14:	20 83       	st	Z, r18
    __asm__ volatile ("" ::: "memory");
}
     c16:	0f 90       	pop	r0
     c18:	0f 90       	pop	r0
     c1a:	df 91       	pop	r29
     c1c:	cf 91       	pop	r28
     c1e:	08 95       	ret

00000c20 <motorFrequency_init>:
     c20:	cf 93       	push	r28
     c22:	df 93       	push	r29
     c24:	cd b7       	in	r28, 0x3d	; 61
     c26:	de b7       	in	r29, 0x3e	; 62
     c28:	87 e4       	ldi	r24, 0x47	; 71
     c2a:	98 e0       	ldi	r25, 0x08	; 8
     c2c:	90 93 70 08 	sts	0x0870, r25
     c30:	80 93 6f 08 	sts	0x086F, r24
     c34:	89 e6       	ldi	r24, 0x69	; 105
     c36:	90 e0       	ldi	r25, 0x00	; 0
     c38:	29 e6       	ldi	r18, 0x69	; 105
     c3a:	30 e0       	ldi	r19, 0x00	; 0
     c3c:	f9 01       	movw	r30, r18
     c3e:	20 81       	ld	r18, Z
     c40:	22 60       	ori	r18, 0x02	; 2
     c42:	fc 01       	movw	r30, r24
     c44:	20 83       	st	Z, r18
     c46:	89 e6       	ldi	r24, 0x69	; 105
     c48:	90 e0       	ldi	r25, 0x00	; 0
     c4a:	29 e6       	ldi	r18, 0x69	; 105
     c4c:	30 e0       	ldi	r19, 0x00	; 0
     c4e:	f9 01       	movw	r30, r18
     c50:	20 81       	ld	r18, Z
     c52:	21 60       	ori	r18, 0x01	; 1
     c54:	fc 01       	movw	r30, r24
     c56:	20 83       	st	Z, r18
     c58:	8d e3       	ldi	r24, 0x3D	; 61
     c5a:	90 e0       	ldi	r25, 0x00	; 0
     c5c:	2d e3       	ldi	r18, 0x3D	; 61
     c5e:	30 e0       	ldi	r19, 0x00	; 0
     c60:	f9 01       	movw	r30, r18
     c62:	20 81       	ld	r18, Z
     c64:	21 60       	ori	r18, 0x01	; 1
     c66:	fc 01       	movw	r30, r24
     c68:	20 83       	st	Z, r18
     c6a:	8c e3       	ldi	r24, 0x3C	; 60
     c6c:	90 e0       	ldi	r25, 0x00	; 0
     c6e:	2c e3       	ldi	r18, 0x3C	; 60
     c70:	30 e0       	ldi	r19, 0x00	; 0
     c72:	f9 01       	movw	r30, r18
     c74:	20 81       	ld	r18, Z
     c76:	21 60       	ori	r18, 0x01	; 1
     c78:	fc 01       	movw	r30, r24
     c7a:	20 83       	st	Z, r18
     c7c:	81 e2       	ldi	r24, 0x21	; 33
     c7e:	91 e0       	ldi	r25, 0x01	; 1
     c80:	21 e2       	ldi	r18, 0x21	; 33
     c82:	31 e0       	ldi	r19, 0x01	; 1
     c84:	f9 01       	movw	r30, r18
     c86:	20 81       	ld	r18, Z
     c88:	2f 7e       	andi	r18, 0xEF	; 239
     c8a:	fc 01       	movw	r30, r24
     c8c:	20 83       	st	Z, r18
     c8e:	81 e2       	ldi	r24, 0x21	; 33
     c90:	91 e0       	ldi	r25, 0x01	; 1
     c92:	21 e2       	ldi	r18, 0x21	; 33
     c94:	31 e0       	ldi	r19, 0x01	; 1
     c96:	f9 01       	movw	r30, r18
     c98:	20 81       	ld	r18, Z
     c9a:	28 60       	ori	r18, 0x08	; 8
     c9c:	fc 01       	movw	r30, r24
     c9e:	20 83       	st	Z, r18
     ca0:	80 e2       	ldi	r24, 0x20	; 32
     ca2:	91 e0       	ldi	r25, 0x01	; 1
     ca4:	20 e2       	ldi	r18, 0x20	; 32
     ca6:	31 e0       	ldi	r19, 0x01	; 1
     ca8:	f9 01       	movw	r30, r18
     caa:	20 81       	ld	r18, Z
     cac:	2d 7f       	andi	r18, 0xFD	; 253
     cae:	fc 01       	movw	r30, r24
     cb0:	20 83       	st	Z, r18
     cb2:	80 e2       	ldi	r24, 0x20	; 32
     cb4:	91 e0       	ldi	r25, 0x01	; 1
     cb6:	20 e2       	ldi	r18, 0x20	; 32
     cb8:	31 e0       	ldi	r19, 0x01	; 1
     cba:	f9 01       	movw	r30, r18
     cbc:	20 81       	ld	r18, Z
     cbe:	2e 7f       	andi	r18, 0xFE	; 254
     cc0:	fc 01       	movw	r30, r24
     cc2:	20 83       	st	Z, r18
     cc4:	81 e2       	ldi	r24, 0x21	; 33
     cc6:	91 e0       	ldi	r25, 0x01	; 1
     cc8:	21 e2       	ldi	r18, 0x21	; 33
     cca:	31 e0       	ldi	r19, 0x01	; 1
     ccc:	f9 01       	movw	r30, r18
     cce:	20 81       	ld	r18, Z
     cd0:	24 60       	ori	r18, 0x04	; 4
     cd2:	fc 01       	movw	r30, r24
     cd4:	20 83       	st	Z, r18
     cd6:	81 e2       	ldi	r24, 0x21	; 33
     cd8:	91 e0       	ldi	r25, 0x01	; 1
     cda:	21 e2       	ldi	r18, 0x21	; 33
     cdc:	31 e0       	ldi	r19, 0x01	; 1
     cde:	f9 01       	movw	r30, r18
     ce0:	20 81       	ld	r18, Z
     ce2:	2d 7f       	andi	r18, 0xFD	; 253
     ce4:	fc 01       	movw	r30, r24
     ce6:	20 83       	st	Z, r18
     ce8:	81 e2       	ldi	r24, 0x21	; 33
     cea:	91 e0       	ldi	r25, 0x01	; 1
     cec:	21 e2       	ldi	r18, 0x21	; 33
     cee:	31 e0       	ldi	r19, 0x01	; 1
     cf0:	f9 01       	movw	r30, r18
     cf2:	20 81       	ld	r18, Z
     cf4:	2e 7f       	andi	r18, 0xFE	; 254
     cf6:	fc 01       	movw	r30, r24
     cf8:	20 83       	st	Z, r18
     cfa:	88 e2       	ldi	r24, 0x28	; 40
     cfc:	91 e0       	ldi	r25, 0x01	; 1
     cfe:	29 e6       	ldi	r18, 0x69	; 105
     d00:	38 e1       	ldi	r19, 0x18	; 24
     d02:	fc 01       	movw	r30, r24
     d04:	31 83       	std	Z+1, r19	; 0x01
     d06:	20 83       	st	Z, r18
     d08:	83 e7       	ldi	r24, 0x73	; 115
     d0a:	90 e0       	ldi	r25, 0x00	; 0
     d0c:	23 e7       	ldi	r18, 0x73	; 115
     d0e:	30 e0       	ldi	r19, 0x00	; 0
     d10:	f9 01       	movw	r30, r18
     d12:	20 81       	ld	r18, Z
     d14:	22 60       	ori	r18, 0x02	; 2
     d16:	fc 01       	movw	r30, r24
     d18:	20 83       	st	Z, r18
     d1a:	8a e3       	ldi	r24, 0x3A	; 58
     d1c:	90 e0       	ldi	r25, 0x00	; 0
     d1e:	2a e3       	ldi	r18, 0x3A	; 58
     d20:	30 e0       	ldi	r19, 0x00	; 0
     d22:	f9 01       	movw	r30, r18
     d24:	20 81       	ld	r18, Z
     d26:	22 60       	ori	r18, 0x02	; 2
     d28:	fc 01       	movw	r30, r24
     d2a:	20 83       	st	Z, r18
     d2c:	df 91       	pop	r29
     d2e:	cf 91       	pop	r28
     d30:	08 95       	ret

00000d32 <motorFrequency_getRecent>:
     d32:	cf 93       	push	r28
     d34:	df 93       	push	r29
     d36:	00 d0       	rcall	.+0      	; 0xd38 <motorFrequency_getRecent+0x6>
     d38:	00 d0       	rcall	.+0      	; 0xd3a <motorFrequency_getRecent+0x8>
     d3a:	cd b7       	in	r28, 0x3d	; 61
     d3c:	de b7       	in	r29, 0x3e	; 62
     d3e:	8f e5       	ldi	r24, 0x5F	; 95
     d40:	90 e0       	ldi	r25, 0x00	; 0
     d42:	fc 01       	movw	r30, r24
     d44:	80 81       	ld	r24, Z
     d46:	8c 83       	std	Y+4, r24	; 0x04
     d48:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <__iCliRetVal>
     d4c:	8b 83       	std	Y+3, r24	; 0x03
     d4e:	07 c0       	rjmp	.+14     	; 0xd5e <motorFrequency_getRecent+0x2c>
     d50:	80 91 72 08 	lds	r24, 0x0872
     d54:	90 91 73 08 	lds	r25, 0x0873
     d58:	9a 83       	std	Y+2, r25	; 0x02
     d5a:	89 83       	std	Y+1, r24	; 0x01
     d5c:	1b 82       	std	Y+3, r1	; 0x03
     d5e:	8b 81       	ldd	r24, Y+3	; 0x03
     d60:	88 23       	and	r24, r24
     d62:	b1 f7       	brne	.-20     	; 0xd50 <motorFrequency_getRecent+0x1e>
     d64:	ce 01       	movw	r24, r28
     d66:	04 96       	adiw	r24, 0x04	; 4
     d68:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <__iRestore>
     d6c:	89 81       	ldd	r24, Y+1	; 0x01
     d6e:	9a 81       	ldd	r25, Y+2	; 0x02
     d70:	0f 90       	pop	r0
     d72:	0f 90       	pop	r0
     d74:	0f 90       	pop	r0
     d76:	0f 90       	pop	r0
     d78:	df 91       	pop	r29
     d7a:	cf 91       	pop	r28
     d7c:	08 95       	ret

00000d7e <motorFrequency_getMedian>:
     d7e:	cf 93       	push	r28
     d80:	df 93       	push	r29
     d82:	cd b7       	in	r28, 0x3d	; 61
     d84:	de b7       	in	r29, 0x3e	; 62
     d86:	80 91 6f 08 	lds	r24, 0x086F
     d8a:	90 91 70 08 	lds	r25, 0x0870
     d8e:	87 54       	subi	r24, 0x47	; 71
     d90:	98 40       	sbci	r25, 0x08	; 8
     d92:	79 f4       	brne	.+30     	; 0xdb2 <motorFrequency_getMedian+0x34>
     d94:	8b e5       	ldi	r24, 0x5B	; 91
     d96:	98 e0       	ldi	r25, 0x08	; 8
     d98:	90 93 70 08 	sts	0x0870, r25
     d9c:	80 93 6f 08 	sts	0x086F, r24
     da0:	87 e4       	ldi	r24, 0x47	; 71
     da2:	98 e0       	ldi	r25, 0x08	; 8
     da4:	0e 94 df 07 	call	0xfbe	; 0xfbe <sorting>
     da8:	87 e4       	ldi	r24, 0x47	; 71
     daa:	98 e0       	ldi	r25, 0x08	; 8
     dac:	0e 94 54 08 	call	0x10a8	; 0x10a8 <get_median>
     db0:	0e c0       	rjmp	.+28     	; 0xdce <motorFrequency_getMedian+0x50>
     db2:	87 e4       	ldi	r24, 0x47	; 71
     db4:	98 e0       	ldi	r25, 0x08	; 8
     db6:	90 93 70 08 	sts	0x0870, r25
     dba:	80 93 6f 08 	sts	0x086F, r24
     dbe:	8b e5       	ldi	r24, 0x5B	; 91
     dc0:	98 e0       	ldi	r25, 0x08	; 8
     dc2:	0e 94 df 07 	call	0xfbe	; 0xfbe <sorting>
     dc6:	8b e5       	ldi	r24, 0x5B	; 91
     dc8:	98 e0       	ldi	r25, 0x08	; 8
     dca:	0e 94 54 08 	call	0x10a8	; 0x10a8 <get_median>
     dce:	df 91       	pop	r29
     dd0:	cf 91       	pop	r28
     dd2:	08 95       	ret

00000dd4 <__vector_1>:
     dd4:	1f 92       	push	r1
     dd6:	0f 92       	push	r0
     dd8:	00 90 5f 00 	lds	r0, 0x005F
     ddc:	0f 92       	push	r0
     dde:	11 24       	eor	r1, r1
     de0:	00 90 5b 00 	lds	r0, 0x005B
     de4:	0f 92       	push	r0
     de6:	2f 93       	push	r18
     de8:	3f 93       	push	r19
     dea:	4f 93       	push	r20
     dec:	5f 93       	push	r21
     dee:	6f 93       	push	r22
     df0:	7f 93       	push	r23
     df2:	8f 93       	push	r24
     df4:	9f 93       	push	r25
     df6:	af 93       	push	r26
     df8:	bf 93       	push	r27
     dfa:	ef 93       	push	r30
     dfc:	ff 93       	push	r31
     dfe:	cf 93       	push	r28
     e00:	df 93       	push	r29
     e02:	00 d0       	rcall	.+0      	; 0xe04 <__vector_1+0x30>
     e04:	00 d0       	rcall	.+0      	; 0xe06 <__vector_1+0x32>
     e06:	cd b7       	in	r28, 0x3d	; 61
     e08:	de b7       	in	r29, 0x3e	; 62
     e0a:	80 91 6f 08 	lds	r24, 0x086F
     e0e:	90 91 70 08 	lds	r25, 0x0870
     e12:	9a 83       	std	Y+2, r25	; 0x02
     e14:	89 83       	std	Y+1, r24	; 0x01
     e16:	80 91 74 08 	lds	r24, 0x0874
     e1a:	8f 5f       	subi	r24, 0xFF	; 255
     e1c:	80 93 74 08 	sts	0x0874, r24
     e20:	20 91 74 08 	lds	r18, 0x0874
     e24:	8b ea       	ldi	r24, 0xAB	; 171
     e26:	28 9f       	mul	r18, r24
     e28:	81 2d       	mov	r24, r1
     e2a:	11 24       	eor	r1, r1
     e2c:	98 2f       	mov	r25, r24
     e2e:	96 95       	lsr	r25
     e30:	96 95       	lsr	r25
     e32:	89 2f       	mov	r24, r25
     e34:	88 0f       	add	r24, r24
     e36:	89 0f       	add	r24, r25
     e38:	88 0f       	add	r24, r24
     e3a:	92 2f       	mov	r25, r18
     e3c:	98 1b       	sub	r25, r24
     e3e:	99 23       	and	r25, r25
     e40:	09 f0       	breq	.+2      	; 0xe44 <__vector_1+0x70>
     e42:	4b c0       	rjmp	.+150    	; 0xeda <__vector_1+0x106>
     e44:	84 e2       	ldi	r24, 0x24	; 36
     e46:	91 e0       	ldi	r25, 0x01	; 1
     e48:	fc 01       	movw	r30, r24
     e4a:	20 81       	ld	r18, Z
     e4c:	31 81       	ldd	r19, Z+1	; 0x01
     e4e:	8a e1       	ldi	r24, 0x1A	; 26
     e50:	94 ef       	ldi	r25, 0xF4	; 244
     e52:	b9 01       	movw	r22, r18
     e54:	0e 94 42 0e 	call	0x1c84	; 0x1c84 <__udivmodhi4>
     e58:	cb 01       	movw	r24, r22
     e5a:	90 93 73 08 	sts	0x0873, r25
     e5e:	80 93 72 08 	sts	0x0872, r24
     e62:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <led_greenOff>
     e66:	80 91 71 08 	lds	r24, 0x0871
     e6a:	8a 30       	cpi	r24, 0x0A	; 10
     e6c:	b8 f4       	brcc	.+46     	; 0xe9c <__vector_1+0xc8>
     e6e:	80 91 71 08 	lds	r24, 0x0871
     e72:	88 2f       	mov	r24, r24
     e74:	90 e0       	ldi	r25, 0x00	; 0
     e76:	88 0f       	add	r24, r24
     e78:	99 1f       	adc	r25, r25
     e7a:	29 81       	ldd	r18, Y+1	; 0x01
     e7c:	3a 81       	ldd	r19, Y+2	; 0x02
     e7e:	82 0f       	add	r24, r18
     e80:	93 1f       	adc	r25, r19
     e82:	20 91 72 08 	lds	r18, 0x0872
     e86:	30 91 73 08 	lds	r19, 0x0873
     e8a:	fc 01       	movw	r30, r24
     e8c:	31 83       	std	Z+1, r19	; 0x01
     e8e:	20 83       	st	Z, r18
     e90:	80 91 71 08 	lds	r24, 0x0871
     e94:	8f 5f       	subi	r24, 0xFF	; 255
     e96:	80 93 71 08 	sts	0x0871, r24
     e9a:	18 c0       	rjmp	.+48     	; 0xecc <__vector_1+0xf8>
     e9c:	10 92 71 08 	sts	0x0871, r1
     ea0:	80 91 71 08 	lds	r24, 0x0871
     ea4:	88 2f       	mov	r24, r24
     ea6:	90 e0       	ldi	r25, 0x00	; 0
     ea8:	88 0f       	add	r24, r24
     eaa:	99 1f       	adc	r25, r25
     eac:	29 81       	ldd	r18, Y+1	; 0x01
     eae:	3a 81       	ldd	r19, Y+2	; 0x02
     eb0:	82 0f       	add	r24, r18
     eb2:	93 1f       	adc	r25, r19
     eb4:	20 91 72 08 	lds	r18, 0x0872
     eb8:	30 91 73 08 	lds	r19, 0x0873
     ebc:	fc 01       	movw	r30, r24
     ebe:	31 83       	std	Z+1, r19	; 0x01
     ec0:	20 83       	st	Z, r18
     ec2:	80 91 71 08 	lds	r24, 0x0871
     ec6:	8f 5f       	subi	r24, 0xFF	; 255
     ec8:	80 93 71 08 	sts	0x0871, r24
     ecc:	84 e2       	ldi	r24, 0x24	; 36
     ece:	91 e0       	ldi	r25, 0x01	; 1
     ed0:	fc 01       	movw	r30, r24
     ed2:	11 82       	std	Z+1, r1	; 0x01
     ed4:	10 82       	st	Z, r1
     ed6:	10 92 74 08 	sts	0x0874, r1
     eda:	0e 94 7f 05 	call	0xafe	; 0xafe <led_yellowToggle>
     ede:	0f 90       	pop	r0
     ee0:	0f 90       	pop	r0
     ee2:	0f 90       	pop	r0
     ee4:	0f 90       	pop	r0
     ee6:	df 91       	pop	r29
     ee8:	cf 91       	pop	r28
     eea:	ff 91       	pop	r31
     eec:	ef 91       	pop	r30
     eee:	bf 91       	pop	r27
     ef0:	af 91       	pop	r26
     ef2:	9f 91       	pop	r25
     ef4:	8f 91       	pop	r24
     ef6:	7f 91       	pop	r23
     ef8:	6f 91       	pop	r22
     efa:	5f 91       	pop	r21
     efc:	4f 91       	pop	r20
     efe:	3f 91       	pop	r19
     f00:	2f 91       	pop	r18
     f02:	0f 90       	pop	r0
     f04:	00 92 5b 00 	sts	0x005B, r0
     f08:	0f 90       	pop	r0
     f0a:	00 92 5f 00 	sts	0x005F, r0
     f0e:	0f 90       	pop	r0
     f10:	1f 90       	pop	r1
     f12:	18 95       	reti

00000f14 <__vector_47>:
     f14:	1f 92       	push	r1
     f16:	0f 92       	push	r0
     f18:	00 90 5f 00 	lds	r0, 0x005F
     f1c:	0f 92       	push	r0
     f1e:	11 24       	eor	r1, r1
     f20:	00 90 5b 00 	lds	r0, 0x005B
     f24:	0f 92       	push	r0
     f26:	2f 93       	push	r18
     f28:	3f 93       	push	r19
     f2a:	4f 93       	push	r20
     f2c:	5f 93       	push	r21
     f2e:	6f 93       	push	r22
     f30:	7f 93       	push	r23
     f32:	8f 93       	push	r24
     f34:	9f 93       	push	r25
     f36:	af 93       	push	r26
     f38:	bf 93       	push	r27
     f3a:	ef 93       	push	r30
     f3c:	ff 93       	push	r31
     f3e:	cf 93       	push	r28
     f40:	df 93       	push	r29
     f42:	00 d0       	rcall	.+0      	; 0xf44 <__vector_47+0x30>
     f44:	1f 92       	push	r1
     f46:	cd b7       	in	r28, 0x3d	; 61
     f48:	de b7       	in	r29, 0x3e	; 62
     f4a:	80 91 6f 08 	lds	r24, 0x086F
     f4e:	90 91 70 08 	lds	r25, 0x0870
     f52:	9b 83       	std	Y+3, r25	; 0x03
     f54:	8a 83       	std	Y+2, r24	; 0x02
     f56:	19 82       	std	Y+1, r1	; 0x01
     f58:	0f c0       	rjmp	.+30     	; 0xf78 <__vector_47+0x64>
     f5a:	89 81       	ldd	r24, Y+1	; 0x01
     f5c:	88 2f       	mov	r24, r24
     f5e:	90 e0       	ldi	r25, 0x00	; 0
     f60:	88 0f       	add	r24, r24
     f62:	99 1f       	adc	r25, r25
     f64:	2a 81       	ldd	r18, Y+2	; 0x02
     f66:	3b 81       	ldd	r19, Y+3	; 0x03
     f68:	82 0f       	add	r24, r18
     f6a:	93 1f       	adc	r25, r19
     f6c:	fc 01       	movw	r30, r24
     f6e:	11 82       	std	Z+1, r1	; 0x01
     f70:	10 82       	st	Z, r1
     f72:	89 81       	ldd	r24, Y+1	; 0x01
     f74:	8f 5f       	subi	r24, 0xFF	; 255
     f76:	89 83       	std	Y+1, r24	; 0x01
     f78:	89 81       	ldd	r24, Y+1	; 0x01
     f7a:	8a 30       	cpi	r24, 0x0A	; 10
     f7c:	70 f3       	brcs	.-36     	; 0xf5a <__vector_47+0x46>
     f7e:	10 92 73 08 	sts	0x0873, r1
     f82:	10 92 72 08 	sts	0x0872, r1
     f86:	0e 94 d3 05 	call	0xba6	; 0xba6 <led_greenOn>
     f8a:	0f 90       	pop	r0
     f8c:	0f 90       	pop	r0
     f8e:	0f 90       	pop	r0
     f90:	df 91       	pop	r29
     f92:	cf 91       	pop	r28
     f94:	ff 91       	pop	r31
     f96:	ef 91       	pop	r30
     f98:	bf 91       	pop	r27
     f9a:	af 91       	pop	r26
     f9c:	9f 91       	pop	r25
     f9e:	8f 91       	pop	r24
     fa0:	7f 91       	pop	r23
     fa2:	6f 91       	pop	r22
     fa4:	5f 91       	pop	r21
     fa6:	4f 91       	pop	r20
     fa8:	3f 91       	pop	r19
     faa:	2f 91       	pop	r18
     fac:	0f 90       	pop	r0
     fae:	00 92 5b 00 	sts	0x005B, r0
     fb2:	0f 90       	pop	r0
     fb4:	00 92 5f 00 	sts	0x005F, r0
     fb8:	0f 90       	pop	r0
     fba:	1f 90       	pop	r1
     fbc:	18 95       	reti

00000fbe <sorting>:
     fbe:	cf 93       	push	r28
     fc0:	df 93       	push	r29
     fc2:	00 d0       	rcall	.+0      	; 0xfc4 <sorting+0x6>
     fc4:	00 d0       	rcall	.+0      	; 0xfc6 <sorting+0x8>
     fc6:	00 d0       	rcall	.+0      	; 0xfc8 <sorting+0xa>
     fc8:	cd b7       	in	r28, 0x3d	; 61
     fca:	de b7       	in	r29, 0x3e	; 62
     fcc:	9e 83       	std	Y+6, r25	; 0x06
     fce:	8d 83       	std	Y+5, r24	; 0x05
     fd0:	19 82       	std	Y+1, r1	; 0x01
     fd2:	5d c0       	rjmp	.+186    	; 0x108e <sorting+0xd0>
     fd4:	89 81       	ldd	r24, Y+1	; 0x01
     fd6:	8f 5f       	subi	r24, 0xFF	; 255
     fd8:	8a 83       	std	Y+2, r24	; 0x02
     fda:	52 c0       	rjmp	.+164    	; 0x1080 <sorting+0xc2>
     fdc:	89 81       	ldd	r24, Y+1	; 0x01
     fde:	88 2f       	mov	r24, r24
     fe0:	90 e0       	ldi	r25, 0x00	; 0
     fe2:	88 0f       	add	r24, r24
     fe4:	99 1f       	adc	r25, r25
     fe6:	2d 81       	ldd	r18, Y+5	; 0x05
     fe8:	3e 81       	ldd	r19, Y+6	; 0x06
     fea:	82 0f       	add	r24, r18
     fec:	93 1f       	adc	r25, r19
     fee:	fc 01       	movw	r30, r24
     ff0:	20 81       	ld	r18, Z
     ff2:	31 81       	ldd	r19, Z+1	; 0x01
     ff4:	8a 81       	ldd	r24, Y+2	; 0x02
     ff6:	88 2f       	mov	r24, r24
     ff8:	90 e0       	ldi	r25, 0x00	; 0
     ffa:	88 0f       	add	r24, r24
     ffc:	99 1f       	adc	r25, r25
     ffe:	4d 81       	ldd	r20, Y+5	; 0x05
    1000:	5e 81       	ldd	r21, Y+6	; 0x06
    1002:	84 0f       	add	r24, r20
    1004:	95 1f       	adc	r25, r21
    1006:	fc 01       	movw	r30, r24
    1008:	80 81       	ld	r24, Z
    100a:	91 81       	ldd	r25, Z+1	; 0x01
    100c:	82 17       	cp	r24, r18
    100e:	93 07       	cpc	r25, r19
    1010:	a0 f5       	brcc	.+104    	; 0x107a <sorting+0xbc>
    1012:	89 81       	ldd	r24, Y+1	; 0x01
    1014:	88 2f       	mov	r24, r24
    1016:	90 e0       	ldi	r25, 0x00	; 0
    1018:	88 0f       	add	r24, r24
    101a:	99 1f       	adc	r25, r25
    101c:	2d 81       	ldd	r18, Y+5	; 0x05
    101e:	3e 81       	ldd	r19, Y+6	; 0x06
    1020:	82 0f       	add	r24, r18
    1022:	93 1f       	adc	r25, r19
    1024:	fc 01       	movw	r30, r24
    1026:	80 81       	ld	r24, Z
    1028:	91 81       	ldd	r25, Z+1	; 0x01
    102a:	9c 83       	std	Y+4, r25	; 0x04
    102c:	8b 83       	std	Y+3, r24	; 0x03
    102e:	89 81       	ldd	r24, Y+1	; 0x01
    1030:	88 2f       	mov	r24, r24
    1032:	90 e0       	ldi	r25, 0x00	; 0
    1034:	88 0f       	add	r24, r24
    1036:	99 1f       	adc	r25, r25
    1038:	2d 81       	ldd	r18, Y+5	; 0x05
    103a:	3e 81       	ldd	r19, Y+6	; 0x06
    103c:	82 0f       	add	r24, r18
    103e:	93 1f       	adc	r25, r19
    1040:	2a 81       	ldd	r18, Y+2	; 0x02
    1042:	22 2f       	mov	r18, r18
    1044:	30 e0       	ldi	r19, 0x00	; 0
    1046:	22 0f       	add	r18, r18
    1048:	33 1f       	adc	r19, r19
    104a:	4d 81       	ldd	r20, Y+5	; 0x05
    104c:	5e 81       	ldd	r21, Y+6	; 0x06
    104e:	24 0f       	add	r18, r20
    1050:	35 1f       	adc	r19, r21
    1052:	f9 01       	movw	r30, r18
    1054:	20 81       	ld	r18, Z
    1056:	31 81       	ldd	r19, Z+1	; 0x01
    1058:	fc 01       	movw	r30, r24
    105a:	31 83       	std	Z+1, r19	; 0x01
    105c:	20 83       	st	Z, r18
    105e:	8a 81       	ldd	r24, Y+2	; 0x02
    1060:	88 2f       	mov	r24, r24
    1062:	90 e0       	ldi	r25, 0x00	; 0
    1064:	88 0f       	add	r24, r24
    1066:	99 1f       	adc	r25, r25
    1068:	2d 81       	ldd	r18, Y+5	; 0x05
    106a:	3e 81       	ldd	r19, Y+6	; 0x06
    106c:	82 0f       	add	r24, r18
    106e:	93 1f       	adc	r25, r19
    1070:	2b 81       	ldd	r18, Y+3	; 0x03
    1072:	3c 81       	ldd	r19, Y+4	; 0x04
    1074:	fc 01       	movw	r30, r24
    1076:	31 83       	std	Z+1, r19	; 0x01
    1078:	20 83       	st	Z, r18
    107a:	8a 81       	ldd	r24, Y+2	; 0x02
    107c:	8f 5f       	subi	r24, 0xFF	; 255
    107e:	8a 83       	std	Y+2, r24	; 0x02
    1080:	8a 81       	ldd	r24, Y+2	; 0x02
    1082:	8a 30       	cpi	r24, 0x0A	; 10
    1084:	08 f4       	brcc	.+2      	; 0x1088 <sorting+0xca>
    1086:	aa cf       	rjmp	.-172    	; 0xfdc <sorting+0x1e>
    1088:	89 81       	ldd	r24, Y+1	; 0x01
    108a:	8f 5f       	subi	r24, 0xFF	; 255
    108c:	89 83       	std	Y+1, r24	; 0x01
    108e:	89 81       	ldd	r24, Y+1	; 0x01
    1090:	8a 30       	cpi	r24, 0x0A	; 10
    1092:	08 f4       	brcc	.+2      	; 0x1096 <sorting+0xd8>
    1094:	9f cf       	rjmp	.-194    	; 0xfd4 <sorting+0x16>
    1096:	26 96       	adiw	r28, 0x06	; 6
    1098:	0f b6       	in	r0, 0x3f	; 63
    109a:	f8 94       	cli
    109c:	de bf       	out	0x3e, r29	; 62
    109e:	0f be       	out	0x3f, r0	; 63
    10a0:	cd bf       	out	0x3d, r28	; 61
    10a2:	df 91       	pop	r29
    10a4:	cf 91       	pop	r28
    10a6:	08 95       	ret

000010a8 <get_median>:
    10a8:	cf 93       	push	r28
    10aa:	df 93       	push	r29
    10ac:	00 d0       	rcall	.+0      	; 0x10ae <get_median+0x6>
    10ae:	00 d0       	rcall	.+0      	; 0x10b0 <get_median+0x8>
    10b0:	cd b7       	in	r28, 0x3d	; 61
    10b2:	de b7       	in	r29, 0x3e	; 62
    10b4:	9c 83       	std	Y+4, r25	; 0x04
    10b6:	8b 83       	std	Y+3, r24	; 0x03
    10b8:	1a 82       	std	Y+2, r1	; 0x02
    10ba:	19 82       	std	Y+1, r1	; 0x01
    10bc:	8b 81       	ldd	r24, Y+3	; 0x03
    10be:	9c 81       	ldd	r25, Y+4	; 0x04
    10c0:	0a 96       	adiw	r24, 0x0a	; 10
    10c2:	fc 01       	movw	r30, r24
    10c4:	20 81       	ld	r18, Z
    10c6:	31 81       	ldd	r19, Z+1	; 0x01
    10c8:	8b 81       	ldd	r24, Y+3	; 0x03
    10ca:	9c 81       	ldd	r25, Y+4	; 0x04
    10cc:	08 96       	adiw	r24, 0x08	; 8
    10ce:	fc 01       	movw	r30, r24
    10d0:	80 81       	ld	r24, Z
    10d2:	91 81       	ldd	r25, Z+1	; 0x01
    10d4:	82 0f       	add	r24, r18
    10d6:	93 1f       	adc	r25, r19
    10d8:	96 95       	lsr	r25
    10da:	87 95       	ror	r24
    10dc:	9a 83       	std	Y+2, r25	; 0x02
    10de:	89 83       	std	Y+1, r24	; 0x01
    10e0:	89 81       	ldd	r24, Y+1	; 0x01
    10e2:	9a 81       	ldd	r25, Y+2	; 0x02
    10e4:	0f 90       	pop	r0
    10e6:	0f 90       	pop	r0
    10e8:	0f 90       	pop	r0
    10ea:	0f 90       	pop	r0
    10ec:	df 91       	pop	r29
    10ee:	cf 91       	pop	r28
    10f0:	08 95       	ret

000010f2 <pwm_init>:
    10f2:	cf 93       	push	r28
    10f4:	df 93       	push	r29
    10f6:	cd b7       	in	r28, 0x3d	; 61
    10f8:	de b7       	in	r29, 0x3e	; 62
    10fa:	84 e6       	ldi	r24, 0x64	; 100
    10fc:	90 e0       	ldi	r25, 0x00	; 0
    10fe:	24 e6       	ldi	r18, 0x64	; 100
    1100:	30 e0       	ldi	r19, 0x00	; 0
    1102:	f9 01       	movw	r30, r18
    1104:	20 81       	ld	r18, Z
    1106:	2f 7d       	andi	r18, 0xDF	; 223
    1108:	fc 01       	movw	r30, r24
    110a:	20 83       	st	Z, r18
    110c:	83 e3       	ldi	r24, 0x33	; 51
    110e:	90 e0       	ldi	r25, 0x00	; 0
    1110:	23 e3       	ldi	r18, 0x33	; 51
    1112:	30 e0       	ldi	r19, 0x00	; 0
    1114:	f9 01       	movw	r30, r18
    1116:	20 81       	ld	r18, Z
    1118:	20 62       	ori	r18, 0x20	; 32
    111a:	fc 01       	movw	r30, r24
    111c:	20 83       	st	Z, r18
    111e:	85 e4       	ldi	r24, 0x45	; 69
    1120:	90 e0       	ldi	r25, 0x00	; 0
    1122:	25 e4       	ldi	r18, 0x45	; 69
    1124:	30 e0       	ldi	r19, 0x00	; 0
    1126:	f9 01       	movw	r30, r18
    1128:	20 81       	ld	r18, Z
    112a:	27 7f       	andi	r18, 0xF7	; 247
    112c:	fc 01       	movw	r30, r24
    112e:	20 83       	st	Z, r18
    1130:	84 e4       	ldi	r24, 0x44	; 68
    1132:	90 e0       	ldi	r25, 0x00	; 0
    1134:	24 e4       	ldi	r18, 0x44	; 68
    1136:	30 e0       	ldi	r19, 0x00	; 0
    1138:	f9 01       	movw	r30, r18
    113a:	20 81       	ld	r18, Z
    113c:	22 60       	ori	r18, 0x02	; 2
    113e:	fc 01       	movw	r30, r24
    1140:	20 83       	st	Z, r18
    1142:	84 e4       	ldi	r24, 0x44	; 68
    1144:	90 e0       	ldi	r25, 0x00	; 0
    1146:	24 e4       	ldi	r18, 0x44	; 68
    1148:	30 e0       	ldi	r19, 0x00	; 0
    114a:	f9 01       	movw	r30, r18
    114c:	20 81       	ld	r18, Z
    114e:	21 60       	ori	r18, 0x01	; 1
    1150:	fc 01       	movw	r30, r24
    1152:	20 83       	st	Z, r18
    1154:	85 e4       	ldi	r24, 0x45	; 69
    1156:	90 e0       	ldi	r25, 0x00	; 0
    1158:	25 e4       	ldi	r18, 0x45	; 69
    115a:	30 e0       	ldi	r19, 0x00	; 0
    115c:	f9 01       	movw	r30, r18
    115e:	20 81       	ld	r18, Z
    1160:	2b 7f       	andi	r18, 0xFB	; 251
    1162:	fc 01       	movw	r30, r24
    1164:	20 83       	st	Z, r18
    1166:	85 e4       	ldi	r24, 0x45	; 69
    1168:	90 e0       	ldi	r25, 0x00	; 0
    116a:	25 e4       	ldi	r18, 0x45	; 69
    116c:	30 e0       	ldi	r19, 0x00	; 0
    116e:	f9 01       	movw	r30, r18
    1170:	20 81       	ld	r18, Z
    1172:	2d 7f       	andi	r18, 0xFD	; 253
    1174:	fc 01       	movw	r30, r24
    1176:	20 83       	st	Z, r18
    1178:	85 e4       	ldi	r24, 0x45	; 69
    117a:	90 e0       	ldi	r25, 0x00	; 0
    117c:	25 e4       	ldi	r18, 0x45	; 69
    117e:	30 e0       	ldi	r19, 0x00	; 0
    1180:	f9 01       	movw	r30, r18
    1182:	20 81       	ld	r18, Z
    1184:	21 60       	ori	r18, 0x01	; 1
    1186:	fc 01       	movw	r30, r24
    1188:	20 83       	st	Z, r18
    118a:	84 e4       	ldi	r24, 0x44	; 68
    118c:	90 e0       	ldi	r25, 0x00	; 0
    118e:	24 e4       	ldi	r18, 0x44	; 68
    1190:	30 e0       	ldi	r19, 0x00	; 0
    1192:	f9 01       	movw	r30, r18
    1194:	20 81       	ld	r18, Z
    1196:	20 62       	ori	r18, 0x20	; 32
    1198:	fc 01       	movw	r30, r24
    119a:	20 83       	st	Z, r18
    119c:	84 e4       	ldi	r24, 0x44	; 68
    119e:	90 e0       	ldi	r25, 0x00	; 0
    11a0:	24 e4       	ldi	r18, 0x44	; 68
    11a2:	30 e0       	ldi	r19, 0x00	; 0
    11a4:	f9 01       	movw	r30, r18
    11a6:	20 81       	ld	r18, Z
    11a8:	20 61       	ori	r18, 0x10	; 16
    11aa:	fc 01       	movw	r30, r24
    11ac:	20 83       	st	Z, r18
    11ae:	df 91       	pop	r29
    11b0:	cf 91       	pop	r28
    11b2:	08 95       	ret

000011b4 <pwm_setDutyCycle>:
    11b4:	cf 93       	push	r28
    11b6:	df 93       	push	r29
    11b8:	1f 92       	push	r1
    11ba:	cd b7       	in	r28, 0x3d	; 61
    11bc:	de b7       	in	r29, 0x3e	; 62
    11be:	89 83       	std	Y+1, r24	; 0x01
    11c0:	88 e4       	ldi	r24, 0x48	; 72
    11c2:	90 e0       	ldi	r25, 0x00	; 0
    11c4:	29 81       	ldd	r18, Y+1	; 0x01
    11c6:	20 95       	com	r18
    11c8:	fc 01       	movw	r30, r24
    11ca:	20 83       	st	Z, r18
    11cc:	0f 90       	pop	r0
    11ce:	df 91       	pop	r29
    11d0:	cf 91       	pop	r28
    11d2:	08 95       	ret

000011d4 <__iSeiRetVal>:
#include <avr/interrupt.h>

#if !defined(__DOXYGEN__)
/* Internal helper functions. */
static __inline__ uint8_t __iSeiRetVal(void)
{
    11d4:	cf 93       	push	r28
    11d6:	df 93       	push	r29
    11d8:	cd b7       	in	r28, 0x3d	; 61
    11da:	de b7       	in	r29, 0x3e	; 62
    sei();
    11dc:	78 94       	sei
    return 1;
    11de:	81 e0       	ldi	r24, 0x01	; 1
}
    11e0:	df 91       	pop	r29
    11e2:	cf 91       	pop	r28
    11e4:	08 95       	ret

000011e6 <__iCliRetVal>:

static __inline__ uint8_t __iCliRetVal(void)
{
    11e6:	cf 93       	push	r28
    11e8:	df 93       	push	r29
    11ea:	cd b7       	in	r28, 0x3d	; 61
    11ec:	de b7       	in	r29, 0x3e	; 62
    cli();
    11ee:	f8 94       	cli
    return 1;
    11f0:	81 e0       	ldi	r24, 0x01	; 1
}
    11f2:	df 91       	pop	r29
    11f4:	cf 91       	pop	r28
    11f6:	08 95       	ret

000011f8 <__iRestore>:
    __asm__ volatile ("" ::: "memory");
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    11f8:	cf 93       	push	r28
    11fa:	df 93       	push	r29
    11fc:	00 d0       	rcall	.+0      	; 0x11fe <__iRestore+0x6>
    11fe:	cd b7       	in	r28, 0x3d	; 61
    1200:	de b7       	in	r29, 0x3e	; 62
    1202:	9a 83       	std	Y+2, r25	; 0x02
    1204:	89 83       	std	Y+1, r24	; 0x01
    SREG = *__s;
    1206:	8f e5       	ldi	r24, 0x5F	; 95
    1208:	90 e0       	ldi	r25, 0x00	; 0
    120a:	29 81       	ldd	r18, Y+1	; 0x01
    120c:	3a 81       	ldd	r19, Y+2	; 0x02
    120e:	f9 01       	movw	r30, r18
    1210:	20 81       	ld	r18, Z
    1212:	fc 01       	movw	r30, r24
    1214:	20 83       	st	Z, r18
    __asm__ volatile ("" ::: "memory");
}
    1216:	0f 90       	pop	r0
    1218:	0f 90       	pop	r0
    121a:	df 91       	pop	r29
    121c:	cf 91       	pop	r28
    121e:	08 95       	ret

00001220 <scheduler_update>:
    1220:	cf 93       	push	r28
    1222:	df 93       	push	r29
    1224:	00 d0       	rcall	.+0      	; 0x1226 <scheduler_update+0x6>
    1226:	cd b7       	in	r28, 0x3d	; 61
    1228:	de b7       	in	r29, 0x3e	; 62
    122a:	80 91 77 08 	lds	r24, 0x0877
    122e:	90 91 78 08 	lds	r25, 0x0878
    1232:	a0 91 79 08 	lds	r26, 0x0879
    1236:	b0 91 7a 08 	lds	r27, 0x087A
    123a:	01 96       	adiw	r24, 0x01	; 1
    123c:	a1 1d       	adc	r26, r1
    123e:	b1 1d       	adc	r27, r1
    1240:	80 93 77 08 	sts	0x0877, r24
    1244:	90 93 78 08 	sts	0x0878, r25
    1248:	a0 93 79 08 	sts	0x0879, r26
    124c:	b0 93 7a 08 	sts	0x087A, r27
    1250:	80 91 75 08 	lds	r24, 0x0875
    1254:	90 91 76 08 	lds	r25, 0x0876
    1258:	9a 83       	std	Y+2, r25	; 0x02
    125a:	89 83       	std	Y+1, r24	; 0x01
    125c:	2d c0       	rjmp	.+90     	; 0x12b8 <scheduler_update+0x98>
    125e:	89 81       	ldd	r24, Y+1	; 0x01
    1260:	9a 81       	ldd	r25, Y+2	; 0x02
    1262:	fc 01       	movw	r30, r24
    1264:	84 81       	ldd	r24, Z+4	; 0x04
    1266:	95 81       	ldd	r25, Z+5	; 0x05
    1268:	89 2b       	or	r24, r25
    126a:	91 f4       	brne	.+36     	; 0x1290 <scheduler_update+0x70>
    126c:	89 81       	ldd	r24, Y+1	; 0x01
    126e:	9a 81       	ldd	r25, Y+2	; 0x02
    1270:	fc 01       	movw	r30, r24
    1272:	20 85       	ldd	r18, Z+8	; 0x08
    1274:	21 60       	ori	r18, 0x01	; 1
    1276:	fc 01       	movw	r30, r24
    1278:	20 87       	std	Z+8, r18	; 0x08
    127a:	89 81       	ldd	r24, Y+1	; 0x01
    127c:	9a 81       	ldd	r25, Y+2	; 0x02
    127e:	fc 01       	movw	r30, r24
    1280:	26 81       	ldd	r18, Z+6	; 0x06
    1282:	37 81       	ldd	r19, Z+7	; 0x07
    1284:	89 81       	ldd	r24, Y+1	; 0x01
    1286:	9a 81       	ldd	r25, Y+2	; 0x02
    1288:	fc 01       	movw	r30, r24
    128a:	35 83       	std	Z+5, r19	; 0x05
    128c:	24 83       	std	Z+4, r18	; 0x04
    128e:	0d c0       	rjmp	.+26     	; 0x12aa <scheduler_update+0x8a>
    1290:	89 81       	ldd	r24, Y+1	; 0x01
    1292:	9a 81       	ldd	r25, Y+2	; 0x02
    1294:	fc 01       	movw	r30, r24
    1296:	84 81       	ldd	r24, Z+4	; 0x04
    1298:	95 81       	ldd	r25, Z+5	; 0x05
    129a:	9c 01       	movw	r18, r24
    129c:	21 50       	subi	r18, 0x01	; 1
    129e:	31 09       	sbc	r19, r1
    12a0:	89 81       	ldd	r24, Y+1	; 0x01
    12a2:	9a 81       	ldd	r25, Y+2	; 0x02
    12a4:	fc 01       	movw	r30, r24
    12a6:	35 83       	std	Z+5, r19	; 0x05
    12a8:	24 83       	std	Z+4, r18	; 0x04
    12aa:	89 81       	ldd	r24, Y+1	; 0x01
    12ac:	9a 81       	ldd	r25, Y+2	; 0x02
    12ae:	fc 01       	movw	r30, r24
    12b0:	81 85       	ldd	r24, Z+9	; 0x09
    12b2:	92 85       	ldd	r25, Z+10	; 0x0a
    12b4:	9a 83       	std	Y+2, r25	; 0x02
    12b6:	89 83       	std	Y+1, r24	; 0x01
    12b8:	89 81       	ldd	r24, Y+1	; 0x01
    12ba:	9a 81       	ldd	r25, Y+2	; 0x02
    12bc:	89 2b       	or	r24, r25
    12be:	79 f6       	brne	.-98     	; 0x125e <scheduler_update+0x3e>
    12c0:	0f 90       	pop	r0
    12c2:	0f 90       	pop	r0
    12c4:	df 91       	pop	r29
    12c6:	cf 91       	pop	r28
    12c8:	08 95       	ret

000012ca <scheduler_init>:
    12ca:	cf 93       	push	r28
    12cc:	df 93       	push	r29
    12ce:	cd b7       	in	r28, 0x3d	; 61
    12d0:	de b7       	in	r29, 0x3e	; 62
    12d2:	0e 94 39 0b 	call	0x1672	; 0x1672 <timer2_start>
    12d6:	80 e1       	ldi	r24, 0x10	; 16
    12d8:	99 e0       	ldi	r25, 0x09	; 9
    12da:	0e 94 27 0b 	call	0x164e	; 0x164e <timer2_setCallback>
    12de:	df 91       	pop	r29
    12e0:	cf 91       	pop	r28
    12e2:	08 95       	ret

000012e4 <scheduler_run>:
    12e4:	cf 93       	push	r28
    12e6:	df 93       	push	r29
    12e8:	cd b7       	in	r28, 0x3d	; 61
    12ea:	de b7       	in	r29, 0x3e	; 62
    12ec:	2a 97       	sbiw	r28, 0x0a	; 10
    12ee:	0f b6       	in	r0, 0x3f	; 63
    12f0:	f8 94       	cli
    12f2:	de bf       	out	0x3e, r29	; 62
    12f4:	0f be       	out	0x3f, r0	; 63
    12f6:	cd bf       	out	0x3d, r28	; 61
    12f8:	8f e5       	ldi	r24, 0x5F	; 95
    12fa:	90 e0       	ldi	r25, 0x00	; 0
    12fc:	fc 01       	movw	r30, r24
    12fe:	80 81       	ld	r24, Z
    1300:	89 87       	std	Y+9, r24	; 0x09
    1302:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <__iCliRetVal>
    1306:	8b 83       	std	Y+3, r24	; 0x03
    1308:	52 c0       	rjmp	.+164    	; 0x13ae <scheduler_run+0xca>
    130a:	80 91 75 08 	lds	r24, 0x0875
    130e:	90 91 76 08 	lds	r25, 0x0876
    1312:	9a 83       	std	Y+2, r25	; 0x02
    1314:	89 83       	std	Y+1, r24	; 0x01
    1316:	45 c0       	rjmp	.+138    	; 0x13a2 <scheduler_run+0xbe>
    1318:	89 81       	ldd	r24, Y+1	; 0x01
    131a:	9a 81       	ldd	r25, Y+2	; 0x02
    131c:	fc 01       	movw	r30, r24
    131e:	80 85       	ldd	r24, Z+8	; 0x08
    1320:	81 70       	andi	r24, 0x01	; 1
    1322:	88 23       	and	r24, r24
    1324:	b9 f1       	breq	.+110    	; 0x1394 <scheduler_run+0xb0>
    1326:	89 81       	ldd	r24, Y+1	; 0x01
    1328:	9a 81       	ldd	r25, Y+2	; 0x02
    132a:	fc 01       	movw	r30, r24
    132c:	80 81       	ld	r24, Z
    132e:	91 81       	ldd	r25, Z+1	; 0x01
    1330:	9e 83       	std	Y+6, r25	; 0x06
    1332:	8d 83       	std	Y+5, r24	; 0x05
    1334:	89 81       	ldd	r24, Y+1	; 0x01
    1336:	9a 81       	ldd	r25, Y+2	; 0x02
    1338:	fc 01       	movw	r30, r24
    133a:	82 81       	ldd	r24, Z+2	; 0x02
    133c:	93 81       	ldd	r25, Z+3	; 0x03
    133e:	98 87       	std	Y+8, r25	; 0x08
    1340:	8f 83       	std	Y+7, r24	; 0x07
    1342:	8f e5       	ldi	r24, 0x5F	; 95
    1344:	90 e0       	ldi	r25, 0x00	; 0
    1346:	fc 01       	movw	r30, r24
    1348:	80 81       	ld	r24, Z
    134a:	8a 87       	std	Y+10, r24	; 0x0a
    134c:	0e 94 ea 08 	call	0x11d4	; 0x11d4 <__iSeiRetVal>
    1350:	8c 83       	std	Y+4, r24	; 0x04
    1352:	07 c0       	rjmp	.+14     	; 0x1362 <scheduler_run+0x7e>
    1354:	8f 81       	ldd	r24, Y+7	; 0x07
    1356:	98 85       	ldd	r25, Y+8	; 0x08
    1358:	2d 81       	ldd	r18, Y+5	; 0x05
    135a:	3e 81       	ldd	r19, Y+6	; 0x06
    135c:	f9 01       	movw	r30, r18
    135e:	09 95       	icall
    1360:	1c 82       	std	Y+4, r1	; 0x04
    1362:	8c 81       	ldd	r24, Y+4	; 0x04
    1364:	88 23       	and	r24, r24
    1366:	b1 f7       	brne	.-20     	; 0x1354 <scheduler_run+0x70>
    1368:	ce 01       	movw	r24, r28
    136a:	0a 96       	adiw	r24, 0x0a	; 10
    136c:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <__iRestore>
    1370:	89 81       	ldd	r24, Y+1	; 0x01
    1372:	9a 81       	ldd	r25, Y+2	; 0x02
    1374:	fc 01       	movw	r30, r24
    1376:	20 85       	ldd	r18, Z+8	; 0x08
    1378:	2e 7f       	andi	r18, 0xFE	; 254
    137a:	fc 01       	movw	r30, r24
    137c:	20 87       	std	Z+8, r18	; 0x08
    137e:	89 81       	ldd	r24, Y+1	; 0x01
    1380:	9a 81       	ldd	r25, Y+2	; 0x02
    1382:	fc 01       	movw	r30, r24
    1384:	86 81       	ldd	r24, Z+6	; 0x06
    1386:	97 81       	ldd	r25, Z+7	; 0x07
    1388:	89 2b       	or	r24, r25
    138a:	21 f4       	brne	.+8      	; 0x1394 <scheduler_run+0xb0>
    138c:	89 81       	ldd	r24, Y+1	; 0x01
    138e:	9a 81       	ldd	r25, Y+2	; 0x02
    1390:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <scheduler_remove>
    1394:	89 81       	ldd	r24, Y+1	; 0x01
    1396:	9a 81       	ldd	r25, Y+2	; 0x02
    1398:	fc 01       	movw	r30, r24
    139a:	81 85       	ldd	r24, Z+9	; 0x09
    139c:	92 85       	ldd	r25, Z+10	; 0x0a
    139e:	9a 83       	std	Y+2, r25	; 0x02
    13a0:	89 83       	std	Y+1, r24	; 0x01
    13a2:	89 81       	ldd	r24, Y+1	; 0x01
    13a4:	9a 81       	ldd	r25, Y+2	; 0x02
    13a6:	89 2b       	or	r24, r25
    13a8:	09 f0       	breq	.+2      	; 0x13ac <scheduler_run+0xc8>
    13aa:	b6 cf       	rjmp	.-148    	; 0x1318 <scheduler_run+0x34>
    13ac:	1b 82       	std	Y+3, r1	; 0x03
    13ae:	8b 81       	ldd	r24, Y+3	; 0x03
    13b0:	88 23       	and	r24, r24
    13b2:	09 f0       	breq	.+2      	; 0x13b6 <scheduler_run+0xd2>
    13b4:	aa cf       	rjmp	.-172    	; 0x130a <scheduler_run+0x26>
    13b6:	ce 01       	movw	r24, r28
    13b8:	09 96       	adiw	r24, 0x09	; 9
    13ba:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <__iRestore>
    13be:	9c cf       	rjmp	.-200    	; 0x12f8 <scheduler_run+0x14>

000013c0 <scheduler_add>:
    13c0:	ff 92       	push	r15
    13c2:	0f 93       	push	r16
    13c4:	1f 93       	push	r17
    13c6:	cf 93       	push	r28
    13c8:	df 93       	push	r29
    13ca:	cd b7       	in	r28, 0x3d	; 61
    13cc:	de b7       	in	r29, 0x3e	; 62
    13ce:	27 97       	sbiw	r28, 0x07	; 7
    13d0:	0f b6       	in	r0, 0x3f	; 63
    13d2:	f8 94       	cli
    13d4:	de bf       	out	0x3e, r29	; 62
    13d6:	0f be       	out	0x3f, r0	; 63
    13d8:	cd bf       	out	0x3d, r28	; 61
    13da:	9f 83       	std	Y+7, r25	; 0x07
    13dc:	8e 83       	std	Y+6, r24	; 0x06
    13de:	8f e5       	ldi	r24, 0x5F	; 95
    13e0:	90 e0       	ldi	r25, 0x00	; 0
    13e2:	fc 01       	movw	r30, r24
    13e4:	80 81       	ld	r24, Z
    13e6:	8d 83       	std	Y+5, r24	; 0x05
    13e8:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <__iCliRetVal>
    13ec:	8a 83       	std	Y+2, r24	; 0x02
    13ee:	3f c0       	rjmp	.+126    	; 0x146e <scheduler_add+0xae>
    13f0:	80 91 75 08 	lds	r24, 0x0875
    13f4:	90 91 76 08 	lds	r25, 0x0876
    13f8:	9c 83       	std	Y+4, r25	; 0x04
    13fa:	8b 83       	std	Y+3, r24	; 0x03
    13fc:	18 c0       	rjmp	.+48     	; 0x142e <scheduler_add+0x6e>
    13fe:	8b 81       	ldd	r24, Y+3	; 0x03
    1400:	9c 81       	ldd	r25, Y+4	; 0x04
    1402:	fc 01       	movw	r30, r24
    1404:	20 81       	ld	r18, Z
    1406:	31 81       	ldd	r19, Z+1	; 0x01
    1408:	8e 81       	ldd	r24, Y+6	; 0x06
    140a:	9f 81       	ldd	r25, Y+7	; 0x07
    140c:	fc 01       	movw	r30, r24
    140e:	80 81       	ld	r24, Z
    1410:	91 81       	ldd	r25, Z+1	; 0x01
    1412:	28 17       	cp	r18, r24
    1414:	39 07       	cpc	r19, r25
    1416:	21 f4       	brne	.+8      	; 0x1420 <scheduler_add+0x60>
    1418:	f1 2c       	mov	r15, r1
    141a:	00 e0       	ldi	r16, 0x00	; 0
    141c:	10 e0       	ldi	r17, 0x00	; 0
    141e:	2d c0       	rjmp	.+90     	; 0x147a <scheduler_add+0xba>
    1420:	8b 81       	ldd	r24, Y+3	; 0x03
    1422:	9c 81       	ldd	r25, Y+4	; 0x04
    1424:	fc 01       	movw	r30, r24
    1426:	81 85       	ldd	r24, Z+9	; 0x09
    1428:	92 85       	ldd	r25, Z+10	; 0x0a
    142a:	9c 83       	std	Y+4, r25	; 0x04
    142c:	8b 83       	std	Y+3, r24	; 0x03
    142e:	8b 81       	ldd	r24, Y+3	; 0x03
    1430:	9c 81       	ldd	r25, Y+4	; 0x04
    1432:	89 2b       	or	r24, r25
    1434:	21 f7       	brne	.-56     	; 0x13fe <scheduler_add+0x3e>
    1436:	8e 81       	ldd	r24, Y+6	; 0x06
    1438:	9f 81       	ldd	r25, Y+7	; 0x07
    143a:	89 2b       	or	r24, r25
    143c:	11 f4       	brne	.+4      	; 0x1442 <scheduler_add+0x82>
    143e:	19 82       	std	Y+1, r1	; 0x01
    1440:	15 c0       	rjmp	.+42     	; 0x146c <scheduler_add+0xac>
    1442:	80 91 75 08 	lds	r24, 0x0875
    1446:	90 91 76 08 	lds	r25, 0x0876
    144a:	9c 83       	std	Y+4, r25	; 0x04
    144c:	8b 83       	std	Y+3, r24	; 0x03
    144e:	8e 81       	ldd	r24, Y+6	; 0x06
    1450:	9f 81       	ldd	r25, Y+7	; 0x07
    1452:	90 93 76 08 	sts	0x0876, r25
    1456:	80 93 75 08 	sts	0x0875, r24
    145a:	8e 81       	ldd	r24, Y+6	; 0x06
    145c:	9f 81       	ldd	r25, Y+7	; 0x07
    145e:	2b 81       	ldd	r18, Y+3	; 0x03
    1460:	3c 81       	ldd	r19, Y+4	; 0x04
    1462:	fc 01       	movw	r30, r24
    1464:	32 87       	std	Z+10, r19	; 0x0a
    1466:	21 87       	std	Z+9, r18	; 0x09
    1468:	81 e0       	ldi	r24, 0x01	; 1
    146a:	89 83       	std	Y+1, r24	; 0x01
    146c:	1a 82       	std	Y+2, r1	; 0x02
    146e:	8a 81       	ldd	r24, Y+2	; 0x02
    1470:	88 23       	and	r24, r24
    1472:	09 f0       	breq	.+2      	; 0x1476 <scheduler_add+0xb6>
    1474:	bd cf       	rjmp	.-134    	; 0x13f0 <scheduler_add+0x30>
    1476:	01 e0       	ldi	r16, 0x01	; 1
    1478:	10 e0       	ldi	r17, 0x00	; 0
    147a:	ce 01       	movw	r24, r28
    147c:	05 96       	adiw	r24, 0x05	; 5
    147e:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <__iRestore>
    1482:	01 30       	cpi	r16, 0x01	; 1
    1484:	11 05       	cpc	r17, r1
    1486:	11 f4       	brne	.+4      	; 0x148c <scheduler_add+0xcc>
    1488:	00 00       	nop
    148a:	f9 80       	ldd	r15, Y+1	; 0x01
    148c:	8f 2d       	mov	r24, r15
    148e:	27 96       	adiw	r28, 0x07	; 7
    1490:	0f b6       	in	r0, 0x3f	; 63
    1492:	f8 94       	cli
    1494:	de bf       	out	0x3e, r29	; 62
    1496:	0f be       	out	0x3f, r0	; 63
    1498:	cd bf       	out	0x3d, r28	; 61
    149a:	df 91       	pop	r29
    149c:	cf 91       	pop	r28
    149e:	1f 91       	pop	r17
    14a0:	0f 91       	pop	r16
    14a2:	ff 90       	pop	r15
    14a4:	08 95       	ret

000014a6 <scheduler_remove>:
    14a6:	cf 93       	push	r28
    14a8:	df 93       	push	r29
    14aa:	cd b7       	in	r28, 0x3d	; 61
    14ac:	de b7       	in	r29, 0x3e	; 62
    14ae:	29 97       	sbiw	r28, 0x09	; 9
    14b0:	0f b6       	in	r0, 0x3f	; 63
    14b2:	f8 94       	cli
    14b4:	de bf       	out	0x3e, r29	; 62
    14b6:	0f be       	out	0x3f, r0	; 63
    14b8:	cd bf       	out	0x3d, r28	; 61
    14ba:	99 87       	std	Y+9, r25	; 0x09
    14bc:	88 87       	std	Y+8, r24	; 0x08
    14be:	8f e5       	ldi	r24, 0x5F	; 95
    14c0:	90 e0       	ldi	r25, 0x00	; 0
    14c2:	fc 01       	movw	r30, r24
    14c4:	80 81       	ld	r24, Z
    14c6:	8f 83       	std	Y+7, r24	; 0x07
    14c8:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <__iCliRetVal>
    14cc:	89 83       	std	Y+1, r24	; 0x01
    14ce:	4a c0       	rjmp	.+148    	; 0x1564 <scheduler_remove+0xbe>
    14d0:	80 91 75 08 	lds	r24, 0x0875
    14d4:	90 91 76 08 	lds	r25, 0x0876
    14d8:	9b 83       	std	Y+3, r25	; 0x03
    14da:	8a 83       	std	Y+2, r24	; 0x02
    14dc:	1d 82       	std	Y+5, r1	; 0x05
    14de:	1c 82       	std	Y+4, r1	; 0x04
    14e0:	1e 82       	std	Y+6, r1	; 0x06
    14e2:	36 c0       	rjmp	.+108    	; 0x1550 <scheduler_remove+0xaa>
    14e4:	2a 81       	ldd	r18, Y+2	; 0x02
    14e6:	3b 81       	ldd	r19, Y+3	; 0x03
    14e8:	88 85       	ldd	r24, Y+8	; 0x08
    14ea:	99 85       	ldd	r25, Y+9	; 0x09
    14ec:	28 17       	cp	r18, r24
    14ee:	39 07       	cpc	r19, r25
    14f0:	21 f5       	brne	.+72     	; 0x153a <scheduler_remove+0x94>
    14f2:	80 91 75 08 	lds	r24, 0x0875
    14f6:	90 91 76 08 	lds	r25, 0x0876
    14fa:	2a 81       	ldd	r18, Y+2	; 0x02
    14fc:	3b 81       	ldd	r19, Y+3	; 0x03
    14fe:	28 17       	cp	r18, r24
    1500:	39 07       	cpc	r19, r25
    1502:	71 f4       	brne	.+28     	; 0x1520 <scheduler_remove+0x7a>
    1504:	80 91 75 08 	lds	r24, 0x0875
    1508:	90 91 76 08 	lds	r25, 0x0876
    150c:	fc 01       	movw	r30, r24
    150e:	81 85       	ldd	r24, Z+9	; 0x09
    1510:	92 85       	ldd	r25, Z+10	; 0x0a
    1512:	90 93 76 08 	sts	0x0876, r25
    1516:	80 93 75 08 	sts	0x0875, r24
    151a:	81 e0       	ldi	r24, 0x01	; 1
    151c:	8e 83       	std	Y+6, r24	; 0x06
    151e:	18 c0       	rjmp	.+48     	; 0x1550 <scheduler_remove+0xaa>
    1520:	8a 81       	ldd	r24, Y+2	; 0x02
    1522:	9b 81       	ldd	r25, Y+3	; 0x03
    1524:	fc 01       	movw	r30, r24
    1526:	21 85       	ldd	r18, Z+9	; 0x09
    1528:	32 85       	ldd	r19, Z+10	; 0x0a
    152a:	8c 81       	ldd	r24, Y+4	; 0x04
    152c:	9d 81       	ldd	r25, Y+5	; 0x05
    152e:	fc 01       	movw	r30, r24
    1530:	32 87       	std	Z+10, r19	; 0x0a
    1532:	21 87       	std	Z+9, r18	; 0x09
    1534:	81 e0       	ldi	r24, 0x01	; 1
    1536:	8e 83       	std	Y+6, r24	; 0x06
    1538:	0b c0       	rjmp	.+22     	; 0x1550 <scheduler_remove+0xaa>
    153a:	8a 81       	ldd	r24, Y+2	; 0x02
    153c:	9b 81       	ldd	r25, Y+3	; 0x03
    153e:	9d 83       	std	Y+5, r25	; 0x05
    1540:	8c 83       	std	Y+4, r24	; 0x04
    1542:	8a 81       	ldd	r24, Y+2	; 0x02
    1544:	9b 81       	ldd	r25, Y+3	; 0x03
    1546:	fc 01       	movw	r30, r24
    1548:	81 85       	ldd	r24, Z+9	; 0x09
    154a:	92 85       	ldd	r25, Z+10	; 0x0a
    154c:	9b 83       	std	Y+3, r25	; 0x03
    154e:	8a 83       	std	Y+2, r24	; 0x02
    1550:	8a 81       	ldd	r24, Y+2	; 0x02
    1552:	9b 81       	ldd	r25, Y+3	; 0x03
    1554:	89 2b       	or	r24, r25
    1556:	29 f0       	breq	.+10     	; 0x1562 <scheduler_remove+0xbc>
    1558:	9e 81       	ldd	r25, Y+6	; 0x06
    155a:	81 e0       	ldi	r24, 0x01	; 1
    155c:	89 27       	eor	r24, r25
    155e:	88 23       	and	r24, r24
    1560:	09 f6       	brne	.-126    	; 0x14e4 <scheduler_remove+0x3e>
    1562:	19 82       	std	Y+1, r1	; 0x01
    1564:	89 81       	ldd	r24, Y+1	; 0x01
    1566:	88 23       	and	r24, r24
    1568:	09 f0       	breq	.+2      	; 0x156c <scheduler_remove+0xc6>
    156a:	b2 cf       	rjmp	.-156    	; 0x14d0 <scheduler_remove+0x2a>
    156c:	ce 01       	movw	r24, r28
    156e:	07 96       	adiw	r24, 0x07	; 7
    1570:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <__iRestore>
    1574:	29 96       	adiw	r28, 0x09	; 9
    1576:	0f b6       	in	r0, 0x3f	; 63
    1578:	f8 94       	cli
    157a:	de bf       	out	0x3e, r29	; 62
    157c:	0f be       	out	0x3f, r0	; 63
    157e:	cd bf       	out	0x3d, r28	; 61
    1580:	df 91       	pop	r29
    1582:	cf 91       	pop	r28
    1584:	08 95       	ret

00001586 <scheduler_getTime>:
    1586:	cf 93       	push	r28
    1588:	df 93       	push	r29
    158a:	00 d0       	rcall	.+0      	; 0x158c <scheduler_getTime+0x6>
    158c:	00 d0       	rcall	.+0      	; 0x158e <scheduler_getTime+0x8>
    158e:	00 d0       	rcall	.+0      	; 0x1590 <scheduler_getTime+0xa>
    1590:	cd b7       	in	r28, 0x3d	; 61
    1592:	de b7       	in	r29, 0x3e	; 62
    1594:	8f e5       	ldi	r24, 0x5F	; 95
    1596:	90 e0       	ldi	r25, 0x00	; 0
    1598:	fc 01       	movw	r30, r24
    159a:	80 81       	ld	r24, Z
    159c:	8e 83       	std	Y+6, r24	; 0x06
    159e:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <__iCliRetVal>
    15a2:	8d 83       	std	Y+5, r24	; 0x05
    15a4:	0d c0       	rjmp	.+26     	; 0x15c0 <scheduler_getTime+0x3a>
    15a6:	80 91 77 08 	lds	r24, 0x0877
    15aa:	90 91 78 08 	lds	r25, 0x0878
    15ae:	a0 91 79 08 	lds	r26, 0x0879
    15b2:	b0 91 7a 08 	lds	r27, 0x087A
    15b6:	89 83       	std	Y+1, r24	; 0x01
    15b8:	9a 83       	std	Y+2, r25	; 0x02
    15ba:	ab 83       	std	Y+3, r26	; 0x03
    15bc:	bc 83       	std	Y+4, r27	; 0x04
    15be:	1d 82       	std	Y+5, r1	; 0x05
    15c0:	8d 81       	ldd	r24, Y+5	; 0x05
    15c2:	88 23       	and	r24, r24
    15c4:	81 f7       	brne	.-32     	; 0x15a6 <scheduler_getTime+0x20>
    15c6:	ce 01       	movw	r24, r28
    15c8:	06 96       	adiw	r24, 0x06	; 6
    15ca:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <__iRestore>
    15ce:	89 81       	ldd	r24, Y+1	; 0x01
    15d0:	9a 81       	ldd	r25, Y+2	; 0x02
    15d2:	ab 81       	ldd	r26, Y+3	; 0x03
    15d4:	bc 81       	ldd	r27, Y+4	; 0x04
    15d6:	bc 01       	movw	r22, r24
    15d8:	cd 01       	movw	r24, r26
    15da:	26 96       	adiw	r28, 0x06	; 6
    15dc:	0f b6       	in	r0, 0x3f	; 63
    15de:	f8 94       	cli
    15e0:	de bf       	out	0x3e, r29	; 62
    15e2:	0f be       	out	0x3f, r0	; 63
    15e4:	cd bf       	out	0x3d, r28	; 61
    15e6:	df 91       	pop	r29
    15e8:	cf 91       	pop	r28
    15ea:	08 95       	ret

000015ec <scheduler_setTime>:
    15ec:	cf 93       	push	r28
    15ee:	df 93       	push	r29
    15f0:	00 d0       	rcall	.+0      	; 0x15f2 <scheduler_setTime+0x6>
    15f2:	00 d0       	rcall	.+0      	; 0x15f4 <scheduler_setTime+0x8>
    15f4:	00 d0       	rcall	.+0      	; 0x15f6 <scheduler_setTime+0xa>
    15f6:	cd b7       	in	r28, 0x3d	; 61
    15f8:	de b7       	in	r29, 0x3e	; 62
    15fa:	6b 83       	std	Y+3, r22	; 0x03
    15fc:	7c 83       	std	Y+4, r23	; 0x04
    15fe:	8d 83       	std	Y+5, r24	; 0x05
    1600:	9e 83       	std	Y+6, r25	; 0x06
    1602:	8f e5       	ldi	r24, 0x5F	; 95
    1604:	90 e0       	ldi	r25, 0x00	; 0
    1606:	fc 01       	movw	r30, r24
    1608:	80 81       	ld	r24, Z
    160a:	8a 83       	std	Y+2, r24	; 0x02
    160c:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <__iCliRetVal>
    1610:	89 83       	std	Y+1, r24	; 0x01
    1612:	0d c0       	rjmp	.+26     	; 0x162e <scheduler_setTime+0x42>
    1614:	8b 81       	ldd	r24, Y+3	; 0x03
    1616:	9c 81       	ldd	r25, Y+4	; 0x04
    1618:	ad 81       	ldd	r26, Y+5	; 0x05
    161a:	be 81       	ldd	r27, Y+6	; 0x06
    161c:	80 93 77 08 	sts	0x0877, r24
    1620:	90 93 78 08 	sts	0x0878, r25
    1624:	a0 93 79 08 	sts	0x0879, r26
    1628:	b0 93 7a 08 	sts	0x087A, r27
    162c:	19 82       	std	Y+1, r1	; 0x01
    162e:	89 81       	ldd	r24, Y+1	; 0x01
    1630:	88 23       	and	r24, r24
    1632:	81 f7       	brne	.-32     	; 0x1614 <scheduler_setTime+0x28>
    1634:	ce 01       	movw	r24, r28
    1636:	02 96       	adiw	r24, 0x02	; 2
    1638:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <__iRestore>
    163c:	26 96       	adiw	r28, 0x06	; 6
    163e:	0f b6       	in	r0, 0x3f	; 63
    1640:	f8 94       	cli
    1642:	de bf       	out	0x3e, r29	; 62
    1644:	0f be       	out	0x3f, r0	; 63
    1646:	cd bf       	out	0x3d, r28	; 61
    1648:	df 91       	pop	r29
    164a:	cf 91       	pop	r28
    164c:	08 95       	ret

0000164e <timer2_setCallback>:
    164e:	cf 93       	push	r28
    1650:	df 93       	push	r29
    1652:	00 d0       	rcall	.+0      	; 0x1654 <timer2_setCallback+0x6>
    1654:	cd b7       	in	r28, 0x3d	; 61
    1656:	de b7       	in	r29, 0x3e	; 62
    1658:	9a 83       	std	Y+2, r25	; 0x02
    165a:	89 83       	std	Y+1, r24	; 0x01
    165c:	89 81       	ldd	r24, Y+1	; 0x01
    165e:	9a 81       	ldd	r25, Y+2	; 0x02
    1660:	90 93 7e 08 	sts	0x087E, r25
    1664:	80 93 7d 08 	sts	0x087D, r24
    1668:	0f 90       	pop	r0
    166a:	0f 90       	pop	r0
    166c:	df 91       	pop	r29
    166e:	cf 91       	pop	r28
    1670:	08 95       	ret

00001672 <timer2_start>:
    1672:	cf 93       	push	r28
    1674:	df 93       	push	r29
    1676:	cd b7       	in	r28, 0x3d	; 61
    1678:	de b7       	in	r29, 0x3e	; 62
    167a:	81 eb       	ldi	r24, 0xB1	; 177
    167c:	90 e0       	ldi	r25, 0x00	; 0
    167e:	21 eb       	ldi	r18, 0xB1	; 177
    1680:	30 e0       	ldi	r19, 0x00	; 0
    1682:	f9 01       	movw	r30, r18
    1684:	20 81       	ld	r18, Z
    1686:	27 7f       	andi	r18, 0xF7	; 247
    1688:	fc 01       	movw	r30, r24
    168a:	20 83       	st	Z, r18
    168c:	80 eb       	ldi	r24, 0xB0	; 176
    168e:	90 e0       	ldi	r25, 0x00	; 0
    1690:	20 eb       	ldi	r18, 0xB0	; 176
    1692:	30 e0       	ldi	r19, 0x00	; 0
    1694:	f9 01       	movw	r30, r18
    1696:	20 81       	ld	r18, Z
    1698:	22 60       	ori	r18, 0x02	; 2
    169a:	fc 01       	movw	r30, r24
    169c:	20 83       	st	Z, r18
    169e:	80 eb       	ldi	r24, 0xB0	; 176
    16a0:	90 e0       	ldi	r25, 0x00	; 0
    16a2:	20 eb       	ldi	r18, 0xB0	; 176
    16a4:	30 e0       	ldi	r19, 0x00	; 0
    16a6:	f9 01       	movw	r30, r18
    16a8:	20 81       	ld	r18, Z
    16aa:	2e 7f       	andi	r18, 0xFE	; 254
    16ac:	fc 01       	movw	r30, r24
    16ae:	20 83       	st	Z, r18
    16b0:	81 eb       	ldi	r24, 0xB1	; 177
    16b2:	90 e0       	ldi	r25, 0x00	; 0
    16b4:	21 eb       	ldi	r18, 0xB1	; 177
    16b6:	30 e0       	ldi	r19, 0x00	; 0
    16b8:	f9 01       	movw	r30, r18
    16ba:	20 81       	ld	r18, Z
    16bc:	24 60       	ori	r18, 0x04	; 4
    16be:	fc 01       	movw	r30, r24
    16c0:	20 83       	st	Z, r18
    16c2:	81 eb       	ldi	r24, 0xB1	; 177
    16c4:	90 e0       	ldi	r25, 0x00	; 0
    16c6:	21 eb       	ldi	r18, 0xB1	; 177
    16c8:	30 e0       	ldi	r19, 0x00	; 0
    16ca:	f9 01       	movw	r30, r18
    16cc:	20 81       	ld	r18, Z
    16ce:	2d 7f       	andi	r18, 0xFD	; 253
    16d0:	fc 01       	movw	r30, r24
    16d2:	20 83       	st	Z, r18
    16d4:	81 eb       	ldi	r24, 0xB1	; 177
    16d6:	90 e0       	ldi	r25, 0x00	; 0
    16d8:	21 eb       	ldi	r18, 0xB1	; 177
    16da:	30 e0       	ldi	r19, 0x00	; 0
    16dc:	f9 01       	movw	r30, r18
    16de:	20 81       	ld	r18, Z
    16e0:	2e 7f       	andi	r18, 0xFE	; 254
    16e2:	fc 01       	movw	r30, r24
    16e4:	20 83       	st	Z, r18
    16e6:	80 e7       	ldi	r24, 0x70	; 112
    16e8:	90 e0       	ldi	r25, 0x00	; 0
    16ea:	20 e7       	ldi	r18, 0x70	; 112
    16ec:	30 e0       	ldi	r19, 0x00	; 0
    16ee:	f9 01       	movw	r30, r18
    16f0:	20 81       	ld	r18, Z
    16f2:	22 60       	ori	r18, 0x02	; 2
    16f4:	fc 01       	movw	r30, r24
    16f6:	20 83       	st	Z, r18
    16f8:	87 e3       	ldi	r24, 0x37	; 55
    16fa:	90 e0       	ldi	r25, 0x00	; 0
    16fc:	27 e3       	ldi	r18, 0x37	; 55
    16fe:	30 e0       	ldi	r19, 0x00	; 0
    1700:	f9 01       	movw	r30, r18
    1702:	20 81       	ld	r18, Z
    1704:	22 60       	ori	r18, 0x02	; 2
    1706:	fc 01       	movw	r30, r24
    1708:	20 83       	st	Z, r18
    170a:	83 eb       	ldi	r24, 0xB3	; 179
    170c:	90 e0       	ldi	r25, 0x00	; 0
    170e:	29 ef       	ldi	r18, 0xF9	; 249
    1710:	fc 01       	movw	r30, r24
    1712:	20 83       	st	Z, r18
    1714:	df 91       	pop	r29
    1716:	cf 91       	pop	r28
    1718:	08 95       	ret

0000171a <timer2_stop>:
    171a:	cf 93       	push	r28
    171c:	df 93       	push	r29
    171e:	cd b7       	in	r28, 0x3d	; 61
    1720:	de b7       	in	r29, 0x3e	; 62
    1722:	81 eb       	ldi	r24, 0xB1	; 177
    1724:	90 e0       	ldi	r25, 0x00	; 0
    1726:	21 eb       	ldi	r18, 0xB1	; 177
    1728:	30 e0       	ldi	r19, 0x00	; 0
    172a:	f9 01       	movw	r30, r18
    172c:	20 81       	ld	r18, Z
    172e:	2b 7f       	andi	r18, 0xFB	; 251
    1730:	fc 01       	movw	r30, r24
    1732:	20 83       	st	Z, r18
    1734:	df 91       	pop	r29
    1736:	cf 91       	pop	r28
    1738:	08 95       	ret

0000173a <timer1_setCallback>:
    173a:	cf 93       	push	r28
    173c:	df 93       	push	r29
    173e:	00 d0       	rcall	.+0      	; 0x1740 <timer1_setCallback+0x6>
    1740:	cd b7       	in	r28, 0x3d	; 61
    1742:	de b7       	in	r29, 0x3e	; 62
    1744:	9a 83       	std	Y+2, r25	; 0x02
    1746:	89 83       	std	Y+1, r24	; 0x01
    1748:	89 81       	ldd	r24, Y+1	; 0x01
    174a:	9a 81       	ldd	r25, Y+2	; 0x02
    174c:	90 93 7c 08 	sts	0x087C, r25
    1750:	80 93 7b 08 	sts	0x087B, r24
    1754:	0f 90       	pop	r0
    1756:	0f 90       	pop	r0
    1758:	df 91       	pop	r29
    175a:	cf 91       	pop	r28
    175c:	08 95       	ret

0000175e <timer1_start>:
    175e:	cf 93       	push	r28
    1760:	df 93       	push	r29
    1762:	cd b7       	in	r28, 0x3d	; 61
    1764:	de b7       	in	r29, 0x3e	; 62
    1766:	81 e8       	ldi	r24, 0x81	; 129
    1768:	90 e0       	ldi	r25, 0x00	; 0
    176a:	21 e8       	ldi	r18, 0x81	; 129
    176c:	30 e0       	ldi	r19, 0x00	; 0
    176e:	f9 01       	movw	r30, r18
    1770:	20 81       	ld	r18, Z
    1772:	2f 7e       	andi	r18, 0xEF	; 239
    1774:	fc 01       	movw	r30, r24
    1776:	20 83       	st	Z, r18
    1778:	81 e8       	ldi	r24, 0x81	; 129
    177a:	90 e0       	ldi	r25, 0x00	; 0
    177c:	21 e8       	ldi	r18, 0x81	; 129
    177e:	30 e0       	ldi	r19, 0x00	; 0
    1780:	f9 01       	movw	r30, r18
    1782:	20 81       	ld	r18, Z
    1784:	28 60       	ori	r18, 0x08	; 8
    1786:	fc 01       	movw	r30, r24
    1788:	20 83       	st	Z, r18
    178a:	80 e8       	ldi	r24, 0x80	; 128
    178c:	90 e0       	ldi	r25, 0x00	; 0
    178e:	20 e8       	ldi	r18, 0x80	; 128
    1790:	30 e0       	ldi	r19, 0x00	; 0
    1792:	f9 01       	movw	r30, r18
    1794:	20 81       	ld	r18, Z
    1796:	2d 7f       	andi	r18, 0xFD	; 253
    1798:	fc 01       	movw	r30, r24
    179a:	20 83       	st	Z, r18
    179c:	80 e8       	ldi	r24, 0x80	; 128
    179e:	90 e0       	ldi	r25, 0x00	; 0
    17a0:	20 e8       	ldi	r18, 0x80	; 128
    17a2:	30 e0       	ldi	r19, 0x00	; 0
    17a4:	f9 01       	movw	r30, r18
    17a6:	20 81       	ld	r18, Z
    17a8:	2e 7f       	andi	r18, 0xFE	; 254
    17aa:	fc 01       	movw	r30, r24
    17ac:	20 83       	st	Z, r18
    17ae:	81 e8       	ldi	r24, 0x81	; 129
    17b0:	90 e0       	ldi	r25, 0x00	; 0
    17b2:	21 e8       	ldi	r18, 0x81	; 129
    17b4:	30 e0       	ldi	r19, 0x00	; 0
    17b6:	f9 01       	movw	r30, r18
    17b8:	20 81       	ld	r18, Z
    17ba:	2b 7f       	andi	r18, 0xFB	; 251
    17bc:	fc 01       	movw	r30, r24
    17be:	20 83       	st	Z, r18
    17c0:	81 e8       	ldi	r24, 0x81	; 129
    17c2:	90 e0       	ldi	r25, 0x00	; 0
    17c4:	21 e8       	ldi	r18, 0x81	; 129
    17c6:	30 e0       	ldi	r19, 0x00	; 0
    17c8:	f9 01       	movw	r30, r18
    17ca:	20 81       	ld	r18, Z
    17cc:	22 60       	ori	r18, 0x02	; 2
    17ce:	fc 01       	movw	r30, r24
    17d0:	20 83       	st	Z, r18
    17d2:	81 e8       	ldi	r24, 0x81	; 129
    17d4:	90 e0       	ldi	r25, 0x00	; 0
    17d6:	21 e8       	ldi	r18, 0x81	; 129
    17d8:	30 e0       	ldi	r19, 0x00	; 0
    17da:	f9 01       	movw	r30, r18
    17dc:	20 81       	ld	r18, Z
    17de:	21 60       	ori	r18, 0x01	; 1
    17e0:	fc 01       	movw	r30, r24
    17e2:	20 83       	st	Z, r18
    17e4:	8f e6       	ldi	r24, 0x6F	; 111
    17e6:	90 e0       	ldi	r25, 0x00	; 0
    17e8:	2f e6       	ldi	r18, 0x6F	; 111
    17ea:	30 e0       	ldi	r19, 0x00	; 0
    17ec:	f9 01       	movw	r30, r18
    17ee:	20 81       	ld	r18, Z
    17f0:	22 60       	ori	r18, 0x02	; 2
    17f2:	fc 01       	movw	r30, r24
    17f4:	20 83       	st	Z, r18
    17f6:	86 e3       	ldi	r24, 0x36	; 54
    17f8:	90 e0       	ldi	r25, 0x00	; 0
    17fa:	26 e3       	ldi	r18, 0x36	; 54
    17fc:	30 e0       	ldi	r19, 0x00	; 0
    17fe:	f9 01       	movw	r30, r18
    1800:	20 81       	ld	r18, Z
    1802:	22 60       	ori	r18, 0x02	; 2
    1804:	fc 01       	movw	r30, r24
    1806:	20 83       	st	Z, r18
    1808:	88 e8       	ldi	r24, 0x88	; 136
    180a:	90 e0       	ldi	r25, 0x00	; 0
    180c:	21 ee       	ldi	r18, 0xE1	; 225
    180e:	34 e0       	ldi	r19, 0x04	; 4
    1810:	fc 01       	movw	r30, r24
    1812:	31 83       	std	Z+1, r19	; 0x01
    1814:	20 83       	st	Z, r18
    1816:	df 91       	pop	r29
    1818:	cf 91       	pop	r28
    181a:	08 95       	ret

0000181c <timer1_stop>:
    181c:	cf 93       	push	r28
    181e:	df 93       	push	r29
    1820:	cd b7       	in	r28, 0x3d	; 61
    1822:	de b7       	in	r29, 0x3e	; 62
    1824:	81 e8       	ldi	r24, 0x81	; 129
    1826:	90 e0       	ldi	r25, 0x00	; 0
    1828:	21 e8       	ldi	r18, 0x81	; 129
    182a:	30 e0       	ldi	r19, 0x00	; 0
    182c:	f9 01       	movw	r30, r18
    182e:	20 81       	ld	r18, Z
    1830:	2d 7f       	andi	r18, 0xFD	; 253
    1832:	fc 01       	movw	r30, r24
    1834:	20 83       	st	Z, r18
    1836:	81 e8       	ldi	r24, 0x81	; 129
    1838:	90 e0       	ldi	r25, 0x00	; 0
    183a:	21 e8       	ldi	r18, 0x81	; 129
    183c:	30 e0       	ldi	r19, 0x00	; 0
    183e:	f9 01       	movw	r30, r18
    1840:	20 81       	ld	r18, Z
    1842:	2e 7f       	andi	r18, 0xFE	; 254
    1844:	fc 01       	movw	r30, r24
    1846:	20 83       	st	Z, r18
    1848:	df 91       	pop	r29
    184a:	cf 91       	pop	r28
    184c:	08 95       	ret

0000184e <__vector_17>:
    184e:	1f 92       	push	r1
    1850:	0f 92       	push	r0
    1852:	00 90 5f 00 	lds	r0, 0x005F
    1856:	0f 92       	push	r0
    1858:	11 24       	eor	r1, r1
    185a:	00 90 5b 00 	lds	r0, 0x005B
    185e:	0f 92       	push	r0
    1860:	2f 93       	push	r18
    1862:	3f 93       	push	r19
    1864:	4f 93       	push	r20
    1866:	5f 93       	push	r21
    1868:	6f 93       	push	r22
    186a:	7f 93       	push	r23
    186c:	8f 93       	push	r24
    186e:	9f 93       	push	r25
    1870:	af 93       	push	r26
    1872:	bf 93       	push	r27
    1874:	ef 93       	push	r30
    1876:	ff 93       	push	r31
    1878:	cf 93       	push	r28
    187a:	df 93       	push	r29
    187c:	cd b7       	in	r28, 0x3d	; 61
    187e:	de b7       	in	r29, 0x3e	; 62
    1880:	80 91 7b 08 	lds	r24, 0x087B
    1884:	90 91 7c 08 	lds	r25, 0x087C
    1888:	fc 01       	movw	r30, r24
    188a:	09 95       	icall
    188c:	df 91       	pop	r29
    188e:	cf 91       	pop	r28
    1890:	ff 91       	pop	r31
    1892:	ef 91       	pop	r30
    1894:	bf 91       	pop	r27
    1896:	af 91       	pop	r26
    1898:	9f 91       	pop	r25
    189a:	8f 91       	pop	r24
    189c:	7f 91       	pop	r23
    189e:	6f 91       	pop	r22
    18a0:	5f 91       	pop	r21
    18a2:	4f 91       	pop	r20
    18a4:	3f 91       	pop	r19
    18a6:	2f 91       	pop	r18
    18a8:	0f 90       	pop	r0
    18aa:	00 92 5b 00 	sts	0x005B, r0
    18ae:	0f 90       	pop	r0
    18b0:	00 92 5f 00 	sts	0x005F, r0
    18b4:	0f 90       	pop	r0
    18b6:	1f 90       	pop	r1
    18b8:	18 95       	reti

000018ba <__vector_13>:
    18ba:	1f 92       	push	r1
    18bc:	0f 92       	push	r0
    18be:	00 90 5f 00 	lds	r0, 0x005F
    18c2:	0f 92       	push	r0
    18c4:	11 24       	eor	r1, r1
    18c6:	00 90 5b 00 	lds	r0, 0x005B
    18ca:	0f 92       	push	r0
    18cc:	2f 93       	push	r18
    18ce:	3f 93       	push	r19
    18d0:	4f 93       	push	r20
    18d2:	5f 93       	push	r21
    18d4:	6f 93       	push	r22
    18d6:	7f 93       	push	r23
    18d8:	8f 93       	push	r24
    18da:	9f 93       	push	r25
    18dc:	af 93       	push	r26
    18de:	bf 93       	push	r27
    18e0:	ef 93       	push	r30
    18e2:	ff 93       	push	r31
    18e4:	cf 93       	push	r28
    18e6:	df 93       	push	r29
    18e8:	cd b7       	in	r28, 0x3d	; 61
    18ea:	de b7       	in	r29, 0x3e	; 62
    18ec:	80 91 7d 08 	lds	r24, 0x087D
    18f0:	90 91 7e 08 	lds	r25, 0x087E
    18f4:	fc 01       	movw	r30, r24
    18f6:	09 95       	icall
    18f8:	df 91       	pop	r29
    18fa:	cf 91       	pop	r28
    18fc:	ff 91       	pop	r31
    18fe:	ef 91       	pop	r30
    1900:	bf 91       	pop	r27
    1902:	af 91       	pop	r26
    1904:	9f 91       	pop	r25
    1906:	8f 91       	pop	r24
    1908:	7f 91       	pop	r23
    190a:	6f 91       	pop	r22
    190c:	5f 91       	pop	r21
    190e:	4f 91       	pop	r20
    1910:	3f 91       	pop	r19
    1912:	2f 91       	pop	r18
    1914:	0f 90       	pop	r0
    1916:	00 92 5b 00 	sts	0x005B, r0
    191a:	0f 90       	pop	r0
    191c:	00 92 5f 00 	sts	0x005F, r0
    1920:	0f 90       	pop	r0
    1922:	1f 90       	pop	r1
    1924:	18 95       	reti

00001926 <lcd_waitBusy>:
    1926:	0e 94 d2 0d 	call	0x1ba4	; 0x1ba4 <lcdDriver_readStatus>
    192a:	87 fd       	sbrc	r24, 7
    192c:	fc cf       	rjmp	.-8      	; 0x1926 <lcd_waitBusy>
    192e:	08 95       	ret

00001930 <lcd_write>:
    1930:	1f 93       	push	r17
    1932:	cf 93       	push	r28
    1934:	df 93       	push	r29
    1936:	d8 2f       	mov	r29, r24
    1938:	c6 2f       	mov	r28, r22
    193a:	14 2f       	mov	r17, r20
    193c:	6a 37       	cpi	r22, 0x7A	; 122
    193e:	10 f5       	brcc	.+68     	; 0x1984 <lcd_write+0x54>
    1940:	84 30       	cpi	r24, 0x04	; 4
    1942:	00 f5       	brcc	.+64     	; 0x1984 <lcd_write+0x54>
    1944:	6d 33       	cpi	r22, 0x3D	; 61
    1946:	40 f0       	brcs	.+16     	; 0x1958 <lcd_write+0x28>
    1948:	81 e0       	ldi	r24, 0x01	; 1
    194a:	0e 94 c9 0d 	call	0x1b92	; 0x1b92 <lcdDriver_selectController>
    194e:	0e 94 93 0c 	call	0x1926	; 0x1926 <lcd_waitBusy>
    1952:	83 ec       	ldi	r24, 0xC3	; 195
    1954:	8c 0f       	add	r24, r28
    1956:	06 c0       	rjmp	.+12     	; 0x1964 <lcd_write+0x34>
    1958:	80 e0       	ldi	r24, 0x00	; 0
    195a:	0e 94 c9 0d 	call	0x1b92	; 0x1b92 <lcdDriver_selectController>
    195e:	0e 94 93 0c 	call	0x1926	; 0x1926 <lcd_waitBusy>
    1962:	8c 2f       	mov	r24, r28
    1964:	0e 94 bf 0d 	call	0x1b7e	; 0x1b7e <lcdDriver_writeCommand>
    1968:	0e 94 93 0c 	call	0x1926	; 0x1926 <lcd_waitBusy>
    196c:	8d 2f       	mov	r24, r29
    196e:	88 6b       	ori	r24, 0xB8	; 184
    1970:	0e 94 bf 0d 	call	0x1b7e	; 0x1b7e <lcdDriver_writeCommand>
    1974:	0e 94 93 0c 	call	0x1926	; 0x1926 <lcd_waitBusy>
    1978:	81 2f       	mov	r24, r17
    197a:	df 91       	pop	r29
    197c:	cf 91       	pop	r28
    197e:	1f 91       	pop	r17
    1980:	0c 94 b4 0d 	jmp	0x1b68	; 0x1b68 <lcdDriver_writeData>
    1984:	df 91       	pop	r29
    1986:	cf 91       	pop	r28
    1988:	1f 91       	pop	r17
    198a:	08 95       	ret

0000198c <lcd_setCursor>:
    198c:	80 93 68 0a 	sts	0x0A68, r24
    1990:	60 93 67 0a 	sts	0x0A67, r22
    1994:	08 95       	ret

00001996 <lcd_putc>:
    1996:	0f 93       	push	r16
    1998:	1f 93       	push	r17
    199a:	cf 93       	push	r28
    199c:	df 93       	push	r29
    199e:	90 91 67 0a 	lds	r25, 0x0A67
    19a2:	8a 30       	cpi	r24, 0x0A	; 10
    19a4:	31 f4       	brne	.+12     	; 0x19b2 <lcd_putc+0x1c>
    19a6:	10 92 68 0a 	sts	0x0A68, r1
    19aa:	9f 5f       	subi	r25, 0xFF	; 255
    19ac:	90 93 67 0a 	sts	0x0A67, r25
    19b0:	2d c0       	rjmp	.+90     	; 0x1a0c <lcd_putc+0x76>
    19b2:	20 91 68 0a 	lds	r18, 0x0A68
    19b6:	24 31       	cpi	r18, 0x14	; 20
    19b8:	29 f4       	brne	.+10     	; 0x19c4 <lcd_putc+0x2e>
    19ba:	10 92 68 0a 	sts	0x0A68, r1
    19be:	9f 5f       	subi	r25, 0xFF	; 255
    19c0:	90 93 67 0a 	sts	0x0A67, r25
    19c4:	90 91 67 0a 	lds	r25, 0x0A67
    19c8:	94 30       	cpi	r25, 0x04	; 4
    19ca:	00 f5       	brcc	.+64     	; 0x1a0c <lcd_putc+0x76>
    19cc:	96 e0       	ldi	r25, 0x06	; 6
    19ce:	89 9f       	mul	r24, r25
    19d0:	80 01       	movw	r16, r0
    19d2:	11 24       	eor	r1, r1
    19d4:	c0 e0       	ldi	r28, 0x00	; 0
    19d6:	d0 e0       	ldi	r29, 0x00	; 0
    19d8:	07 5c       	subi	r16, 0xC7	; 199
    19da:	1d 4f       	sbci	r17, 0xFD	; 253
    19dc:	f8 01       	movw	r30, r16
    19de:	ec 0f       	add	r30, r28
    19e0:	fd 1f       	adc	r31, r29
    19e2:	80 91 68 0a 	lds	r24, 0x0A68
    19e6:	68 2f       	mov	r22, r24
    19e8:	66 0f       	add	r22, r22
    19ea:	68 0f       	add	r22, r24
    19ec:	66 0f       	add	r22, r22
    19ee:	6c 0f       	add	r22, r28
    19f0:	40 81       	ld	r20, Z
    19f2:	80 91 67 0a 	lds	r24, 0x0A67
    19f6:	0e 94 98 0c 	call	0x1930	; 0x1930 <lcd_write>
    19fa:	21 96       	adiw	r28, 0x01	; 1
    19fc:	c6 30       	cpi	r28, 0x06	; 6
    19fe:	d1 05       	cpc	r29, r1
    1a00:	69 f7       	brne	.-38     	; 0x19dc <lcd_putc+0x46>
    1a02:	80 91 68 0a 	lds	r24, 0x0A68
    1a06:	8f 5f       	subi	r24, 0xFF	; 255
    1a08:	80 93 68 0a 	sts	0x0A68, r24
    1a0c:	df 91       	pop	r29
    1a0e:	cf 91       	pop	r28
    1a10:	1f 91       	pop	r17
    1a12:	0f 91       	pop	r16
    1a14:	08 95       	ret

00001a16 <put>:
    1a16:	0e 94 cb 0c 	call	0x1996	; 0x1996 <lcd_putc>
    1a1a:	80 e0       	ldi	r24, 0x00	; 0
    1a1c:	90 e0       	ldi	r25, 0x00	; 0
    1a1e:	08 95       	ret

00001a20 <lcd_setPixel>:
    1a20:	98 2f       	mov	r25, r24
    1a22:	96 95       	lsr	r25
    1a24:	96 95       	lsr	r25
    1a26:	96 95       	lsr	r25
    1a28:	94 30       	cpi	r25, 0x04	; 4
    1a2a:	08 f0       	brcs	.+2      	; 0x1a2e <lcd_setPixel+0xe>
    1a2c:	3f c0       	rjmp	.+126    	; 0x1aac <lcd_setPixel+0x8c>
    1a2e:	6a 37       	cpi	r22, 0x7A	; 122
    1a30:	e8 f5       	brcc	.+122    	; 0x1aac <lcd_setPixel+0x8c>
    1a32:	87 70       	andi	r24, 0x07	; 7
    1a34:	a9 2f       	mov	r26, r25
    1a36:	b0 e0       	ldi	r27, 0x00	; 0
    1a38:	26 2f       	mov	r18, r22
    1a3a:	30 e0       	ldi	r19, 0x00	; 0
    1a3c:	44 23       	and	r20, r20
    1a3e:	a1 f0       	breq	.+40     	; 0x1a68 <lcd_setPixel+0x48>
    1a40:	4a e7       	ldi	r20, 0x7A	; 122
    1a42:	4a 9f       	mul	r20, r26
    1a44:	f0 01       	movw	r30, r0
    1a46:	4b 9f       	mul	r20, r27
    1a48:	f0 0d       	add	r31, r0
    1a4a:	11 24       	eor	r1, r1
    1a4c:	e2 0f       	add	r30, r18
    1a4e:	f3 1f       	adc	r31, r19
    1a50:	e1 58       	subi	r30, 0x81	; 129
    1a52:	f7 4f       	sbci	r31, 0xF7	; 247
    1a54:	41 e0       	ldi	r20, 0x01	; 1
    1a56:	50 e0       	ldi	r21, 0x00	; 0
    1a58:	01 c0       	rjmp	.+2      	; 0x1a5c <lcd_setPixel+0x3c>
    1a5a:	44 0f       	add	r20, r20
    1a5c:	8a 95       	dec	r24
    1a5e:	ea f7       	brpl	.-6      	; 0x1a5a <lcd_setPixel+0x3a>
    1a60:	80 81       	ld	r24, Z
    1a62:	84 2b       	or	r24, r20
    1a64:	80 83       	st	Z, r24
    1a66:	14 c0       	rjmp	.+40     	; 0x1a90 <lcd_setPixel+0x70>
    1a68:	4a e7       	ldi	r20, 0x7A	; 122
    1a6a:	4a 9f       	mul	r20, r26
    1a6c:	f0 01       	movw	r30, r0
    1a6e:	4b 9f       	mul	r20, r27
    1a70:	f0 0d       	add	r31, r0
    1a72:	11 24       	eor	r1, r1
    1a74:	e2 0f       	add	r30, r18
    1a76:	f3 1f       	adc	r31, r19
    1a78:	e1 58       	subi	r30, 0x81	; 129
    1a7a:	f7 4f       	sbci	r31, 0xF7	; 247
    1a7c:	41 e0       	ldi	r20, 0x01	; 1
    1a7e:	50 e0       	ldi	r21, 0x00	; 0
    1a80:	01 c0       	rjmp	.+2      	; 0x1a84 <lcd_setPixel+0x64>
    1a82:	44 0f       	add	r20, r20
    1a84:	8a 95       	dec	r24
    1a86:	ea f7       	brpl	.-6      	; 0x1a82 <lcd_setPixel+0x62>
    1a88:	40 95       	com	r20
    1a8a:	80 81       	ld	r24, Z
    1a8c:	48 23       	and	r20, r24
    1a8e:	40 83       	st	Z, r20
    1a90:	8a e7       	ldi	r24, 0x7A	; 122
    1a92:	8a 9f       	mul	r24, r26
    1a94:	f0 01       	movw	r30, r0
    1a96:	8b 9f       	mul	r24, r27
    1a98:	f0 0d       	add	r31, r0
    1a9a:	11 24       	eor	r1, r1
    1a9c:	e2 0f       	add	r30, r18
    1a9e:	f3 1f       	adc	r31, r19
    1aa0:	e1 58       	subi	r30, 0x81	; 129
    1aa2:	f7 4f       	sbci	r31, 0xF7	; 247
    1aa4:	40 81       	ld	r20, Z
    1aa6:	89 2f       	mov	r24, r25
    1aa8:	0c 94 98 0c 	jmp	0x1930	; 0x1930 <lcd_write>
    1aac:	08 95       	ret

00001aae <lcd_clear>:
    1aae:	ff 92       	push	r15
    1ab0:	0f 93       	push	r16
    1ab2:	1f 93       	push	r17
    1ab4:	cf 93       	push	r28
    1ab6:	df 93       	push	r29
    1ab8:	0f e7       	ldi	r16, 0x7F	; 127
    1aba:	18 e0       	ldi	r17, 0x08	; 8
    1abc:	f1 2c       	mov	r15, r1
    1abe:	c0 e0       	ldi	r28, 0x00	; 0
    1ac0:	d0 e0       	ldi	r29, 0x00	; 0
    1ac2:	40 e0       	ldi	r20, 0x00	; 0
    1ac4:	6c 2f       	mov	r22, r28
    1ac6:	8f 2d       	mov	r24, r15
    1ac8:	0e 94 98 0c 	call	0x1930	; 0x1930 <lcd_write>
    1acc:	f8 01       	movw	r30, r16
    1ace:	ec 0f       	add	r30, r28
    1ad0:	fd 1f       	adc	r31, r29
    1ad2:	10 82       	st	Z, r1
    1ad4:	21 96       	adiw	r28, 0x01	; 1
    1ad6:	ca 37       	cpi	r28, 0x7A	; 122
    1ad8:	d1 05       	cpc	r29, r1
    1ada:	99 f7       	brne	.-26     	; 0x1ac2 <lcd_clear+0x14>
    1adc:	f3 94       	inc	r15
    1ade:	06 58       	subi	r16, 0x86	; 134
    1ae0:	1f 4f       	sbci	r17, 0xFF	; 255
    1ae2:	84 e0       	ldi	r24, 0x04	; 4
    1ae4:	f8 12       	cpse	r15, r24
    1ae6:	eb cf       	rjmp	.-42     	; 0x1abe <lcd_clear+0x10>
    1ae8:	df 91       	pop	r29
    1aea:	cf 91       	pop	r28
    1aec:	1f 91       	pop	r17
    1aee:	0f 91       	pop	r16
    1af0:	ff 90       	pop	r15
    1af2:	08 95       	ret

00001af4 <lcd_init>:
    1af4:	0e 94 ad 0d 	call	0x1b5a	; 0x1b5a <lcdDriver_init>
    1af8:	80 e0       	ldi	r24, 0x00	; 0
    1afa:	0e 94 c9 0d 	call	0x1b92	; 0x1b92 <lcdDriver_selectController>
    1afe:	0e 94 93 0c 	call	0x1926	; 0x1926 <lcd_waitBusy>
    1b02:	82 ee       	ldi	r24, 0xE2	; 226
    1b04:	0e 94 bf 0d 	call	0x1b7e	; 0x1b7e <lcdDriver_writeCommand>
    1b08:	0e 94 93 0c 	call	0x1926	; 0x1926 <lcd_waitBusy>
    1b0c:	8f ea       	ldi	r24, 0xAF	; 175
    1b0e:	0e 94 bf 0d 	call	0x1b7e	; 0x1b7e <lcdDriver_writeCommand>
    1b12:	81 e0       	ldi	r24, 0x01	; 1
    1b14:	0e 94 c9 0d 	call	0x1b92	; 0x1b92 <lcdDriver_selectController>
    1b18:	0e 94 93 0c 	call	0x1926	; 0x1926 <lcd_waitBusy>
    1b1c:	82 ee       	ldi	r24, 0xE2	; 226
    1b1e:	0e 94 bf 0d 	call	0x1b7e	; 0x1b7e <lcdDriver_writeCommand>
    1b22:	0e 94 93 0c 	call	0x1926	; 0x1926 <lcd_waitBusy>
    1b26:	8f ea       	ldi	r24, 0xAF	; 175
    1b28:	0e 94 bf 0d 	call	0x1b7e	; 0x1b7e <lcdDriver_writeCommand>
    1b2c:	0e 94 57 0d 	call	0x1aae	; 0x1aae <lcd_clear>
    1b30:	10 92 68 0a 	sts	0x0A68, r1
    1b34:	10 92 67 0a 	sts	0x0A67, r1
    1b38:	8e e0       	ldi	r24, 0x0E	; 14
    1b3a:	e9 e6       	ldi	r30, 0x69	; 105
    1b3c:	fa e0       	ldi	r31, 0x0A	; 10
    1b3e:	df 01       	movw	r26, r30
    1b40:	1d 92       	st	X+, r1
    1b42:	8a 95       	dec	r24
    1b44:	e9 f7       	brne	.-6      	; 0x1b40 <lcd_init+0x4c>
    1b46:	8b e0       	ldi	r24, 0x0B	; 11
    1b48:	9d e0       	ldi	r25, 0x0D	; 13
    1b4a:	90 93 72 0a 	sts	0x0A72, r25
    1b4e:	80 93 71 0a 	sts	0x0A71, r24
    1b52:	82 e0       	ldi	r24, 0x02	; 2
    1b54:	80 93 6c 0a 	sts	0x0A6C, r24
    1b58:	08 95       	ret

00001b5a <lcdDriver_init>:
    1b5a:	54 9a       	sbi	0x0a, 4	; 10
    1b5c:	55 9a       	sbi	0x0a, 5	; 10
    1b5e:	5d 9a       	sbi	0x0b, 5	; 11
    1b60:	57 9a       	sbi	0x0a, 7	; 10
    1b62:	5f 9a       	sbi	0x0b, 7	; 11
    1b64:	56 9a       	sbi	0x0a, 6	; 10
    1b66:	08 95       	ret

00001b68 <lcdDriver_writeData>:
    1b68:	5e 9a       	sbi	0x0b, 6	; 11
    1b6a:	9f ef       	ldi	r25, 0xFF	; 255
    1b6c:	9d b9       	out	0x0d, r25	; 13
    1b6e:	8e b9       	out	0x0e, r24	; 14
    1b70:	5d 98       	cbi	0x0b, 5	; 11
    1b72:	00 00       	nop
    1b74:	00 00       	nop
    1b76:	00 00       	nop
    1b78:	5d 9a       	sbi	0x0b, 5	; 11
    1b7a:	5e 98       	cbi	0x0b, 6	; 11
    1b7c:	08 95       	ret

00001b7e <lcdDriver_writeCommand>:
    1b7e:	5e 98       	cbi	0x0b, 6	; 11
    1b80:	9f ef       	ldi	r25, 0xFF	; 255
    1b82:	9d b9       	out	0x0d, r25	; 13
    1b84:	8e b9       	out	0x0e, r24	; 14
    1b86:	5d 98       	cbi	0x0b, 5	; 11
    1b88:	00 00       	nop
    1b8a:	00 00       	nop
    1b8c:	00 00       	nop
    1b8e:	5d 9a       	sbi	0x0b, 5	; 11
    1b90:	08 95       	ret

00001b92 <lcdDriver_selectController>:
    1b92:	2b b1       	in	r18, 0x0b	; 11
    1b94:	30 e1       	ldi	r19, 0x10	; 16
    1b96:	83 9f       	mul	r24, r19
    1b98:	c0 01       	movw	r24, r0
    1b9a:	11 24       	eor	r1, r1
    1b9c:	2f 7e       	andi	r18, 0xEF	; 239
    1b9e:	28 2b       	or	r18, r24
    1ba0:	2b b9       	out	0x0b, r18	; 11
    1ba2:	08 95       	ret

00001ba4 <lcdDriver_readStatus>:
    1ba4:	5e 98       	cbi	0x0b, 6	; 11
    1ba6:	1d b8       	out	0x0d, r1	; 13
    1ba8:	1e b8       	out	0x0e, r1	; 14
    1baa:	5f 98       	cbi	0x0b, 7	; 11
    1bac:	00 00       	nop
    1bae:	00 00       	nop
    1bb0:	00 00       	nop
    1bb2:	8c b1       	in	r24, 0x0c	; 12
    1bb4:	5f 9a       	sbi	0x0b, 7	; 11
    1bb6:	08 95       	ret

00001bb8 <uart_init>:
    1bb8:	0f 93       	push	r16
    1bba:	1f 93       	push	r17
    1bbc:	8b 01       	movw	r16, r22
    1bbe:	9c 01       	movw	r18, r24
    1bc0:	80 91 85 0a 	lds	r24, 0x0A85
    1bc4:	81 11       	cpse	r24, r1
    1bc6:	38 c0       	rjmp	.+112    	; 0x1c38 <uart_init+0x80>
    1bc8:	81 e0       	ldi	r24, 0x01	; 1
    1bca:	80 93 85 0a 	sts	0x0A85, r24
    1bce:	c9 01       	movw	r24, r18
    1bd0:	b8 01       	movw	r22, r16
    1bd2:	77 5f       	subi	r23, 0xF7	; 247
    1bd4:	82 4c       	sbci	r24, 0xC2	; 194
    1bd6:	9f 4f       	sbci	r25, 0xFF	; 255
    1bd8:	42 e0       	ldi	r20, 0x02	; 2
    1bda:	66 0f       	add	r22, r22
    1bdc:	77 1f       	adc	r23, r23
    1bde:	88 1f       	adc	r24, r24
    1be0:	99 1f       	adc	r25, r25
    1be2:	4a 95       	dec	r20
    1be4:	d1 f7       	brne	.-12     	; 0x1bda <uart_init+0x22>
    1be6:	a9 01       	movw	r20, r18
    1be8:	98 01       	movw	r18, r16
    1bea:	e3 e0       	ldi	r30, 0x03	; 3
    1bec:	22 0f       	add	r18, r18
    1bee:	33 1f       	adc	r19, r19
    1bf0:	44 1f       	adc	r20, r20
    1bf2:	55 1f       	adc	r21, r21
    1bf4:	ea 95       	dec	r30
    1bf6:	d1 f7       	brne	.-12     	; 0x1bec <uart_init+0x34>
    1bf8:	0e 94 6a 0e 	call	0x1cd4	; 0x1cd4 <__udivmodsi4>
    1bfc:	21 50       	subi	r18, 0x01	; 1
    1bfe:	31 09       	sbc	r19, r1
    1c00:	30 93 cd 00 	sts	0x00CD, r19
    1c04:	20 93 cc 00 	sts	0x00CC, r18
    1c08:	22 e0       	ldi	r18, 0x02	; 2
    1c0a:	20 93 c8 00 	sts	0x00C8, r18
    1c0e:	86 e0       	ldi	r24, 0x06	; 6
    1c10:	80 93 ca 00 	sts	0x00CA, r24
    1c14:	88 e1       	ldi	r24, 0x18	; 24
    1c16:	80 93 c9 00 	sts	0x00C9, r24
    1c1a:	8e e0       	ldi	r24, 0x0E	; 14
    1c1c:	e7 e7       	ldi	r30, 0x77	; 119
    1c1e:	fa e0       	ldi	r31, 0x0A	; 10
    1c20:	df 01       	movw	r26, r30
    1c22:	1d 92       	st	X+, r1
    1c24:	8a 95       	dec	r24
    1c26:	e9 f7       	brne	.-6      	; 0x1c22 <uart_init+0x6a>
    1c28:	8d e2       	ldi	r24, 0x2D	; 45
    1c2a:	9e e0       	ldi	r25, 0x0E	; 14
    1c2c:	90 93 80 0a 	sts	0x0A80, r25
    1c30:	80 93 7f 0a 	sts	0x0A7F, r24
    1c34:	20 93 7a 0a 	sts	0x0A7A, r18
    1c38:	1f 91       	pop	r17
    1c3a:	0f 91       	pop	r16
    1c3c:	08 95       	ret

00001c3e <uart_getc>:
    1c3e:	80 91 c8 00 	lds	r24, 0x00C8
    1c42:	87 ff       	sbrs	r24, 7
    1c44:	fc cf       	rjmp	.-8      	; 0x1c3e <uart_getc>
    1c46:	80 91 ce 00 	lds	r24, 0x00CE
    1c4a:	08 95       	ret

00001c4c <uart_putc>:
    1c4c:	90 91 c8 00 	lds	r25, 0x00C8
    1c50:	95 ff       	sbrs	r25, 5
    1c52:	fc cf       	rjmp	.-8      	; 0x1c4c <uart_putc>
    1c54:	80 93 ce 00 	sts	0x00CE, r24
    1c58:	08 95       	ret

00001c5a <uart_putcProxy>:
    1c5a:	0e 94 26 0e 	call	0x1c4c	; 0x1c4c <uart_putc>
    1c5e:	80 e0       	ldi	r24, 0x00	; 0
    1c60:	90 e0       	ldi	r25, 0x00	; 0
    1c62:	08 95       	ret

00001c64 <__mulsi3>:
    1c64:	db 01       	movw	r26, r22
    1c66:	8f 93       	push	r24
    1c68:	9f 93       	push	r25
    1c6a:	0e 94 ab 0e 	call	0x1d56	; 0x1d56 <__muluhisi3>
    1c6e:	bf 91       	pop	r27
    1c70:	af 91       	pop	r26
    1c72:	a2 9f       	mul	r26, r18
    1c74:	80 0d       	add	r24, r0
    1c76:	91 1d       	adc	r25, r1
    1c78:	a3 9f       	mul	r26, r19
    1c7a:	90 0d       	add	r25, r0
    1c7c:	b2 9f       	mul	r27, r18
    1c7e:	90 0d       	add	r25, r0
    1c80:	11 24       	eor	r1, r1
    1c82:	08 95       	ret

00001c84 <__udivmodhi4>:
    1c84:	aa 1b       	sub	r26, r26
    1c86:	bb 1b       	sub	r27, r27
    1c88:	51 e1       	ldi	r21, 0x11	; 17
    1c8a:	07 c0       	rjmp	.+14     	; 0x1c9a <__udivmodhi4_ep>

00001c8c <__udivmodhi4_loop>:
    1c8c:	aa 1f       	adc	r26, r26
    1c8e:	bb 1f       	adc	r27, r27
    1c90:	a6 17       	cp	r26, r22
    1c92:	b7 07       	cpc	r27, r23
    1c94:	10 f0       	brcs	.+4      	; 0x1c9a <__udivmodhi4_ep>
    1c96:	a6 1b       	sub	r26, r22
    1c98:	b7 0b       	sbc	r27, r23

00001c9a <__udivmodhi4_ep>:
    1c9a:	88 1f       	adc	r24, r24
    1c9c:	99 1f       	adc	r25, r25
    1c9e:	5a 95       	dec	r21
    1ca0:	a9 f7       	brne	.-22     	; 0x1c8c <__udivmodhi4_loop>
    1ca2:	80 95       	com	r24
    1ca4:	90 95       	com	r25
    1ca6:	bc 01       	movw	r22, r24
    1ca8:	cd 01       	movw	r24, r26
    1caa:	08 95       	ret

00001cac <__divmodhi4>:
    1cac:	97 fb       	bst	r25, 7
    1cae:	07 2e       	mov	r0, r23
    1cb0:	16 f4       	brtc	.+4      	; 0x1cb6 <__divmodhi4+0xa>
    1cb2:	00 94       	com	r0
    1cb4:	07 d0       	rcall	.+14     	; 0x1cc4 <__divmodhi4_neg1>
    1cb6:	77 fd       	sbrc	r23, 7
    1cb8:	09 d0       	rcall	.+18     	; 0x1ccc <__divmodhi4_neg2>
    1cba:	0e 94 42 0e 	call	0x1c84	; 0x1c84 <__udivmodhi4>
    1cbe:	07 fc       	sbrc	r0, 7
    1cc0:	05 d0       	rcall	.+10     	; 0x1ccc <__divmodhi4_neg2>
    1cc2:	3e f4       	brtc	.+14     	; 0x1cd2 <__divmodhi4_exit>

00001cc4 <__divmodhi4_neg1>:
    1cc4:	90 95       	com	r25
    1cc6:	81 95       	neg	r24
    1cc8:	9f 4f       	sbci	r25, 0xFF	; 255
    1cca:	08 95       	ret

00001ccc <__divmodhi4_neg2>:
    1ccc:	70 95       	com	r23
    1cce:	61 95       	neg	r22
    1cd0:	7f 4f       	sbci	r23, 0xFF	; 255

00001cd2 <__divmodhi4_exit>:
    1cd2:	08 95       	ret

00001cd4 <__udivmodsi4>:
    1cd4:	a1 e2       	ldi	r26, 0x21	; 33
    1cd6:	1a 2e       	mov	r1, r26
    1cd8:	aa 1b       	sub	r26, r26
    1cda:	bb 1b       	sub	r27, r27
    1cdc:	fd 01       	movw	r30, r26
    1cde:	0d c0       	rjmp	.+26     	; 0x1cfa <__udivmodsi4_ep>

00001ce0 <__udivmodsi4_loop>:
    1ce0:	aa 1f       	adc	r26, r26
    1ce2:	bb 1f       	adc	r27, r27
    1ce4:	ee 1f       	adc	r30, r30
    1ce6:	ff 1f       	adc	r31, r31
    1ce8:	a2 17       	cp	r26, r18
    1cea:	b3 07       	cpc	r27, r19
    1cec:	e4 07       	cpc	r30, r20
    1cee:	f5 07       	cpc	r31, r21
    1cf0:	20 f0       	brcs	.+8      	; 0x1cfa <__udivmodsi4_ep>
    1cf2:	a2 1b       	sub	r26, r18
    1cf4:	b3 0b       	sbc	r27, r19
    1cf6:	e4 0b       	sbc	r30, r20
    1cf8:	f5 0b       	sbc	r31, r21

00001cfa <__udivmodsi4_ep>:
    1cfa:	66 1f       	adc	r22, r22
    1cfc:	77 1f       	adc	r23, r23
    1cfe:	88 1f       	adc	r24, r24
    1d00:	99 1f       	adc	r25, r25
    1d02:	1a 94       	dec	r1
    1d04:	69 f7       	brne	.-38     	; 0x1ce0 <__udivmodsi4_loop>
    1d06:	60 95       	com	r22
    1d08:	70 95       	com	r23
    1d0a:	80 95       	com	r24
    1d0c:	90 95       	com	r25
    1d0e:	9b 01       	movw	r18, r22
    1d10:	ac 01       	movw	r20, r24
    1d12:	bd 01       	movw	r22, r26
    1d14:	cf 01       	movw	r24, r30
    1d16:	08 95       	ret

00001d18 <__divmodsi4>:
    1d18:	05 2e       	mov	r0, r21
    1d1a:	97 fb       	bst	r25, 7
    1d1c:	1e f4       	brtc	.+6      	; 0x1d24 <__divmodsi4+0xc>
    1d1e:	00 94       	com	r0
    1d20:	0e 94 a3 0e 	call	0x1d46	; 0x1d46 <__negsi2>
    1d24:	57 fd       	sbrc	r21, 7
    1d26:	07 d0       	rcall	.+14     	; 0x1d36 <__divmodsi4_neg2>
    1d28:	0e 94 6a 0e 	call	0x1cd4	; 0x1cd4 <__udivmodsi4>
    1d2c:	07 fc       	sbrc	r0, 7
    1d2e:	03 d0       	rcall	.+6      	; 0x1d36 <__divmodsi4_neg2>
    1d30:	4e f4       	brtc	.+18     	; 0x1d44 <__divmodsi4_exit>
    1d32:	0c 94 a3 0e 	jmp	0x1d46	; 0x1d46 <__negsi2>

00001d36 <__divmodsi4_neg2>:
    1d36:	50 95       	com	r21
    1d38:	40 95       	com	r20
    1d3a:	30 95       	com	r19
    1d3c:	21 95       	neg	r18
    1d3e:	3f 4f       	sbci	r19, 0xFF	; 255
    1d40:	4f 4f       	sbci	r20, 0xFF	; 255
    1d42:	5f 4f       	sbci	r21, 0xFF	; 255

00001d44 <__divmodsi4_exit>:
    1d44:	08 95       	ret

00001d46 <__negsi2>:
    1d46:	90 95       	com	r25
    1d48:	80 95       	com	r24
    1d4a:	70 95       	com	r23
    1d4c:	61 95       	neg	r22
    1d4e:	7f 4f       	sbci	r23, 0xFF	; 255
    1d50:	8f 4f       	sbci	r24, 0xFF	; 255
    1d52:	9f 4f       	sbci	r25, 0xFF	; 255
    1d54:	08 95       	ret

00001d56 <__muluhisi3>:
    1d56:	0e 94 b6 0e 	call	0x1d6c	; 0x1d6c <__umulhisi3>
    1d5a:	a5 9f       	mul	r26, r21
    1d5c:	90 0d       	add	r25, r0
    1d5e:	b4 9f       	mul	r27, r20
    1d60:	90 0d       	add	r25, r0
    1d62:	a4 9f       	mul	r26, r20
    1d64:	80 0d       	add	r24, r0
    1d66:	91 1d       	adc	r25, r1
    1d68:	11 24       	eor	r1, r1
    1d6a:	08 95       	ret

00001d6c <__umulhisi3>:
    1d6c:	a2 9f       	mul	r26, r18
    1d6e:	b0 01       	movw	r22, r0
    1d70:	b3 9f       	mul	r27, r19
    1d72:	c0 01       	movw	r24, r0
    1d74:	a3 9f       	mul	r26, r19
    1d76:	70 0d       	add	r23, r0
    1d78:	81 1d       	adc	r24, r1
    1d7a:	11 24       	eor	r1, r1
    1d7c:	91 1d       	adc	r25, r1
    1d7e:	b2 9f       	mul	r27, r18
    1d80:	70 0d       	add	r23, r0
    1d82:	81 1d       	adc	r24, r1
    1d84:	11 24       	eor	r1, r1
    1d86:	91 1d       	adc	r25, r1
    1d88:	08 95       	ret

00001d8a <fprintf>:
    1d8a:	cf 93       	push	r28
    1d8c:	df 93       	push	r29
    1d8e:	cd b7       	in	r28, 0x3d	; 61
    1d90:	de b7       	in	r29, 0x3e	; 62
    1d92:	ae 01       	movw	r20, r28
    1d94:	47 5f       	subi	r20, 0xF7	; 247
    1d96:	5f 4f       	sbci	r21, 0xFF	; 255
    1d98:	6f 81       	ldd	r22, Y+7	; 0x07
    1d9a:	78 85       	ldd	r23, Y+8	; 0x08
    1d9c:	8d 81       	ldd	r24, Y+5	; 0x05
    1d9e:	9e 81       	ldd	r25, Y+6	; 0x06
    1da0:	0e 94 d5 0e 	call	0x1daa	; 0x1daa <vfprintf>
    1da4:	df 91       	pop	r29
    1da6:	cf 91       	pop	r28
    1da8:	08 95       	ret

00001daa <vfprintf>:
    1daa:	2f 92       	push	r2
    1dac:	3f 92       	push	r3
    1dae:	4f 92       	push	r4
    1db0:	5f 92       	push	r5
    1db2:	6f 92       	push	r6
    1db4:	7f 92       	push	r7
    1db6:	8f 92       	push	r8
    1db8:	9f 92       	push	r9
    1dba:	af 92       	push	r10
    1dbc:	bf 92       	push	r11
    1dbe:	cf 92       	push	r12
    1dc0:	df 92       	push	r13
    1dc2:	ef 92       	push	r14
    1dc4:	ff 92       	push	r15
    1dc6:	0f 93       	push	r16
    1dc8:	1f 93       	push	r17
    1dca:	cf 93       	push	r28
    1dcc:	df 93       	push	r29
    1dce:	cd b7       	in	r28, 0x3d	; 61
    1dd0:	de b7       	in	r29, 0x3e	; 62
    1dd2:	2c 97       	sbiw	r28, 0x0c	; 12
    1dd4:	0f b6       	in	r0, 0x3f	; 63
    1dd6:	f8 94       	cli
    1dd8:	de bf       	out	0x3e, r29	; 62
    1dda:	0f be       	out	0x3f, r0	; 63
    1ddc:	cd bf       	out	0x3d, r28	; 61
    1dde:	7c 01       	movw	r14, r24
    1de0:	6b 01       	movw	r12, r22
    1de2:	8a 01       	movw	r16, r20
    1de4:	fc 01       	movw	r30, r24
    1de6:	17 82       	std	Z+7, r1	; 0x07
    1de8:	16 82       	std	Z+6, r1	; 0x06
    1dea:	83 81       	ldd	r24, Z+3	; 0x03
    1dec:	81 ff       	sbrs	r24, 1
    1dee:	bd c1       	rjmp	.+890    	; 0x216a <vfprintf+0x3c0>
    1df0:	ce 01       	movw	r24, r28
    1df2:	01 96       	adiw	r24, 0x01	; 1
    1df4:	4c 01       	movw	r8, r24
    1df6:	f7 01       	movw	r30, r14
    1df8:	93 81       	ldd	r25, Z+3	; 0x03
    1dfa:	f6 01       	movw	r30, r12
    1dfc:	93 fd       	sbrc	r25, 3
    1dfe:	85 91       	lpm	r24, Z+
    1e00:	93 ff       	sbrs	r25, 3
    1e02:	81 91       	ld	r24, Z+
    1e04:	6f 01       	movw	r12, r30
    1e06:	88 23       	and	r24, r24
    1e08:	09 f4       	brne	.+2      	; 0x1e0c <vfprintf+0x62>
    1e0a:	ab c1       	rjmp	.+854    	; 0x2162 <vfprintf+0x3b8>
    1e0c:	85 32       	cpi	r24, 0x25	; 37
    1e0e:	39 f4       	brne	.+14     	; 0x1e1e <vfprintf+0x74>
    1e10:	93 fd       	sbrc	r25, 3
    1e12:	85 91       	lpm	r24, Z+
    1e14:	93 ff       	sbrs	r25, 3
    1e16:	81 91       	ld	r24, Z+
    1e18:	6f 01       	movw	r12, r30
    1e1a:	85 32       	cpi	r24, 0x25	; 37
    1e1c:	29 f4       	brne	.+10     	; 0x1e28 <vfprintf+0x7e>
    1e1e:	b7 01       	movw	r22, r14
    1e20:	90 e0       	ldi	r25, 0x00	; 0
    1e22:	0e 94 e6 10 	call	0x21cc	; 0x21cc <fputc>
    1e26:	e7 cf       	rjmp	.-50     	; 0x1df6 <vfprintf+0x4c>
    1e28:	51 2c       	mov	r5, r1
    1e2a:	31 2c       	mov	r3, r1
    1e2c:	20 e0       	ldi	r18, 0x00	; 0
    1e2e:	20 32       	cpi	r18, 0x20	; 32
    1e30:	a0 f4       	brcc	.+40     	; 0x1e5a <vfprintf+0xb0>
    1e32:	8b 32       	cpi	r24, 0x2B	; 43
    1e34:	69 f0       	breq	.+26     	; 0x1e50 <vfprintf+0xa6>
    1e36:	30 f4       	brcc	.+12     	; 0x1e44 <vfprintf+0x9a>
    1e38:	80 32       	cpi	r24, 0x20	; 32
    1e3a:	59 f0       	breq	.+22     	; 0x1e52 <vfprintf+0xa8>
    1e3c:	83 32       	cpi	r24, 0x23	; 35
    1e3e:	69 f4       	brne	.+26     	; 0x1e5a <vfprintf+0xb0>
    1e40:	20 61       	ori	r18, 0x10	; 16
    1e42:	2c c0       	rjmp	.+88     	; 0x1e9c <vfprintf+0xf2>
    1e44:	8d 32       	cpi	r24, 0x2D	; 45
    1e46:	39 f0       	breq	.+14     	; 0x1e56 <vfprintf+0xac>
    1e48:	80 33       	cpi	r24, 0x30	; 48
    1e4a:	39 f4       	brne	.+14     	; 0x1e5a <vfprintf+0xb0>
    1e4c:	21 60       	ori	r18, 0x01	; 1
    1e4e:	26 c0       	rjmp	.+76     	; 0x1e9c <vfprintf+0xf2>
    1e50:	22 60       	ori	r18, 0x02	; 2
    1e52:	24 60       	ori	r18, 0x04	; 4
    1e54:	23 c0       	rjmp	.+70     	; 0x1e9c <vfprintf+0xf2>
    1e56:	28 60       	ori	r18, 0x08	; 8
    1e58:	21 c0       	rjmp	.+66     	; 0x1e9c <vfprintf+0xf2>
    1e5a:	27 fd       	sbrc	r18, 7
    1e5c:	27 c0       	rjmp	.+78     	; 0x1eac <vfprintf+0x102>
    1e5e:	30 ed       	ldi	r19, 0xD0	; 208
    1e60:	38 0f       	add	r19, r24
    1e62:	3a 30       	cpi	r19, 0x0A	; 10
    1e64:	78 f4       	brcc	.+30     	; 0x1e84 <vfprintf+0xda>
    1e66:	26 ff       	sbrs	r18, 6
    1e68:	06 c0       	rjmp	.+12     	; 0x1e76 <vfprintf+0xcc>
    1e6a:	fa e0       	ldi	r31, 0x0A	; 10
    1e6c:	5f 9e       	mul	r5, r31
    1e6e:	30 0d       	add	r19, r0
    1e70:	11 24       	eor	r1, r1
    1e72:	53 2e       	mov	r5, r19
    1e74:	13 c0       	rjmp	.+38     	; 0x1e9c <vfprintf+0xf2>
    1e76:	8a e0       	ldi	r24, 0x0A	; 10
    1e78:	38 9e       	mul	r3, r24
    1e7a:	30 0d       	add	r19, r0
    1e7c:	11 24       	eor	r1, r1
    1e7e:	33 2e       	mov	r3, r19
    1e80:	20 62       	ori	r18, 0x20	; 32
    1e82:	0c c0       	rjmp	.+24     	; 0x1e9c <vfprintf+0xf2>
    1e84:	8e 32       	cpi	r24, 0x2E	; 46
    1e86:	21 f4       	brne	.+8      	; 0x1e90 <vfprintf+0xe6>
    1e88:	26 fd       	sbrc	r18, 6
    1e8a:	6b c1       	rjmp	.+726    	; 0x2162 <vfprintf+0x3b8>
    1e8c:	20 64       	ori	r18, 0x40	; 64
    1e8e:	06 c0       	rjmp	.+12     	; 0x1e9c <vfprintf+0xf2>
    1e90:	8c 36       	cpi	r24, 0x6C	; 108
    1e92:	11 f4       	brne	.+4      	; 0x1e98 <vfprintf+0xee>
    1e94:	20 68       	ori	r18, 0x80	; 128
    1e96:	02 c0       	rjmp	.+4      	; 0x1e9c <vfprintf+0xf2>
    1e98:	88 36       	cpi	r24, 0x68	; 104
    1e9a:	41 f4       	brne	.+16     	; 0x1eac <vfprintf+0x102>
    1e9c:	f6 01       	movw	r30, r12
    1e9e:	93 fd       	sbrc	r25, 3
    1ea0:	85 91       	lpm	r24, Z+
    1ea2:	93 ff       	sbrs	r25, 3
    1ea4:	81 91       	ld	r24, Z+
    1ea6:	6f 01       	movw	r12, r30
    1ea8:	81 11       	cpse	r24, r1
    1eaa:	c1 cf       	rjmp	.-126    	; 0x1e2e <vfprintf+0x84>
    1eac:	98 2f       	mov	r25, r24
    1eae:	9f 7d       	andi	r25, 0xDF	; 223
    1eb0:	95 54       	subi	r25, 0x45	; 69
    1eb2:	93 30       	cpi	r25, 0x03	; 3
    1eb4:	28 f4       	brcc	.+10     	; 0x1ec0 <vfprintf+0x116>
    1eb6:	0c 5f       	subi	r16, 0xFC	; 252
    1eb8:	1f 4f       	sbci	r17, 0xFF	; 255
    1eba:	ff e3       	ldi	r31, 0x3F	; 63
    1ebc:	f9 83       	std	Y+1, r31	; 0x01
    1ebe:	0d c0       	rjmp	.+26     	; 0x1eda <vfprintf+0x130>
    1ec0:	83 36       	cpi	r24, 0x63	; 99
    1ec2:	31 f0       	breq	.+12     	; 0x1ed0 <vfprintf+0x126>
    1ec4:	83 37       	cpi	r24, 0x73	; 115
    1ec6:	71 f0       	breq	.+28     	; 0x1ee4 <vfprintf+0x13a>
    1ec8:	83 35       	cpi	r24, 0x53	; 83
    1eca:	09 f0       	breq	.+2      	; 0x1ece <vfprintf+0x124>
    1ecc:	5b c0       	rjmp	.+182    	; 0x1f84 <vfprintf+0x1da>
    1ece:	22 c0       	rjmp	.+68     	; 0x1f14 <vfprintf+0x16a>
    1ed0:	f8 01       	movw	r30, r16
    1ed2:	80 81       	ld	r24, Z
    1ed4:	89 83       	std	Y+1, r24	; 0x01
    1ed6:	0e 5f       	subi	r16, 0xFE	; 254
    1ed8:	1f 4f       	sbci	r17, 0xFF	; 255
    1eda:	44 24       	eor	r4, r4
    1edc:	43 94       	inc	r4
    1ede:	51 2c       	mov	r5, r1
    1ee0:	54 01       	movw	r10, r8
    1ee2:	15 c0       	rjmp	.+42     	; 0x1f0e <vfprintf+0x164>
    1ee4:	38 01       	movw	r6, r16
    1ee6:	f2 e0       	ldi	r31, 0x02	; 2
    1ee8:	6f 0e       	add	r6, r31
    1eea:	71 1c       	adc	r7, r1
    1eec:	f8 01       	movw	r30, r16
    1eee:	a0 80       	ld	r10, Z
    1ef0:	b1 80       	ldd	r11, Z+1	; 0x01
    1ef2:	26 ff       	sbrs	r18, 6
    1ef4:	03 c0       	rjmp	.+6      	; 0x1efc <vfprintf+0x152>
    1ef6:	65 2d       	mov	r22, r5
    1ef8:	70 e0       	ldi	r23, 0x00	; 0
    1efa:	02 c0       	rjmp	.+4      	; 0x1f00 <vfprintf+0x156>
    1efc:	6f ef       	ldi	r22, 0xFF	; 255
    1efe:	7f ef       	ldi	r23, 0xFF	; 255
    1f00:	c5 01       	movw	r24, r10
    1f02:	2c 87       	std	Y+12, r18	; 0x0c
    1f04:	0e 94 db 10 	call	0x21b6	; 0x21b6 <strnlen>
    1f08:	2c 01       	movw	r4, r24
    1f0a:	83 01       	movw	r16, r6
    1f0c:	2c 85       	ldd	r18, Y+12	; 0x0c
    1f0e:	2f 77       	andi	r18, 0x7F	; 127
    1f10:	22 2e       	mov	r2, r18
    1f12:	17 c0       	rjmp	.+46     	; 0x1f42 <vfprintf+0x198>
    1f14:	38 01       	movw	r6, r16
    1f16:	f2 e0       	ldi	r31, 0x02	; 2
    1f18:	6f 0e       	add	r6, r31
    1f1a:	71 1c       	adc	r7, r1
    1f1c:	f8 01       	movw	r30, r16
    1f1e:	a0 80       	ld	r10, Z
    1f20:	b1 80       	ldd	r11, Z+1	; 0x01
    1f22:	26 ff       	sbrs	r18, 6
    1f24:	03 c0       	rjmp	.+6      	; 0x1f2c <vfprintf+0x182>
    1f26:	65 2d       	mov	r22, r5
    1f28:	70 e0       	ldi	r23, 0x00	; 0
    1f2a:	02 c0       	rjmp	.+4      	; 0x1f30 <vfprintf+0x186>
    1f2c:	6f ef       	ldi	r22, 0xFF	; 255
    1f2e:	7f ef       	ldi	r23, 0xFF	; 255
    1f30:	c5 01       	movw	r24, r10
    1f32:	2c 87       	std	Y+12, r18	; 0x0c
    1f34:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <strnlen_P>
    1f38:	2c 01       	movw	r4, r24
    1f3a:	2c 85       	ldd	r18, Y+12	; 0x0c
    1f3c:	20 68       	ori	r18, 0x80	; 128
    1f3e:	22 2e       	mov	r2, r18
    1f40:	83 01       	movw	r16, r6
    1f42:	23 fc       	sbrc	r2, 3
    1f44:	1b c0       	rjmp	.+54     	; 0x1f7c <vfprintf+0x1d2>
    1f46:	83 2d       	mov	r24, r3
    1f48:	90 e0       	ldi	r25, 0x00	; 0
    1f4a:	48 16       	cp	r4, r24
    1f4c:	59 06       	cpc	r5, r25
    1f4e:	b0 f4       	brcc	.+44     	; 0x1f7c <vfprintf+0x1d2>
    1f50:	b7 01       	movw	r22, r14
    1f52:	80 e2       	ldi	r24, 0x20	; 32
    1f54:	90 e0       	ldi	r25, 0x00	; 0
    1f56:	0e 94 e6 10 	call	0x21cc	; 0x21cc <fputc>
    1f5a:	3a 94       	dec	r3
    1f5c:	f4 cf       	rjmp	.-24     	; 0x1f46 <vfprintf+0x19c>
    1f5e:	f5 01       	movw	r30, r10
    1f60:	27 fc       	sbrc	r2, 7
    1f62:	85 91       	lpm	r24, Z+
    1f64:	27 fe       	sbrs	r2, 7
    1f66:	81 91       	ld	r24, Z+
    1f68:	5f 01       	movw	r10, r30
    1f6a:	b7 01       	movw	r22, r14
    1f6c:	90 e0       	ldi	r25, 0x00	; 0
    1f6e:	0e 94 e6 10 	call	0x21cc	; 0x21cc <fputc>
    1f72:	31 10       	cpse	r3, r1
    1f74:	3a 94       	dec	r3
    1f76:	f1 e0       	ldi	r31, 0x01	; 1
    1f78:	4f 1a       	sub	r4, r31
    1f7a:	51 08       	sbc	r5, r1
    1f7c:	41 14       	cp	r4, r1
    1f7e:	51 04       	cpc	r5, r1
    1f80:	71 f7       	brne	.-36     	; 0x1f5e <vfprintf+0x1b4>
    1f82:	e5 c0       	rjmp	.+458    	; 0x214e <vfprintf+0x3a4>
    1f84:	84 36       	cpi	r24, 0x64	; 100
    1f86:	11 f0       	breq	.+4      	; 0x1f8c <vfprintf+0x1e2>
    1f88:	89 36       	cpi	r24, 0x69	; 105
    1f8a:	39 f5       	brne	.+78     	; 0x1fda <vfprintf+0x230>
    1f8c:	f8 01       	movw	r30, r16
    1f8e:	27 ff       	sbrs	r18, 7
    1f90:	07 c0       	rjmp	.+14     	; 0x1fa0 <vfprintf+0x1f6>
    1f92:	60 81       	ld	r22, Z
    1f94:	71 81       	ldd	r23, Z+1	; 0x01
    1f96:	82 81       	ldd	r24, Z+2	; 0x02
    1f98:	93 81       	ldd	r25, Z+3	; 0x03
    1f9a:	0c 5f       	subi	r16, 0xFC	; 252
    1f9c:	1f 4f       	sbci	r17, 0xFF	; 255
    1f9e:	08 c0       	rjmp	.+16     	; 0x1fb0 <vfprintf+0x206>
    1fa0:	60 81       	ld	r22, Z
    1fa2:	71 81       	ldd	r23, Z+1	; 0x01
    1fa4:	07 2e       	mov	r0, r23
    1fa6:	00 0c       	add	r0, r0
    1fa8:	88 0b       	sbc	r24, r24
    1faa:	99 0b       	sbc	r25, r25
    1fac:	0e 5f       	subi	r16, 0xFE	; 254
    1fae:	1f 4f       	sbci	r17, 0xFF	; 255
    1fb0:	2f 76       	andi	r18, 0x6F	; 111
    1fb2:	72 2e       	mov	r7, r18
    1fb4:	97 ff       	sbrs	r25, 7
    1fb6:	09 c0       	rjmp	.+18     	; 0x1fca <vfprintf+0x220>
    1fb8:	90 95       	com	r25
    1fba:	80 95       	com	r24
    1fbc:	70 95       	com	r23
    1fbe:	61 95       	neg	r22
    1fc0:	7f 4f       	sbci	r23, 0xFF	; 255
    1fc2:	8f 4f       	sbci	r24, 0xFF	; 255
    1fc4:	9f 4f       	sbci	r25, 0xFF	; 255
    1fc6:	20 68       	ori	r18, 0x80	; 128
    1fc8:	72 2e       	mov	r7, r18
    1fca:	2a e0       	ldi	r18, 0x0A	; 10
    1fcc:	30 e0       	ldi	r19, 0x00	; 0
    1fce:	a4 01       	movw	r20, r8
    1fd0:	0e 94 1e 11 	call	0x223c	; 0x223c <__ultoa_invert>
    1fd4:	a8 2e       	mov	r10, r24
    1fd6:	a8 18       	sub	r10, r8
    1fd8:	44 c0       	rjmp	.+136    	; 0x2062 <vfprintf+0x2b8>
    1fda:	85 37       	cpi	r24, 0x75	; 117
    1fdc:	29 f4       	brne	.+10     	; 0x1fe8 <vfprintf+0x23e>
    1fde:	2f 7e       	andi	r18, 0xEF	; 239
    1fe0:	b2 2e       	mov	r11, r18
    1fe2:	2a e0       	ldi	r18, 0x0A	; 10
    1fe4:	30 e0       	ldi	r19, 0x00	; 0
    1fe6:	25 c0       	rjmp	.+74     	; 0x2032 <vfprintf+0x288>
    1fe8:	f2 2f       	mov	r31, r18
    1fea:	f9 7f       	andi	r31, 0xF9	; 249
    1fec:	bf 2e       	mov	r11, r31
    1fee:	8f 36       	cpi	r24, 0x6F	; 111
    1ff0:	c1 f0       	breq	.+48     	; 0x2022 <vfprintf+0x278>
    1ff2:	18 f4       	brcc	.+6      	; 0x1ffa <vfprintf+0x250>
    1ff4:	88 35       	cpi	r24, 0x58	; 88
    1ff6:	79 f0       	breq	.+30     	; 0x2016 <vfprintf+0x26c>
    1ff8:	b4 c0       	rjmp	.+360    	; 0x2162 <vfprintf+0x3b8>
    1ffa:	80 37       	cpi	r24, 0x70	; 112
    1ffc:	19 f0       	breq	.+6      	; 0x2004 <vfprintf+0x25a>
    1ffe:	88 37       	cpi	r24, 0x78	; 120
    2000:	21 f0       	breq	.+8      	; 0x200a <vfprintf+0x260>
    2002:	af c0       	rjmp	.+350    	; 0x2162 <vfprintf+0x3b8>
    2004:	2f 2f       	mov	r18, r31
    2006:	20 61       	ori	r18, 0x10	; 16
    2008:	b2 2e       	mov	r11, r18
    200a:	b4 fe       	sbrs	r11, 4
    200c:	0d c0       	rjmp	.+26     	; 0x2028 <vfprintf+0x27e>
    200e:	8b 2d       	mov	r24, r11
    2010:	84 60       	ori	r24, 0x04	; 4
    2012:	b8 2e       	mov	r11, r24
    2014:	09 c0       	rjmp	.+18     	; 0x2028 <vfprintf+0x27e>
    2016:	24 ff       	sbrs	r18, 4
    2018:	0a c0       	rjmp	.+20     	; 0x202e <vfprintf+0x284>
    201a:	9f 2f       	mov	r25, r31
    201c:	96 60       	ori	r25, 0x06	; 6
    201e:	b9 2e       	mov	r11, r25
    2020:	06 c0       	rjmp	.+12     	; 0x202e <vfprintf+0x284>
    2022:	28 e0       	ldi	r18, 0x08	; 8
    2024:	30 e0       	ldi	r19, 0x00	; 0
    2026:	05 c0       	rjmp	.+10     	; 0x2032 <vfprintf+0x288>
    2028:	20 e1       	ldi	r18, 0x10	; 16
    202a:	30 e0       	ldi	r19, 0x00	; 0
    202c:	02 c0       	rjmp	.+4      	; 0x2032 <vfprintf+0x288>
    202e:	20 e1       	ldi	r18, 0x10	; 16
    2030:	32 e0       	ldi	r19, 0x02	; 2
    2032:	f8 01       	movw	r30, r16
    2034:	b7 fe       	sbrs	r11, 7
    2036:	07 c0       	rjmp	.+14     	; 0x2046 <vfprintf+0x29c>
    2038:	60 81       	ld	r22, Z
    203a:	71 81       	ldd	r23, Z+1	; 0x01
    203c:	82 81       	ldd	r24, Z+2	; 0x02
    203e:	93 81       	ldd	r25, Z+3	; 0x03
    2040:	0c 5f       	subi	r16, 0xFC	; 252
    2042:	1f 4f       	sbci	r17, 0xFF	; 255
    2044:	06 c0       	rjmp	.+12     	; 0x2052 <vfprintf+0x2a8>
    2046:	60 81       	ld	r22, Z
    2048:	71 81       	ldd	r23, Z+1	; 0x01
    204a:	80 e0       	ldi	r24, 0x00	; 0
    204c:	90 e0       	ldi	r25, 0x00	; 0
    204e:	0e 5f       	subi	r16, 0xFE	; 254
    2050:	1f 4f       	sbci	r17, 0xFF	; 255
    2052:	a4 01       	movw	r20, r8
    2054:	0e 94 1e 11 	call	0x223c	; 0x223c <__ultoa_invert>
    2058:	a8 2e       	mov	r10, r24
    205a:	a8 18       	sub	r10, r8
    205c:	fb 2d       	mov	r31, r11
    205e:	ff 77       	andi	r31, 0x7F	; 127
    2060:	7f 2e       	mov	r7, r31
    2062:	76 fe       	sbrs	r7, 6
    2064:	0b c0       	rjmp	.+22     	; 0x207c <vfprintf+0x2d2>
    2066:	37 2d       	mov	r19, r7
    2068:	3e 7f       	andi	r19, 0xFE	; 254
    206a:	a5 14       	cp	r10, r5
    206c:	50 f4       	brcc	.+20     	; 0x2082 <vfprintf+0x2d8>
    206e:	74 fe       	sbrs	r7, 4
    2070:	0a c0       	rjmp	.+20     	; 0x2086 <vfprintf+0x2dc>
    2072:	72 fc       	sbrc	r7, 2
    2074:	08 c0       	rjmp	.+16     	; 0x2086 <vfprintf+0x2dc>
    2076:	37 2d       	mov	r19, r7
    2078:	3e 7e       	andi	r19, 0xEE	; 238
    207a:	05 c0       	rjmp	.+10     	; 0x2086 <vfprintf+0x2dc>
    207c:	ba 2c       	mov	r11, r10
    207e:	37 2d       	mov	r19, r7
    2080:	03 c0       	rjmp	.+6      	; 0x2088 <vfprintf+0x2de>
    2082:	ba 2c       	mov	r11, r10
    2084:	01 c0       	rjmp	.+2      	; 0x2088 <vfprintf+0x2de>
    2086:	b5 2c       	mov	r11, r5
    2088:	34 ff       	sbrs	r19, 4
    208a:	0d c0       	rjmp	.+26     	; 0x20a6 <vfprintf+0x2fc>
    208c:	fe 01       	movw	r30, r28
    208e:	ea 0d       	add	r30, r10
    2090:	f1 1d       	adc	r31, r1
    2092:	80 81       	ld	r24, Z
    2094:	80 33       	cpi	r24, 0x30	; 48
    2096:	11 f4       	brne	.+4      	; 0x209c <vfprintf+0x2f2>
    2098:	39 7e       	andi	r19, 0xE9	; 233
    209a:	09 c0       	rjmp	.+18     	; 0x20ae <vfprintf+0x304>
    209c:	32 ff       	sbrs	r19, 2
    209e:	06 c0       	rjmp	.+12     	; 0x20ac <vfprintf+0x302>
    20a0:	b3 94       	inc	r11
    20a2:	b3 94       	inc	r11
    20a4:	04 c0       	rjmp	.+8      	; 0x20ae <vfprintf+0x304>
    20a6:	83 2f       	mov	r24, r19
    20a8:	86 78       	andi	r24, 0x86	; 134
    20aa:	09 f0       	breq	.+2      	; 0x20ae <vfprintf+0x304>
    20ac:	b3 94       	inc	r11
    20ae:	33 fd       	sbrc	r19, 3
    20b0:	13 c0       	rjmp	.+38     	; 0x20d8 <vfprintf+0x32e>
    20b2:	30 ff       	sbrs	r19, 0
    20b4:	06 c0       	rjmp	.+12     	; 0x20c2 <vfprintf+0x318>
    20b6:	5a 2c       	mov	r5, r10
    20b8:	b3 14       	cp	r11, r3
    20ba:	18 f4       	brcc	.+6      	; 0x20c2 <vfprintf+0x318>
    20bc:	53 0c       	add	r5, r3
    20be:	5b 18       	sub	r5, r11
    20c0:	b3 2c       	mov	r11, r3
    20c2:	b3 14       	cp	r11, r3
    20c4:	68 f4       	brcc	.+26     	; 0x20e0 <vfprintf+0x336>
    20c6:	b7 01       	movw	r22, r14
    20c8:	80 e2       	ldi	r24, 0x20	; 32
    20ca:	90 e0       	ldi	r25, 0x00	; 0
    20cc:	3c 87       	std	Y+12, r19	; 0x0c
    20ce:	0e 94 e6 10 	call	0x21cc	; 0x21cc <fputc>
    20d2:	b3 94       	inc	r11
    20d4:	3c 85       	ldd	r19, Y+12	; 0x0c
    20d6:	f5 cf       	rjmp	.-22     	; 0x20c2 <vfprintf+0x318>
    20d8:	b3 14       	cp	r11, r3
    20da:	10 f4       	brcc	.+4      	; 0x20e0 <vfprintf+0x336>
    20dc:	3b 18       	sub	r3, r11
    20de:	01 c0       	rjmp	.+2      	; 0x20e2 <vfprintf+0x338>
    20e0:	31 2c       	mov	r3, r1
    20e2:	34 ff       	sbrs	r19, 4
    20e4:	12 c0       	rjmp	.+36     	; 0x210a <vfprintf+0x360>
    20e6:	b7 01       	movw	r22, r14
    20e8:	80 e3       	ldi	r24, 0x30	; 48
    20ea:	90 e0       	ldi	r25, 0x00	; 0
    20ec:	3c 87       	std	Y+12, r19	; 0x0c
    20ee:	0e 94 e6 10 	call	0x21cc	; 0x21cc <fputc>
    20f2:	3c 85       	ldd	r19, Y+12	; 0x0c
    20f4:	32 ff       	sbrs	r19, 2
    20f6:	17 c0       	rjmp	.+46     	; 0x2126 <vfprintf+0x37c>
    20f8:	31 fd       	sbrc	r19, 1
    20fa:	03 c0       	rjmp	.+6      	; 0x2102 <vfprintf+0x358>
    20fc:	88 e7       	ldi	r24, 0x78	; 120
    20fe:	90 e0       	ldi	r25, 0x00	; 0
    2100:	02 c0       	rjmp	.+4      	; 0x2106 <vfprintf+0x35c>
    2102:	88 e5       	ldi	r24, 0x58	; 88
    2104:	90 e0       	ldi	r25, 0x00	; 0
    2106:	b7 01       	movw	r22, r14
    2108:	0c c0       	rjmp	.+24     	; 0x2122 <vfprintf+0x378>
    210a:	83 2f       	mov	r24, r19
    210c:	86 78       	andi	r24, 0x86	; 134
    210e:	59 f0       	breq	.+22     	; 0x2126 <vfprintf+0x37c>
    2110:	31 ff       	sbrs	r19, 1
    2112:	02 c0       	rjmp	.+4      	; 0x2118 <vfprintf+0x36e>
    2114:	8b e2       	ldi	r24, 0x2B	; 43
    2116:	01 c0       	rjmp	.+2      	; 0x211a <vfprintf+0x370>
    2118:	80 e2       	ldi	r24, 0x20	; 32
    211a:	37 fd       	sbrc	r19, 7
    211c:	8d e2       	ldi	r24, 0x2D	; 45
    211e:	b7 01       	movw	r22, r14
    2120:	90 e0       	ldi	r25, 0x00	; 0
    2122:	0e 94 e6 10 	call	0x21cc	; 0x21cc <fputc>
    2126:	a5 14       	cp	r10, r5
    2128:	38 f4       	brcc	.+14     	; 0x2138 <vfprintf+0x38e>
    212a:	b7 01       	movw	r22, r14
    212c:	80 e3       	ldi	r24, 0x30	; 48
    212e:	90 e0       	ldi	r25, 0x00	; 0
    2130:	0e 94 e6 10 	call	0x21cc	; 0x21cc <fputc>
    2134:	5a 94       	dec	r5
    2136:	f7 cf       	rjmp	.-18     	; 0x2126 <vfprintf+0x37c>
    2138:	aa 94       	dec	r10
    213a:	f4 01       	movw	r30, r8
    213c:	ea 0d       	add	r30, r10
    213e:	f1 1d       	adc	r31, r1
    2140:	80 81       	ld	r24, Z
    2142:	b7 01       	movw	r22, r14
    2144:	90 e0       	ldi	r25, 0x00	; 0
    2146:	0e 94 e6 10 	call	0x21cc	; 0x21cc <fputc>
    214a:	a1 10       	cpse	r10, r1
    214c:	f5 cf       	rjmp	.-22     	; 0x2138 <vfprintf+0x38e>
    214e:	33 20       	and	r3, r3
    2150:	09 f4       	brne	.+2      	; 0x2154 <vfprintf+0x3aa>
    2152:	51 ce       	rjmp	.-862    	; 0x1df6 <vfprintf+0x4c>
    2154:	b7 01       	movw	r22, r14
    2156:	80 e2       	ldi	r24, 0x20	; 32
    2158:	90 e0       	ldi	r25, 0x00	; 0
    215a:	0e 94 e6 10 	call	0x21cc	; 0x21cc <fputc>
    215e:	3a 94       	dec	r3
    2160:	f6 cf       	rjmp	.-20     	; 0x214e <vfprintf+0x3a4>
    2162:	f7 01       	movw	r30, r14
    2164:	86 81       	ldd	r24, Z+6	; 0x06
    2166:	97 81       	ldd	r25, Z+7	; 0x07
    2168:	02 c0       	rjmp	.+4      	; 0x216e <vfprintf+0x3c4>
    216a:	8f ef       	ldi	r24, 0xFF	; 255
    216c:	9f ef       	ldi	r25, 0xFF	; 255
    216e:	2c 96       	adiw	r28, 0x0c	; 12
    2170:	0f b6       	in	r0, 0x3f	; 63
    2172:	f8 94       	cli
    2174:	de bf       	out	0x3e, r29	; 62
    2176:	0f be       	out	0x3f, r0	; 63
    2178:	cd bf       	out	0x3d, r28	; 61
    217a:	df 91       	pop	r29
    217c:	cf 91       	pop	r28
    217e:	1f 91       	pop	r17
    2180:	0f 91       	pop	r16
    2182:	ff 90       	pop	r15
    2184:	ef 90       	pop	r14
    2186:	df 90       	pop	r13
    2188:	cf 90       	pop	r12
    218a:	bf 90       	pop	r11
    218c:	af 90       	pop	r10
    218e:	9f 90       	pop	r9
    2190:	8f 90       	pop	r8
    2192:	7f 90       	pop	r7
    2194:	6f 90       	pop	r6
    2196:	5f 90       	pop	r5
    2198:	4f 90       	pop	r4
    219a:	3f 90       	pop	r3
    219c:	2f 90       	pop	r2
    219e:	08 95       	ret

000021a0 <strnlen_P>:
    21a0:	fc 01       	movw	r30, r24
    21a2:	05 90       	lpm	r0, Z+
    21a4:	61 50       	subi	r22, 0x01	; 1
    21a6:	70 40       	sbci	r23, 0x00	; 0
    21a8:	01 10       	cpse	r0, r1
    21aa:	d8 f7       	brcc	.-10     	; 0x21a2 <strnlen_P+0x2>
    21ac:	80 95       	com	r24
    21ae:	90 95       	com	r25
    21b0:	8e 0f       	add	r24, r30
    21b2:	9f 1f       	adc	r25, r31
    21b4:	08 95       	ret

000021b6 <strnlen>:
    21b6:	fc 01       	movw	r30, r24
    21b8:	61 50       	subi	r22, 0x01	; 1
    21ba:	70 40       	sbci	r23, 0x00	; 0
    21bc:	01 90       	ld	r0, Z+
    21be:	01 10       	cpse	r0, r1
    21c0:	d8 f7       	brcc	.-10     	; 0x21b8 <strnlen+0x2>
    21c2:	80 95       	com	r24
    21c4:	90 95       	com	r25
    21c6:	8e 0f       	add	r24, r30
    21c8:	9f 1f       	adc	r25, r31
    21ca:	08 95       	ret

000021cc <fputc>:
    21cc:	0f 93       	push	r16
    21ce:	1f 93       	push	r17
    21d0:	cf 93       	push	r28
    21d2:	df 93       	push	r29
    21d4:	fb 01       	movw	r30, r22
    21d6:	23 81       	ldd	r18, Z+3	; 0x03
    21d8:	21 fd       	sbrc	r18, 1
    21da:	03 c0       	rjmp	.+6      	; 0x21e2 <fputc+0x16>
    21dc:	8f ef       	ldi	r24, 0xFF	; 255
    21de:	9f ef       	ldi	r25, 0xFF	; 255
    21e0:	28 c0       	rjmp	.+80     	; 0x2232 <fputc+0x66>
    21e2:	22 ff       	sbrs	r18, 2
    21e4:	16 c0       	rjmp	.+44     	; 0x2212 <fputc+0x46>
    21e6:	46 81       	ldd	r20, Z+6	; 0x06
    21e8:	57 81       	ldd	r21, Z+7	; 0x07
    21ea:	24 81       	ldd	r18, Z+4	; 0x04
    21ec:	35 81       	ldd	r19, Z+5	; 0x05
    21ee:	42 17       	cp	r20, r18
    21f0:	53 07       	cpc	r21, r19
    21f2:	44 f4       	brge	.+16     	; 0x2204 <fputc+0x38>
    21f4:	a0 81       	ld	r26, Z
    21f6:	b1 81       	ldd	r27, Z+1	; 0x01
    21f8:	9d 01       	movw	r18, r26
    21fa:	2f 5f       	subi	r18, 0xFF	; 255
    21fc:	3f 4f       	sbci	r19, 0xFF	; 255
    21fe:	31 83       	std	Z+1, r19	; 0x01
    2200:	20 83       	st	Z, r18
    2202:	8c 93       	st	X, r24
    2204:	26 81       	ldd	r18, Z+6	; 0x06
    2206:	37 81       	ldd	r19, Z+7	; 0x07
    2208:	2f 5f       	subi	r18, 0xFF	; 255
    220a:	3f 4f       	sbci	r19, 0xFF	; 255
    220c:	37 83       	std	Z+7, r19	; 0x07
    220e:	26 83       	std	Z+6, r18	; 0x06
    2210:	10 c0       	rjmp	.+32     	; 0x2232 <fputc+0x66>
    2212:	eb 01       	movw	r28, r22
    2214:	09 2f       	mov	r16, r25
    2216:	18 2f       	mov	r17, r24
    2218:	00 84       	ldd	r0, Z+8	; 0x08
    221a:	f1 85       	ldd	r31, Z+9	; 0x09
    221c:	e0 2d       	mov	r30, r0
    221e:	09 95       	icall
    2220:	89 2b       	or	r24, r25
    2222:	e1 f6       	brne	.-72     	; 0x21dc <fputc+0x10>
    2224:	8e 81       	ldd	r24, Y+6	; 0x06
    2226:	9f 81       	ldd	r25, Y+7	; 0x07
    2228:	01 96       	adiw	r24, 0x01	; 1
    222a:	9f 83       	std	Y+7, r25	; 0x07
    222c:	8e 83       	std	Y+6, r24	; 0x06
    222e:	81 2f       	mov	r24, r17
    2230:	90 2f       	mov	r25, r16
    2232:	df 91       	pop	r29
    2234:	cf 91       	pop	r28
    2236:	1f 91       	pop	r17
    2238:	0f 91       	pop	r16
    223a:	08 95       	ret

0000223c <__ultoa_invert>:
    223c:	fa 01       	movw	r30, r20
    223e:	aa 27       	eor	r26, r26
    2240:	28 30       	cpi	r18, 0x08	; 8
    2242:	51 f1       	breq	.+84     	; 0x2298 <__ultoa_invert+0x5c>
    2244:	20 31       	cpi	r18, 0x10	; 16
    2246:	81 f1       	breq	.+96     	; 0x22a8 <__ultoa_invert+0x6c>
    2248:	e8 94       	clt
    224a:	6f 93       	push	r22
    224c:	6e 7f       	andi	r22, 0xFE	; 254
    224e:	6e 5f       	subi	r22, 0xFE	; 254
    2250:	7f 4f       	sbci	r23, 0xFF	; 255
    2252:	8f 4f       	sbci	r24, 0xFF	; 255
    2254:	9f 4f       	sbci	r25, 0xFF	; 255
    2256:	af 4f       	sbci	r26, 0xFF	; 255
    2258:	b1 e0       	ldi	r27, 0x01	; 1
    225a:	3e d0       	rcall	.+124    	; 0x22d8 <__ultoa_invert+0x9c>
    225c:	b4 e0       	ldi	r27, 0x04	; 4
    225e:	3c d0       	rcall	.+120    	; 0x22d8 <__ultoa_invert+0x9c>
    2260:	67 0f       	add	r22, r23
    2262:	78 1f       	adc	r23, r24
    2264:	89 1f       	adc	r24, r25
    2266:	9a 1f       	adc	r25, r26
    2268:	a1 1d       	adc	r26, r1
    226a:	68 0f       	add	r22, r24
    226c:	79 1f       	adc	r23, r25
    226e:	8a 1f       	adc	r24, r26
    2270:	91 1d       	adc	r25, r1
    2272:	a1 1d       	adc	r26, r1
    2274:	6a 0f       	add	r22, r26
    2276:	71 1d       	adc	r23, r1
    2278:	81 1d       	adc	r24, r1
    227a:	91 1d       	adc	r25, r1
    227c:	a1 1d       	adc	r26, r1
    227e:	20 d0       	rcall	.+64     	; 0x22c0 <__ultoa_invert+0x84>
    2280:	09 f4       	brne	.+2      	; 0x2284 <__ultoa_invert+0x48>
    2282:	68 94       	set
    2284:	3f 91       	pop	r19
    2286:	2a e0       	ldi	r18, 0x0A	; 10
    2288:	26 9f       	mul	r18, r22
    228a:	11 24       	eor	r1, r1
    228c:	30 19       	sub	r19, r0
    228e:	30 5d       	subi	r19, 0xD0	; 208
    2290:	31 93       	st	Z+, r19
    2292:	de f6       	brtc	.-74     	; 0x224a <__ultoa_invert+0xe>
    2294:	cf 01       	movw	r24, r30
    2296:	08 95       	ret
    2298:	46 2f       	mov	r20, r22
    229a:	47 70       	andi	r20, 0x07	; 7
    229c:	40 5d       	subi	r20, 0xD0	; 208
    229e:	41 93       	st	Z+, r20
    22a0:	b3 e0       	ldi	r27, 0x03	; 3
    22a2:	0f d0       	rcall	.+30     	; 0x22c2 <__ultoa_invert+0x86>
    22a4:	c9 f7       	brne	.-14     	; 0x2298 <__ultoa_invert+0x5c>
    22a6:	f6 cf       	rjmp	.-20     	; 0x2294 <__ultoa_invert+0x58>
    22a8:	46 2f       	mov	r20, r22
    22aa:	4f 70       	andi	r20, 0x0F	; 15
    22ac:	40 5d       	subi	r20, 0xD0	; 208
    22ae:	4a 33       	cpi	r20, 0x3A	; 58
    22b0:	18 f0       	brcs	.+6      	; 0x22b8 <__ultoa_invert+0x7c>
    22b2:	49 5d       	subi	r20, 0xD9	; 217
    22b4:	31 fd       	sbrc	r19, 1
    22b6:	40 52       	subi	r20, 0x20	; 32
    22b8:	41 93       	st	Z+, r20
    22ba:	02 d0       	rcall	.+4      	; 0x22c0 <__ultoa_invert+0x84>
    22bc:	a9 f7       	brne	.-22     	; 0x22a8 <__ultoa_invert+0x6c>
    22be:	ea cf       	rjmp	.-44     	; 0x2294 <__ultoa_invert+0x58>
    22c0:	b4 e0       	ldi	r27, 0x04	; 4
    22c2:	a6 95       	lsr	r26
    22c4:	97 95       	ror	r25
    22c6:	87 95       	ror	r24
    22c8:	77 95       	ror	r23
    22ca:	67 95       	ror	r22
    22cc:	ba 95       	dec	r27
    22ce:	c9 f7       	brne	.-14     	; 0x22c2 <__ultoa_invert+0x86>
    22d0:	00 97       	sbiw	r24, 0x00	; 0
    22d2:	61 05       	cpc	r22, r1
    22d4:	71 05       	cpc	r23, r1
    22d6:	08 95       	ret
    22d8:	9b 01       	movw	r18, r22
    22da:	ac 01       	movw	r20, r24
    22dc:	0a 2e       	mov	r0, r26
    22de:	06 94       	lsr	r0
    22e0:	57 95       	ror	r21
    22e2:	47 95       	ror	r20
    22e4:	37 95       	ror	r19
    22e6:	27 95       	ror	r18
    22e8:	ba 95       	dec	r27
    22ea:	c9 f7       	brne	.-14     	; 0x22de <__ultoa_invert+0xa2>
    22ec:	62 0f       	add	r22, r18
    22ee:	73 1f       	adc	r23, r19
    22f0:	84 1f       	adc	r24, r20
    22f2:	95 1f       	adc	r25, r21
    22f4:	a0 1d       	adc	r26, r0
    22f6:	08 95       	ret

000022f8 <_exit>:
    22f8:	f8 94       	cli

000022fa <__stop_program>:
    22fa:	ff cf       	rjmp	.-2      	; 0x22fa <__stop_program>
