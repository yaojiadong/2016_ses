
2_traffic_light.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000068e  00800200  00001358  000013ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001358  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000207  0080088e  0080088e  00001a7a  2**0
                  ALLOC
  3 .stab         000016b0  00000000  00000000  00001a7c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00004774  00000000  00000000  0000312c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000008c  00000000  00000000  000078a0  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000792c  2**2
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 90 00 	jmp	0x120	; 0x120 <__ctors_end>
       4:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
       8:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
       c:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      10:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      14:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      18:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      1c:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      20:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      24:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      28:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      2c:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      30:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      34:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      38:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      3c:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      40:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      44:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      48:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      4c:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      50:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      54:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      58:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      5c:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      60:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      64:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      68:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      6c:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      70:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      74:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      78:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      7c:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      80:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      84:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      88:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      8c:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      90:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      94:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      98:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      9c:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      a0:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      a4:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      a8:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      ac:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      b0:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      b4:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      b8:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      bc:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      c0:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      c4:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      c8:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      cc:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      d0:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      d4:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      d8:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      dc:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      e0:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      e4:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      e8:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      ec:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      f0:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      f4:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      f8:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      fc:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
     100:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
     104:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
     108:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
     10c:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
     110:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
     114:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
     118:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
     11c:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>

00000120 <__ctors_end>:
     120:	11 24       	eor	r1, r1
     122:	1f be       	out	0x3f, r1	; 63
     124:	cf ef       	ldi	r28, 0xFF	; 255
     126:	d1 e4       	ldi	r29, 0x41	; 65
     128:	de bf       	out	0x3e, r29	; 62
     12a:	cd bf       	out	0x3d, r28	; 61

0000012c <__do_copy_data>:
     12c:	18 e0       	ldi	r17, 0x08	; 8
     12e:	a0 e0       	ldi	r26, 0x00	; 0
     130:	b2 e0       	ldi	r27, 0x02	; 2
     132:	e8 e5       	ldi	r30, 0x58	; 88
     134:	f3 e1       	ldi	r31, 0x13	; 19
     136:	00 e0       	ldi	r16, 0x00	; 0
     138:	0b bf       	out	0x3b, r16	; 59
     13a:	02 c0       	rjmp	.+4      	; 0x140 <__do_copy_data+0x14>
     13c:	07 90       	elpm	r0, Z+
     13e:	0d 92       	st	X+, r0
     140:	ae 38       	cpi	r26, 0x8E	; 142
     142:	b1 07       	cpc	r27, r17
     144:	d9 f7       	brne	.-10     	; 0x13c <__do_copy_data+0x10>

00000146 <__do_clear_bss>:
     146:	2a e0       	ldi	r18, 0x0A	; 10
     148:	ae e8       	ldi	r26, 0x8E	; 142
     14a:	b8 e0       	ldi	r27, 0x08	; 8
     14c:	01 c0       	rjmp	.+2      	; 0x150 <.do_clear_bss_start>

0000014e <.do_clear_bss_loop>:
     14e:	1d 92       	st	X+, r1

00000150 <.do_clear_bss_start>:
     150:	a5 39       	cpi	r26, 0x95	; 149
     152:	b2 07       	cpc	r27, r18
     154:	e1 f7       	brne	.-8      	; 0x14e <.do_clear_bss_loop>
     156:	0e 94 b1 00 	call	0x162	; 0x162 <main>
     15a:	0c 94 aa 09 	jmp	0x1354	; 0x1354 <_exit>

0000015e <__bad_interrupt>:
     15e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000162 <main>:
#include "ses_lcd.h"
#include "ses_uart.h"

void printState(const char*);

int main(void) {
     162:	cf 93       	push	r28
     164:	df 93       	push	r29
     166:	cd b7       	in	r28, 0x3d	; 61
     168:	de b7       	in	r29, 0x3e	; 62
     16a:	e8 97       	sbiw	r28, 0x38	; 56
     16c:	0f b6       	in	r0, 0x3f	; 63
     16e:	f8 94       	cli
     170:	de bf       	out	0x3e, r29	; 62
     172:	0f be       	out	0x3f, r0	; 63
     174:	cd bf       	out	0x3d, r28	; 61
	uart_init(57600);
     176:	60 e0       	ldi	r22, 0x00	; 0
     178:	71 ee       	ldi	r23, 0xE1	; 225
     17a:	80 e0       	ldi	r24, 0x00	; 0
     17c:	90 e0       	ldi	r25, 0x00	; 0
     17e:	0e 94 0c 03 	call	0x618	; 0x618 <uart_init>
	lcd_init();
     182:	0e 94 49 04 	call	0x892	; 0x892 <lcd_init>

	fprintf(uartout,"START,Greeting from Jiadong\n"); //Send from board to PC
     186:	80 91 00 02 	lds	r24, 0x0200
     18a:	90 91 01 02 	lds	r25, 0x0201
     18e:	9c 01       	movw	r18, r24
     190:	4c e1       	ldi	r20, 0x1C	; 28
     192:	50 e0       	ldi	r21, 0x00	; 0
     194:	61 e0       	ldi	r22, 0x01	; 1
     196:	70 e0       	ldi	r23, 0x00	; 0
     198:	84 e0       	ldi	r24, 0x04	; 4
     19a:	92 e0       	ldi	r25, 0x02	; 2
     19c:	0e 94 c1 06 	call	0xd82	; 0xd82 <fwrite>
	fprintf(lcdout,"START,Hello Jiadong"); //directly shown on LCD.
     1a0:	80 91 02 02 	lds	r24, 0x0202
     1a4:	90 91 03 02 	lds	r25, 0x0203
     1a8:	9c 01       	movw	r18, r24
     1aa:	43 e1       	ldi	r20, 0x13	; 19
     1ac:	50 e0       	ldi	r21, 0x00	; 0
     1ae:	61 e0       	ldi	r22, 0x01	; 1
     1b0:	70 e0       	ldi	r23, 0x00	; 0
     1b2:	81 e2       	ldi	r24, 0x21	; 33
     1b4:	92 e0       	ldi	r25, 0x02	; 2
     1b6:	0e 94 c1 06 	call	0xd82	; 0xd82 <fwrite>

//traffic light
	led_redInit();
     1ba:	0e 94 ab 04 	call	0x956	; 0x956 <led_redInit>
	led_yellowInit();
     1be:	0e 94 ee 04 	call	0x9dc	; 0x9dc <led_yellowInit>
	led_greenInit();
     1c2:	0e 94 31 05 	call	0xa62	; 0xa62 <led_greenInit>
	while (1) {
		led_greenOn();
     1c6:	0e 94 54 05 	call	0xaa8	; 0xaa8 <led_greenOn>
		printState("The state is green");
     1ca:	85 e3       	ldi	r24, 0x35	; 53
     1cc:	92 e0       	ldi	r25, 0x02	; 2
     1ce:	0e 94 cc 02 	call	0x598	; 0x598 <printState>
     1d2:	80 e0       	ldi	r24, 0x00	; 0
     1d4:	90 e4       	ldi	r25, 0x40	; 64
     1d6:	ac e9       	ldi	r26, 0x9C	; 156
     1d8:	b5 e4       	ldi	r27, 0x45	; 69
     1da:	89 83       	std	Y+1, r24	; 0x01
     1dc:	9a 83       	std	Y+2, r25	; 0x02
     1de:	ab 83       	std	Y+3, r26	; 0x03
     1e0:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     1e2:	20 e0       	ldi	r18, 0x00	; 0
     1e4:	30 e0       	ldi	r19, 0x00	; 0
     1e6:	4a e7       	ldi	r20, 0x7A	; 122
     1e8:	55 e4       	ldi	r21, 0x45	; 69
     1ea:	69 81       	ldd	r22, Y+1	; 0x01
     1ec:	7a 81       	ldd	r23, Y+2	; 0x02
     1ee:	8b 81       	ldd	r24, Y+3	; 0x03
     1f0:	9c 81       	ldd	r25, Y+4	; 0x04
     1f2:	0e 94 1c 06 	call	0xc38	; 0xc38 <__mulsf3>
     1f6:	dc 01       	movw	r26, r24
     1f8:	cb 01       	movw	r24, r22
     1fa:	8d 83       	std	Y+5, r24	; 0x05
     1fc:	9e 83       	std	Y+6, r25	; 0x06
     1fe:	af 83       	std	Y+7, r26	; 0x07
     200:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     202:	20 e0       	ldi	r18, 0x00	; 0
     204:	30 e0       	ldi	r19, 0x00	; 0
     206:	40 e8       	ldi	r20, 0x80	; 128
     208:	5f e3       	ldi	r21, 0x3F	; 63
     20a:	6d 81       	ldd	r22, Y+5	; 0x05
     20c:	7e 81       	ldd	r23, Y+6	; 0x06
     20e:	8f 81       	ldd	r24, Y+7	; 0x07
     210:	98 85       	ldd	r25, Y+8	; 0x08
     212:	0e 94 96 05 	call	0xb2c	; 0xb2c <__cmpsf2>
     216:	88 23       	and	r24, r24
     218:	2c f4       	brge	.+10     	; 0x224 <main+0xc2>
		__ticks = 1;
     21a:	81 e0       	ldi	r24, 0x01	; 1
     21c:	90 e0       	ldi	r25, 0x00	; 0
     21e:	9a 87       	std	Y+10, r25	; 0x0a
     220:	89 87       	std	Y+9, r24	; 0x09
     222:	3f c0       	rjmp	.+126    	; 0x2a2 <main+0x140>
	else if (__tmp > 65535)
     224:	20 e0       	ldi	r18, 0x00	; 0
     226:	3f ef       	ldi	r19, 0xFF	; 255
     228:	4f e7       	ldi	r20, 0x7F	; 127
     22a:	57 e4       	ldi	r21, 0x47	; 71
     22c:	6d 81       	ldd	r22, Y+5	; 0x05
     22e:	7e 81       	ldd	r23, Y+6	; 0x06
     230:	8f 81       	ldd	r24, Y+7	; 0x07
     232:	98 85       	ldd	r25, Y+8	; 0x08
     234:	0e 94 17 06 	call	0xc2e	; 0xc2e <__gesf2>
     238:	18 16       	cp	r1, r24
     23a:	4c f5       	brge	.+82     	; 0x28e <main+0x12c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     23c:	20 e0       	ldi	r18, 0x00	; 0
     23e:	30 e0       	ldi	r19, 0x00	; 0
     240:	40 e2       	ldi	r20, 0x20	; 32
     242:	51 e4       	ldi	r21, 0x41	; 65
     244:	69 81       	ldd	r22, Y+1	; 0x01
     246:	7a 81       	ldd	r23, Y+2	; 0x02
     248:	8b 81       	ldd	r24, Y+3	; 0x03
     24a:	9c 81       	ldd	r25, Y+4	; 0x04
     24c:	0e 94 1c 06 	call	0xc38	; 0xc38 <__mulsf3>
     250:	dc 01       	movw	r26, r24
     252:	cb 01       	movw	r24, r22
     254:	bc 01       	movw	r22, r24
     256:	cd 01       	movw	r24, r26
     258:	0e 94 9b 05 	call	0xb36	; 0xb36 <__fixunssfsi>
     25c:	dc 01       	movw	r26, r24
     25e:	cb 01       	movw	r24, r22
     260:	9a 87       	std	Y+10, r25	; 0x0a
     262:	89 87       	std	Y+9, r24	; 0x09
     264:	0f c0       	rjmp	.+30     	; 0x284 <main+0x122>
     266:	80 e9       	ldi	r24, 0x90	; 144
     268:	91 e0       	ldi	r25, 0x01	; 1
     26a:	9c 87       	std	Y+12, r25	; 0x0c
     26c:	8b 87       	std	Y+11, r24	; 0x0b
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     26e:	8b 85       	ldd	r24, Y+11	; 0x0b
     270:	9c 85       	ldd	r25, Y+12	; 0x0c
     272:	01 97       	sbiw	r24, 0x01	; 1
     274:	f1 f7       	brne	.-4      	; 0x272 <main+0x110>
     276:	9c 87       	std	Y+12, r25	; 0x0c
     278:	8b 87       	std	Y+11, r24	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     27a:	89 85       	ldd	r24, Y+9	; 0x09
     27c:	9a 85       	ldd	r25, Y+10	; 0x0a
     27e:	01 97       	sbiw	r24, 0x01	; 1
     280:	9a 87       	std	Y+10, r25	; 0x0a
     282:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     284:	89 85       	ldd	r24, Y+9	; 0x09
     286:	9a 85       	ldd	r25, Y+10	; 0x0a
     288:	89 2b       	or	r24, r25
     28a:	69 f7       	brne	.-38     	; 0x266 <main+0x104>
     28c:	14 c0       	rjmp	.+40     	; 0x2b6 <main+0x154>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     28e:	6d 81       	ldd	r22, Y+5	; 0x05
     290:	7e 81       	ldd	r23, Y+6	; 0x06
     292:	8f 81       	ldd	r24, Y+7	; 0x07
     294:	98 85       	ldd	r25, Y+8	; 0x08
     296:	0e 94 9b 05 	call	0xb36	; 0xb36 <__fixunssfsi>
     29a:	dc 01       	movw	r26, r24
     29c:	cb 01       	movw	r24, r22
     29e:	9a 87       	std	Y+10, r25	; 0x0a
     2a0:	89 87       	std	Y+9, r24	; 0x09
     2a2:	89 85       	ldd	r24, Y+9	; 0x09
     2a4:	9a 85       	ldd	r25, Y+10	; 0x0a
     2a6:	9e 87       	std	Y+14, r25	; 0x0e
     2a8:	8d 87       	std	Y+13, r24	; 0x0d
     2aa:	8d 85       	ldd	r24, Y+13	; 0x0d
     2ac:	9e 85       	ldd	r25, Y+14	; 0x0e
     2ae:	01 97       	sbiw	r24, 0x01	; 1
     2b0:	f1 f7       	brne	.-4      	; 0x2ae <main+0x14c>
     2b2:	9e 87       	std	Y+14, r25	; 0x0e
     2b4:	8d 87       	std	Y+13, r24	; 0x0d
		_delay_ms(5000);


		led_greenToggle();
     2b6:	0e 94 43 05 	call	0xa86	; 0xa86 <led_greenToggle>
		led_yellowOn();
     2ba:	0e 94 11 05 	call	0xa22	; 0xa22 <led_yellowOn>
		printState("The state is yellow");
     2be:	88 e4       	ldi	r24, 0x48	; 72
     2c0:	92 e0       	ldi	r25, 0x02	; 2
     2c2:	0e 94 cc 02 	call	0x598	; 0x598 <printState>
     2c6:	80 e0       	ldi	r24, 0x00	; 0
     2c8:	90 e0       	ldi	r25, 0x00	; 0
     2ca:	aa ef       	ldi	r26, 0xFA	; 250
     2cc:	b3 e4       	ldi	r27, 0x43	; 67
     2ce:	8f 87       	std	Y+15, r24	; 0x0f
     2d0:	98 8b       	std	Y+16, r25	; 0x10
     2d2:	a9 8b       	std	Y+17, r26	; 0x11
     2d4:	ba 8b       	std	Y+18, r27	; 0x12

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     2d6:	20 e0       	ldi	r18, 0x00	; 0
     2d8:	30 e0       	ldi	r19, 0x00	; 0
     2da:	4a e7       	ldi	r20, 0x7A	; 122
     2dc:	55 e4       	ldi	r21, 0x45	; 69
     2de:	6f 85       	ldd	r22, Y+15	; 0x0f
     2e0:	78 89       	ldd	r23, Y+16	; 0x10
     2e2:	89 89       	ldd	r24, Y+17	; 0x11
     2e4:	9a 89       	ldd	r25, Y+18	; 0x12
     2e6:	0e 94 1c 06 	call	0xc38	; 0xc38 <__mulsf3>
     2ea:	dc 01       	movw	r26, r24
     2ec:	cb 01       	movw	r24, r22
     2ee:	8b 8b       	std	Y+19, r24	; 0x13
     2f0:	9c 8b       	std	Y+20, r25	; 0x14
     2f2:	ad 8b       	std	Y+21, r26	; 0x15
     2f4:	be 8b       	std	Y+22, r27	; 0x16
	if (__tmp < 1.0)
     2f6:	20 e0       	ldi	r18, 0x00	; 0
     2f8:	30 e0       	ldi	r19, 0x00	; 0
     2fa:	40 e8       	ldi	r20, 0x80	; 128
     2fc:	5f e3       	ldi	r21, 0x3F	; 63
     2fe:	6b 89       	ldd	r22, Y+19	; 0x13
     300:	7c 89       	ldd	r23, Y+20	; 0x14
     302:	8d 89       	ldd	r24, Y+21	; 0x15
     304:	9e 89       	ldd	r25, Y+22	; 0x16
     306:	0e 94 96 05 	call	0xb2c	; 0xb2c <__cmpsf2>
     30a:	88 23       	and	r24, r24
     30c:	2c f4       	brge	.+10     	; 0x318 <main+0x1b6>
		__ticks = 1;
     30e:	81 e0       	ldi	r24, 0x01	; 1
     310:	90 e0       	ldi	r25, 0x00	; 0
     312:	98 8f       	std	Y+24, r25	; 0x18
     314:	8f 8b       	std	Y+23, r24	; 0x17
     316:	3f c0       	rjmp	.+126    	; 0x396 <main+0x234>
	else if (__tmp > 65535)
     318:	20 e0       	ldi	r18, 0x00	; 0
     31a:	3f ef       	ldi	r19, 0xFF	; 255
     31c:	4f e7       	ldi	r20, 0x7F	; 127
     31e:	57 e4       	ldi	r21, 0x47	; 71
     320:	6b 89       	ldd	r22, Y+19	; 0x13
     322:	7c 89       	ldd	r23, Y+20	; 0x14
     324:	8d 89       	ldd	r24, Y+21	; 0x15
     326:	9e 89       	ldd	r25, Y+22	; 0x16
     328:	0e 94 17 06 	call	0xc2e	; 0xc2e <__gesf2>
     32c:	18 16       	cp	r1, r24
     32e:	4c f5       	brge	.+82     	; 0x382 <main+0x220>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     330:	20 e0       	ldi	r18, 0x00	; 0
     332:	30 e0       	ldi	r19, 0x00	; 0
     334:	40 e2       	ldi	r20, 0x20	; 32
     336:	51 e4       	ldi	r21, 0x41	; 65
     338:	6f 85       	ldd	r22, Y+15	; 0x0f
     33a:	78 89       	ldd	r23, Y+16	; 0x10
     33c:	89 89       	ldd	r24, Y+17	; 0x11
     33e:	9a 89       	ldd	r25, Y+18	; 0x12
     340:	0e 94 1c 06 	call	0xc38	; 0xc38 <__mulsf3>
     344:	dc 01       	movw	r26, r24
     346:	cb 01       	movw	r24, r22
     348:	bc 01       	movw	r22, r24
     34a:	cd 01       	movw	r24, r26
     34c:	0e 94 9b 05 	call	0xb36	; 0xb36 <__fixunssfsi>
     350:	dc 01       	movw	r26, r24
     352:	cb 01       	movw	r24, r22
     354:	98 8f       	std	Y+24, r25	; 0x18
     356:	8f 8b       	std	Y+23, r24	; 0x17
     358:	0f c0       	rjmp	.+30     	; 0x378 <main+0x216>
     35a:	80 e9       	ldi	r24, 0x90	; 144
     35c:	91 e0       	ldi	r25, 0x01	; 1
     35e:	9a 8f       	std	Y+26, r25	; 0x1a
     360:	89 8f       	std	Y+25, r24	; 0x19
     362:	89 8d       	ldd	r24, Y+25	; 0x19
     364:	9a 8d       	ldd	r25, Y+26	; 0x1a
     366:	01 97       	sbiw	r24, 0x01	; 1
     368:	f1 f7       	brne	.-4      	; 0x366 <main+0x204>
     36a:	9a 8f       	std	Y+26, r25	; 0x1a
     36c:	89 8f       	std	Y+25, r24	; 0x19
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     36e:	8f 89       	ldd	r24, Y+23	; 0x17
     370:	98 8d       	ldd	r25, Y+24	; 0x18
     372:	01 97       	sbiw	r24, 0x01	; 1
     374:	98 8f       	std	Y+24, r25	; 0x18
     376:	8f 8b       	std	Y+23, r24	; 0x17
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     378:	8f 89       	ldd	r24, Y+23	; 0x17
     37a:	98 8d       	ldd	r25, Y+24	; 0x18
     37c:	89 2b       	or	r24, r25
     37e:	69 f7       	brne	.-38     	; 0x35a <main+0x1f8>
     380:	14 c0       	rjmp	.+40     	; 0x3aa <main+0x248>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     382:	6b 89       	ldd	r22, Y+19	; 0x13
     384:	7c 89       	ldd	r23, Y+20	; 0x14
     386:	8d 89       	ldd	r24, Y+21	; 0x15
     388:	9e 89       	ldd	r25, Y+22	; 0x16
     38a:	0e 94 9b 05 	call	0xb36	; 0xb36 <__fixunssfsi>
     38e:	dc 01       	movw	r26, r24
     390:	cb 01       	movw	r24, r22
     392:	98 8f       	std	Y+24, r25	; 0x18
     394:	8f 8b       	std	Y+23, r24	; 0x17
     396:	8f 89       	ldd	r24, Y+23	; 0x17
     398:	98 8d       	ldd	r25, Y+24	; 0x18
     39a:	9c 8f       	std	Y+28, r25	; 0x1c
     39c:	8b 8f       	std	Y+27, r24	; 0x1b
     39e:	8b 8d       	ldd	r24, Y+27	; 0x1b
     3a0:	9c 8d       	ldd	r25, Y+28	; 0x1c
     3a2:	01 97       	sbiw	r24, 0x01	; 1
     3a4:	f1 f7       	brne	.-4      	; 0x3a2 <main+0x240>
     3a6:	9c 8f       	std	Y+28, r25	; 0x1c
     3a8:	8b 8f       	std	Y+27, r24	; 0x1b
		_delay_ms(500);


		led_yellowToggle();
     3aa:	0e 94 00 05 	call	0xa00	; 0xa00 <led_yellowToggle>
		led_redOn();
     3ae:	0e 94 ce 04 	call	0x99c	; 0x99c <led_redOn>
		printState("The state is red");
     3b2:	8c e5       	ldi	r24, 0x5C	; 92
     3b4:	92 e0       	ldi	r25, 0x02	; 2
     3b6:	0e 94 cc 02 	call	0x598	; 0x598 <printState>
     3ba:	80 e0       	ldi	r24, 0x00	; 0
     3bc:	90 e0       	ldi	r25, 0x00	; 0
     3be:	aa ef       	ldi	r26, 0xFA	; 250
     3c0:	b4 e4       	ldi	r27, 0x44	; 68
     3c2:	8d 8f       	std	Y+29, r24	; 0x1d
     3c4:	9e 8f       	std	Y+30, r25	; 0x1e
     3c6:	af 8f       	std	Y+31, r26	; 0x1f
     3c8:	b8 a3       	std	Y+32, r27	; 0x20

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     3ca:	20 e0       	ldi	r18, 0x00	; 0
     3cc:	30 e0       	ldi	r19, 0x00	; 0
     3ce:	4a e7       	ldi	r20, 0x7A	; 122
     3d0:	55 e4       	ldi	r21, 0x45	; 69
     3d2:	6d 8d       	ldd	r22, Y+29	; 0x1d
     3d4:	7e 8d       	ldd	r23, Y+30	; 0x1e
     3d6:	8f 8d       	ldd	r24, Y+31	; 0x1f
     3d8:	98 a1       	ldd	r25, Y+32	; 0x20
     3da:	0e 94 1c 06 	call	0xc38	; 0xc38 <__mulsf3>
     3de:	dc 01       	movw	r26, r24
     3e0:	cb 01       	movw	r24, r22
     3e2:	89 a3       	std	Y+33, r24	; 0x21
     3e4:	9a a3       	std	Y+34, r25	; 0x22
     3e6:	ab a3       	std	Y+35, r26	; 0x23
     3e8:	bc a3       	std	Y+36, r27	; 0x24
	if (__tmp < 1.0)
     3ea:	20 e0       	ldi	r18, 0x00	; 0
     3ec:	30 e0       	ldi	r19, 0x00	; 0
     3ee:	40 e8       	ldi	r20, 0x80	; 128
     3f0:	5f e3       	ldi	r21, 0x3F	; 63
     3f2:	69 a1       	ldd	r22, Y+33	; 0x21
     3f4:	7a a1       	ldd	r23, Y+34	; 0x22
     3f6:	8b a1       	ldd	r24, Y+35	; 0x23
     3f8:	9c a1       	ldd	r25, Y+36	; 0x24
     3fa:	0e 94 96 05 	call	0xb2c	; 0xb2c <__cmpsf2>
     3fe:	88 23       	and	r24, r24
     400:	2c f4       	brge	.+10     	; 0x40c <main+0x2aa>
		__ticks = 1;
     402:	81 e0       	ldi	r24, 0x01	; 1
     404:	90 e0       	ldi	r25, 0x00	; 0
     406:	9e a3       	std	Y+38, r25	; 0x26
     408:	8d a3       	std	Y+37, r24	; 0x25
     40a:	3f c0       	rjmp	.+126    	; 0x48a <main+0x328>
	else if (__tmp > 65535)
     40c:	20 e0       	ldi	r18, 0x00	; 0
     40e:	3f ef       	ldi	r19, 0xFF	; 255
     410:	4f e7       	ldi	r20, 0x7F	; 127
     412:	57 e4       	ldi	r21, 0x47	; 71
     414:	69 a1       	ldd	r22, Y+33	; 0x21
     416:	7a a1       	ldd	r23, Y+34	; 0x22
     418:	8b a1       	ldd	r24, Y+35	; 0x23
     41a:	9c a1       	ldd	r25, Y+36	; 0x24
     41c:	0e 94 17 06 	call	0xc2e	; 0xc2e <__gesf2>
     420:	18 16       	cp	r1, r24
     422:	4c f5       	brge	.+82     	; 0x476 <main+0x314>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     424:	20 e0       	ldi	r18, 0x00	; 0
     426:	30 e0       	ldi	r19, 0x00	; 0
     428:	40 e2       	ldi	r20, 0x20	; 32
     42a:	51 e4       	ldi	r21, 0x41	; 65
     42c:	6d 8d       	ldd	r22, Y+29	; 0x1d
     42e:	7e 8d       	ldd	r23, Y+30	; 0x1e
     430:	8f 8d       	ldd	r24, Y+31	; 0x1f
     432:	98 a1       	ldd	r25, Y+32	; 0x20
     434:	0e 94 1c 06 	call	0xc38	; 0xc38 <__mulsf3>
     438:	dc 01       	movw	r26, r24
     43a:	cb 01       	movw	r24, r22
     43c:	bc 01       	movw	r22, r24
     43e:	cd 01       	movw	r24, r26
     440:	0e 94 9b 05 	call	0xb36	; 0xb36 <__fixunssfsi>
     444:	dc 01       	movw	r26, r24
     446:	cb 01       	movw	r24, r22
     448:	9e a3       	std	Y+38, r25	; 0x26
     44a:	8d a3       	std	Y+37, r24	; 0x25
     44c:	0f c0       	rjmp	.+30     	; 0x46c <main+0x30a>
     44e:	80 e9       	ldi	r24, 0x90	; 144
     450:	91 e0       	ldi	r25, 0x01	; 1
     452:	98 a7       	std	Y+40, r25	; 0x28
     454:	8f a3       	std	Y+39, r24	; 0x27
     456:	8f a1       	ldd	r24, Y+39	; 0x27
     458:	98 a5       	ldd	r25, Y+40	; 0x28
     45a:	01 97       	sbiw	r24, 0x01	; 1
     45c:	f1 f7       	brne	.-4      	; 0x45a <main+0x2f8>
     45e:	98 a7       	std	Y+40, r25	; 0x28
     460:	8f a3       	std	Y+39, r24	; 0x27
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     462:	8d a1       	ldd	r24, Y+37	; 0x25
     464:	9e a1       	ldd	r25, Y+38	; 0x26
     466:	01 97       	sbiw	r24, 0x01	; 1
     468:	9e a3       	std	Y+38, r25	; 0x26
     46a:	8d a3       	std	Y+37, r24	; 0x25
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     46c:	8d a1       	ldd	r24, Y+37	; 0x25
     46e:	9e a1       	ldd	r25, Y+38	; 0x26
     470:	89 2b       	or	r24, r25
     472:	69 f7       	brne	.-38     	; 0x44e <main+0x2ec>
     474:	14 c0       	rjmp	.+40     	; 0x49e <main+0x33c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     476:	69 a1       	ldd	r22, Y+33	; 0x21
     478:	7a a1       	ldd	r23, Y+34	; 0x22
     47a:	8b a1       	ldd	r24, Y+35	; 0x23
     47c:	9c a1       	ldd	r25, Y+36	; 0x24
     47e:	0e 94 9b 05 	call	0xb36	; 0xb36 <__fixunssfsi>
     482:	dc 01       	movw	r26, r24
     484:	cb 01       	movw	r24, r22
     486:	9e a3       	std	Y+38, r25	; 0x26
     488:	8d a3       	std	Y+37, r24	; 0x25
     48a:	8d a1       	ldd	r24, Y+37	; 0x25
     48c:	9e a1       	ldd	r25, Y+38	; 0x26
     48e:	9a a7       	std	Y+42, r25	; 0x2a
     490:	89 a7       	std	Y+41, r24	; 0x29
     492:	89 a5       	ldd	r24, Y+41	; 0x29
     494:	9a a5       	ldd	r25, Y+42	; 0x2a
     496:	01 97       	sbiw	r24, 0x01	; 1
     498:	f1 f7       	brne	.-4      	; 0x496 <main+0x334>
     49a:	9a a7       	std	Y+42, r25	; 0x2a
     49c:	89 a7       	std	Y+41, r24	; 0x29
		_delay_ms(2000);

		led_yellowToggle();
     49e:	0e 94 00 05 	call	0xa00	; 0xa00 <led_yellowToggle>
		printState("The state is red and yellow");
     4a2:	8d e6       	ldi	r24, 0x6D	; 109
     4a4:	92 e0       	ldi	r25, 0x02	; 2
     4a6:	0e 94 cc 02 	call	0x598	; 0x598 <printState>
     4aa:	80 e0       	ldi	r24, 0x00	; 0
     4ac:	90 e0       	ldi	r25, 0x00	; 0
     4ae:	a6 e9       	ldi	r26, 0x96	; 150
     4b0:	b3 e4       	ldi	r27, 0x43	; 67
     4b2:	8b a7       	std	Y+43, r24	; 0x2b
     4b4:	9c a7       	std	Y+44, r25	; 0x2c
     4b6:	ad a7       	std	Y+45, r26	; 0x2d
     4b8:	be a7       	std	Y+46, r27	; 0x2e

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     4ba:	20 e0       	ldi	r18, 0x00	; 0
     4bc:	30 e0       	ldi	r19, 0x00	; 0
     4be:	4a e7       	ldi	r20, 0x7A	; 122
     4c0:	55 e4       	ldi	r21, 0x45	; 69
     4c2:	6b a5       	ldd	r22, Y+43	; 0x2b
     4c4:	7c a5       	ldd	r23, Y+44	; 0x2c
     4c6:	8d a5       	ldd	r24, Y+45	; 0x2d
     4c8:	9e a5       	ldd	r25, Y+46	; 0x2e
     4ca:	0e 94 1c 06 	call	0xc38	; 0xc38 <__mulsf3>
     4ce:	dc 01       	movw	r26, r24
     4d0:	cb 01       	movw	r24, r22
     4d2:	8f a7       	std	Y+47, r24	; 0x2f
     4d4:	98 ab       	std	Y+48, r25	; 0x30
     4d6:	a9 ab       	std	Y+49, r26	; 0x31
     4d8:	ba ab       	std	Y+50, r27	; 0x32
	if (__tmp < 1.0)
     4da:	20 e0       	ldi	r18, 0x00	; 0
     4dc:	30 e0       	ldi	r19, 0x00	; 0
     4de:	40 e8       	ldi	r20, 0x80	; 128
     4e0:	5f e3       	ldi	r21, 0x3F	; 63
     4e2:	6f a5       	ldd	r22, Y+47	; 0x2f
     4e4:	78 a9       	ldd	r23, Y+48	; 0x30
     4e6:	89 a9       	ldd	r24, Y+49	; 0x31
     4e8:	9a a9       	ldd	r25, Y+50	; 0x32
     4ea:	0e 94 96 05 	call	0xb2c	; 0xb2c <__cmpsf2>
     4ee:	88 23       	and	r24, r24
     4f0:	2c f4       	brge	.+10     	; 0x4fc <main+0x39a>
		__ticks = 1;
     4f2:	81 e0       	ldi	r24, 0x01	; 1
     4f4:	90 e0       	ldi	r25, 0x00	; 0
     4f6:	9c ab       	std	Y+52, r25	; 0x34
     4f8:	8b ab       	std	Y+51, r24	; 0x33
     4fa:	3f c0       	rjmp	.+126    	; 0x57a <main+0x418>
	else if (__tmp > 65535)
     4fc:	20 e0       	ldi	r18, 0x00	; 0
     4fe:	3f ef       	ldi	r19, 0xFF	; 255
     500:	4f e7       	ldi	r20, 0x7F	; 127
     502:	57 e4       	ldi	r21, 0x47	; 71
     504:	6f a5       	ldd	r22, Y+47	; 0x2f
     506:	78 a9       	ldd	r23, Y+48	; 0x30
     508:	89 a9       	ldd	r24, Y+49	; 0x31
     50a:	9a a9       	ldd	r25, Y+50	; 0x32
     50c:	0e 94 17 06 	call	0xc2e	; 0xc2e <__gesf2>
     510:	18 16       	cp	r1, r24
     512:	4c f5       	brge	.+82     	; 0x566 <main+0x404>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     514:	20 e0       	ldi	r18, 0x00	; 0
     516:	30 e0       	ldi	r19, 0x00	; 0
     518:	40 e2       	ldi	r20, 0x20	; 32
     51a:	51 e4       	ldi	r21, 0x41	; 65
     51c:	6b a5       	ldd	r22, Y+43	; 0x2b
     51e:	7c a5       	ldd	r23, Y+44	; 0x2c
     520:	8d a5       	ldd	r24, Y+45	; 0x2d
     522:	9e a5       	ldd	r25, Y+46	; 0x2e
     524:	0e 94 1c 06 	call	0xc38	; 0xc38 <__mulsf3>
     528:	dc 01       	movw	r26, r24
     52a:	cb 01       	movw	r24, r22
     52c:	bc 01       	movw	r22, r24
     52e:	cd 01       	movw	r24, r26
     530:	0e 94 9b 05 	call	0xb36	; 0xb36 <__fixunssfsi>
     534:	dc 01       	movw	r26, r24
     536:	cb 01       	movw	r24, r22
     538:	9c ab       	std	Y+52, r25	; 0x34
     53a:	8b ab       	std	Y+51, r24	; 0x33
     53c:	0f c0       	rjmp	.+30     	; 0x55c <main+0x3fa>
     53e:	80 e9       	ldi	r24, 0x90	; 144
     540:	91 e0       	ldi	r25, 0x01	; 1
     542:	9e ab       	std	Y+54, r25	; 0x36
     544:	8d ab       	std	Y+53, r24	; 0x35
     546:	8d a9       	ldd	r24, Y+53	; 0x35
     548:	9e a9       	ldd	r25, Y+54	; 0x36
     54a:	01 97       	sbiw	r24, 0x01	; 1
     54c:	f1 f7       	brne	.-4      	; 0x54a <main+0x3e8>
     54e:	9e ab       	std	Y+54, r25	; 0x36
     550:	8d ab       	std	Y+53, r24	; 0x35
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     552:	8b a9       	ldd	r24, Y+51	; 0x33
     554:	9c a9       	ldd	r25, Y+52	; 0x34
     556:	01 97       	sbiw	r24, 0x01	; 1
     558:	9c ab       	std	Y+52, r25	; 0x34
     55a:	8b ab       	std	Y+51, r24	; 0x33
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     55c:	8b a9       	ldd	r24, Y+51	; 0x33
     55e:	9c a9       	ldd	r25, Y+52	; 0x34
     560:	89 2b       	or	r24, r25
     562:	69 f7       	brne	.-38     	; 0x53e <main+0x3dc>
     564:	14 c0       	rjmp	.+40     	; 0x58e <main+0x42c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     566:	6f a5       	ldd	r22, Y+47	; 0x2f
     568:	78 a9       	ldd	r23, Y+48	; 0x30
     56a:	89 a9       	ldd	r24, Y+49	; 0x31
     56c:	9a a9       	ldd	r25, Y+50	; 0x32
     56e:	0e 94 9b 05 	call	0xb36	; 0xb36 <__fixunssfsi>
     572:	dc 01       	movw	r26, r24
     574:	cb 01       	movw	r24, r22
     576:	9c ab       	std	Y+52, r25	; 0x34
     578:	8b ab       	std	Y+51, r24	; 0x33
     57a:	8b a9       	ldd	r24, Y+51	; 0x33
     57c:	9c a9       	ldd	r25, Y+52	; 0x34
     57e:	98 af       	std	Y+56, r25	; 0x38
     580:	8f ab       	std	Y+55, r24	; 0x37
     582:	8f a9       	ldd	r24, Y+55	; 0x37
     584:	98 ad       	ldd	r25, Y+56	; 0x38
     586:	01 97       	sbiw	r24, 0x01	; 1
     588:	f1 f7       	brne	.-4      	; 0x586 <main+0x424>
     58a:	98 af       	std	Y+56, r25	; 0x38
     58c:	8f ab       	std	Y+55, r24	; 0x37
		_delay_ms(300);

		led_yellowOff();
     58e:	0e 94 21 05 	call	0xa42	; 0xa42 <led_yellowOff>
		led_redOff();
     592:	0e 94 de 04 	call	0x9bc	; 0x9bc <led_redOff>
	}
     596:	17 ce       	rjmp	.-978    	; 0x1c6 <main+0x64>

00000598 <printState>:
	return 1;
}

void printState(const char* state)
{
     598:	cf 93       	push	r28
     59a:	df 93       	push	r29
     59c:	00 d0       	rcall	.+0      	; 0x59e <printState+0x6>
     59e:	cd b7       	in	r28, 0x3d	; 61
     5a0:	de b7       	in	r29, 0x3e	; 62
     5a2:	9a 83       	std	Y+2, r25	; 0x02
     5a4:	89 83       	std	Y+1, r24	; 0x01
	fprintf(uartout,"%s\n", state);
     5a6:	80 91 00 02 	lds	r24, 0x0200
     5aa:	90 91 01 02 	lds	r25, 0x0201
     5ae:	2a 81       	ldd	r18, Y+2	; 0x02
     5b0:	2f 93       	push	r18
     5b2:	29 81       	ldd	r18, Y+1	; 0x01
     5b4:	2f 93       	push	r18
     5b6:	29 e8       	ldi	r18, 0x89	; 137
     5b8:	32 e0       	ldi	r19, 0x02	; 2
     5ba:	23 2f       	mov	r18, r19
     5bc:	2f 93       	push	r18
     5be:	29 e8       	ldi	r18, 0x89	; 137
     5c0:	32 e0       	ldi	r19, 0x02	; 2
     5c2:	2f 93       	push	r18
     5c4:	29 2f       	mov	r18, r25
     5c6:	2f 93       	push	r18
     5c8:	8f 93       	push	r24
     5ca:	0e 94 b1 06 	call	0xd62	; 0xd62 <fprintf>
     5ce:	0f 90       	pop	r0
     5d0:	0f 90       	pop	r0
     5d2:	0f 90       	pop	r0
     5d4:	0f 90       	pop	r0
     5d6:	0f 90       	pop	r0
     5d8:	0f 90       	pop	r0
	fprintf(lcdout,"%s\n", state);
     5da:	80 91 02 02 	lds	r24, 0x0202
     5de:	90 91 03 02 	lds	r25, 0x0203
     5e2:	2a 81       	ldd	r18, Y+2	; 0x02
     5e4:	2f 93       	push	r18
     5e6:	29 81       	ldd	r18, Y+1	; 0x01
     5e8:	2f 93       	push	r18
     5ea:	29 e8       	ldi	r18, 0x89	; 137
     5ec:	32 e0       	ldi	r19, 0x02	; 2
     5ee:	23 2f       	mov	r18, r19
     5f0:	2f 93       	push	r18
     5f2:	29 e8       	ldi	r18, 0x89	; 137
     5f4:	32 e0       	ldi	r19, 0x02	; 2
     5f6:	2f 93       	push	r18
     5f8:	29 2f       	mov	r18, r25
     5fa:	2f 93       	push	r18
     5fc:	8f 93       	push	r24
     5fe:	0e 94 b1 06 	call	0xd62	; 0xd62 <fprintf>
     602:	0f 90       	pop	r0
     604:	0f 90       	pop	r0
     606:	0f 90       	pop	r0
     608:	0f 90       	pop	r0
     60a:	0f 90       	pop	r0
     60c:	0f 90       	pop	r0
}
     60e:	0f 90       	pop	r0
     610:	0f 90       	pop	r0
     612:	df 91       	pop	r29
     614:	cf 91       	pop	r28
     616:	08 95       	ret

00000618 <uart_init>:
     618:	0f 93       	push	r16
     61a:	1f 93       	push	r17
     61c:	8b 01       	movw	r16, r22
     61e:	9c 01       	movw	r18, r24
     620:	80 91 9c 08 	lds	r24, 0x089C
     624:	81 11       	cpse	r24, r1
     626:	38 c0       	rjmp	.+112    	; 0x698 <uart_init+0x80>
     628:	81 e0       	ldi	r24, 0x01	; 1
     62a:	80 93 9c 08 	sts	0x089C, r24
     62e:	c9 01       	movw	r24, r18
     630:	b8 01       	movw	r22, r16
     632:	77 5f       	subi	r23, 0xF7	; 247
     634:	82 4c       	sbci	r24, 0xC2	; 194
     636:	9f 4f       	sbci	r25, 0xFF	; 255
     638:	42 e0       	ldi	r20, 0x02	; 2
     63a:	66 0f       	add	r22, r22
     63c:	77 1f       	adc	r23, r23
     63e:	88 1f       	adc	r24, r24
     640:	99 1f       	adc	r25, r25
     642:	4a 95       	dec	r20
     644:	d1 f7       	brne	.-12     	; 0x63a <uart_init+0x22>
     646:	a9 01       	movw	r20, r18
     648:	98 01       	movw	r18, r16
     64a:	e3 e0       	ldi	r30, 0x03	; 3
     64c:	22 0f       	add	r18, r18
     64e:	33 1f       	adc	r19, r19
     650:	44 1f       	adc	r20, r20
     652:	55 1f       	adc	r21, r21
     654:	ea 95       	dec	r30
     656:	d1 f7       	brne	.-12     	; 0x64c <uart_init+0x34>
     658:	0e 94 74 05 	call	0xae8	; 0xae8 <__udivmodsi4>
     65c:	21 50       	subi	r18, 0x01	; 1
     65e:	31 09       	sbc	r19, r1
     660:	30 93 cd 00 	sts	0x00CD, r19
     664:	20 93 cc 00 	sts	0x00CC, r18
     668:	22 e0       	ldi	r18, 0x02	; 2
     66a:	20 93 c8 00 	sts	0x00C8, r18
     66e:	86 e0       	ldi	r24, 0x06	; 6
     670:	80 93 ca 00 	sts	0x00CA, r24
     674:	88 e1       	ldi	r24, 0x18	; 24
     676:	80 93 c9 00 	sts	0x00C9, r24
     67a:	8e e0       	ldi	r24, 0x0E	; 14
     67c:	ee e8       	ldi	r30, 0x8E	; 142
     67e:	f8 e0       	ldi	r31, 0x08	; 8
     680:	df 01       	movw	r26, r30
     682:	1d 92       	st	X+, r1
     684:	8a 95       	dec	r24
     686:	e9 f7       	brne	.-6      	; 0x682 <uart_init+0x6a>
     688:	8d e5       	ldi	r24, 0x5D	; 93
     68a:	93 e0       	ldi	r25, 0x03	; 3
     68c:	90 93 97 08 	sts	0x0897, r25
     690:	80 93 96 08 	sts	0x0896, r24
     694:	20 93 91 08 	sts	0x0891, r18
     698:	1f 91       	pop	r17
     69a:	0f 91       	pop	r16
     69c:	08 95       	ret

0000069e <uart_getc>:
     69e:	80 91 c8 00 	lds	r24, 0x00C8
     6a2:	87 ff       	sbrs	r24, 7
     6a4:	fc cf       	rjmp	.-8      	; 0x69e <uart_getc>
     6a6:	80 91 ce 00 	lds	r24, 0x00CE
     6aa:	08 95       	ret

000006ac <uart_putc>:
     6ac:	90 91 c8 00 	lds	r25, 0x00C8
     6b0:	95 ff       	sbrs	r25, 5
     6b2:	fc cf       	rjmp	.-8      	; 0x6ac <uart_putc>
     6b4:	80 93 ce 00 	sts	0x00CE, r24
     6b8:	08 95       	ret

000006ba <uart_putcProxy>:
     6ba:	0e 94 56 03 	call	0x6ac	; 0x6ac <uart_putc>
     6be:	80 e0       	ldi	r24, 0x00	; 0
     6c0:	90 e0       	ldi	r25, 0x00	; 0
     6c2:	08 95       	ret

000006c4 <lcd_waitBusy>:
     6c4:	0e 94 a1 04 	call	0x942	; 0x942 <lcdDriver_readStatus>
     6c8:	87 fd       	sbrc	r24, 7
     6ca:	fc cf       	rjmp	.-8      	; 0x6c4 <lcd_waitBusy>
     6cc:	08 95       	ret

000006ce <lcd_write>:
     6ce:	1f 93       	push	r17
     6d0:	cf 93       	push	r28
     6d2:	df 93       	push	r29
     6d4:	d8 2f       	mov	r29, r24
     6d6:	c6 2f       	mov	r28, r22
     6d8:	14 2f       	mov	r17, r20
     6da:	6a 37       	cpi	r22, 0x7A	; 122
     6dc:	10 f5       	brcc	.+68     	; 0x722 <lcd_write+0x54>
     6de:	84 30       	cpi	r24, 0x04	; 4
     6e0:	00 f5       	brcc	.+64     	; 0x722 <lcd_write+0x54>
     6e2:	6d 33       	cpi	r22, 0x3D	; 61
     6e4:	40 f0       	brcs	.+16     	; 0x6f6 <lcd_write+0x28>
     6e6:	81 e0       	ldi	r24, 0x01	; 1
     6e8:	0e 94 98 04 	call	0x930	; 0x930 <lcdDriver_selectController>
     6ec:	0e 94 62 03 	call	0x6c4	; 0x6c4 <lcd_waitBusy>
     6f0:	83 ec       	ldi	r24, 0xC3	; 195
     6f2:	8c 0f       	add	r24, r28
     6f4:	06 c0       	rjmp	.+12     	; 0x702 <lcd_write+0x34>
     6f6:	80 e0       	ldi	r24, 0x00	; 0
     6f8:	0e 94 98 04 	call	0x930	; 0x930 <lcdDriver_selectController>
     6fc:	0e 94 62 03 	call	0x6c4	; 0x6c4 <lcd_waitBusy>
     700:	8c 2f       	mov	r24, r28
     702:	0e 94 8e 04 	call	0x91c	; 0x91c <lcdDriver_writeCommand>
     706:	0e 94 62 03 	call	0x6c4	; 0x6c4 <lcd_waitBusy>
     70a:	8d 2f       	mov	r24, r29
     70c:	88 6b       	ori	r24, 0xB8	; 184
     70e:	0e 94 8e 04 	call	0x91c	; 0x91c <lcdDriver_writeCommand>
     712:	0e 94 62 03 	call	0x6c4	; 0x6c4 <lcd_waitBusy>
     716:	81 2f       	mov	r24, r17
     718:	df 91       	pop	r29
     71a:	cf 91       	pop	r28
     71c:	1f 91       	pop	r17
     71e:	0c 94 83 04 	jmp	0x906	; 0x906 <lcdDriver_writeData>
     722:	df 91       	pop	r29
     724:	cf 91       	pop	r28
     726:	1f 91       	pop	r17
     728:	08 95       	ret

0000072a <lcd_setCursor>:
     72a:	80 93 86 0a 	sts	0x0A86, r24
     72e:	60 93 85 0a 	sts	0x0A85, r22
     732:	08 95       	ret

00000734 <lcd_putc>:
     734:	0f 93       	push	r16
     736:	1f 93       	push	r17
     738:	cf 93       	push	r28
     73a:	df 93       	push	r29
     73c:	90 91 85 0a 	lds	r25, 0x0A85
     740:	8a 30       	cpi	r24, 0x0A	; 10
     742:	31 f4       	brne	.+12     	; 0x750 <lcd_putc+0x1c>
     744:	10 92 86 0a 	sts	0x0A86, r1
     748:	9f 5f       	subi	r25, 0xFF	; 255
     74a:	90 93 85 0a 	sts	0x0A85, r25
     74e:	2d c0       	rjmp	.+90     	; 0x7aa <lcd_putc+0x76>
     750:	20 91 86 0a 	lds	r18, 0x0A86
     754:	24 31       	cpi	r18, 0x14	; 20
     756:	29 f4       	brne	.+10     	; 0x762 <lcd_putc+0x2e>
     758:	10 92 86 0a 	sts	0x0A86, r1
     75c:	9f 5f       	subi	r25, 0xFF	; 255
     75e:	90 93 85 0a 	sts	0x0A85, r25
     762:	90 91 85 0a 	lds	r25, 0x0A85
     766:	94 30       	cpi	r25, 0x04	; 4
     768:	00 f5       	brcc	.+64     	; 0x7aa <lcd_putc+0x76>
     76a:	96 e0       	ldi	r25, 0x06	; 6
     76c:	89 9f       	mul	r24, r25
     76e:	80 01       	movw	r16, r0
     770:	11 24       	eor	r1, r1
     772:	c0 e0       	ldi	r28, 0x00	; 0
     774:	d0 e0       	ldi	r29, 0x00	; 0
     776:	03 57       	subi	r16, 0x73	; 115
     778:	1d 4f       	sbci	r17, 0xFD	; 253
     77a:	f8 01       	movw	r30, r16
     77c:	ec 0f       	add	r30, r28
     77e:	fd 1f       	adc	r31, r29
     780:	80 91 86 0a 	lds	r24, 0x0A86
     784:	68 2f       	mov	r22, r24
     786:	66 0f       	add	r22, r22
     788:	68 0f       	add	r22, r24
     78a:	66 0f       	add	r22, r22
     78c:	6c 0f       	add	r22, r28
     78e:	40 81       	ld	r20, Z
     790:	80 91 85 0a 	lds	r24, 0x0A85
     794:	0e 94 67 03 	call	0x6ce	; 0x6ce <lcd_write>
     798:	21 96       	adiw	r28, 0x01	; 1
     79a:	c6 30       	cpi	r28, 0x06	; 6
     79c:	d1 05       	cpc	r29, r1
     79e:	69 f7       	brne	.-38     	; 0x77a <lcd_putc+0x46>
     7a0:	80 91 86 0a 	lds	r24, 0x0A86
     7a4:	8f 5f       	subi	r24, 0xFF	; 255
     7a6:	80 93 86 0a 	sts	0x0A86, r24
     7aa:	df 91       	pop	r29
     7ac:	cf 91       	pop	r28
     7ae:	1f 91       	pop	r17
     7b0:	0f 91       	pop	r16
     7b2:	08 95       	ret

000007b4 <put>:
     7b4:	0e 94 9a 03 	call	0x734	; 0x734 <lcd_putc>
     7b8:	80 e0       	ldi	r24, 0x00	; 0
     7ba:	90 e0       	ldi	r25, 0x00	; 0
     7bc:	08 95       	ret

000007be <lcd_setPixel>:
     7be:	98 2f       	mov	r25, r24
     7c0:	96 95       	lsr	r25
     7c2:	96 95       	lsr	r25
     7c4:	96 95       	lsr	r25
     7c6:	94 30       	cpi	r25, 0x04	; 4
     7c8:	08 f0       	brcs	.+2      	; 0x7cc <lcd_setPixel+0xe>
     7ca:	3f c0       	rjmp	.+126    	; 0x84a <lcd_setPixel+0x8c>
     7cc:	6a 37       	cpi	r22, 0x7A	; 122
     7ce:	e8 f5       	brcc	.+122    	; 0x84a <lcd_setPixel+0x8c>
     7d0:	87 70       	andi	r24, 0x07	; 7
     7d2:	a9 2f       	mov	r26, r25
     7d4:	b0 e0       	ldi	r27, 0x00	; 0
     7d6:	26 2f       	mov	r18, r22
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	44 23       	and	r20, r20
     7dc:	a1 f0       	breq	.+40     	; 0x806 <lcd_setPixel+0x48>
     7de:	4a e7       	ldi	r20, 0x7A	; 122
     7e0:	4a 9f       	mul	r20, r26
     7e2:	f0 01       	movw	r30, r0
     7e4:	4b 9f       	mul	r20, r27
     7e6:	f0 0d       	add	r31, r0
     7e8:	11 24       	eor	r1, r1
     7ea:	e2 0f       	add	r30, r18
     7ec:	f3 1f       	adc	r31, r19
     7ee:	e3 56       	subi	r30, 0x63	; 99
     7f0:	f7 4f       	sbci	r31, 0xF7	; 247
     7f2:	41 e0       	ldi	r20, 0x01	; 1
     7f4:	50 e0       	ldi	r21, 0x00	; 0
     7f6:	01 c0       	rjmp	.+2      	; 0x7fa <lcd_setPixel+0x3c>
     7f8:	44 0f       	add	r20, r20
     7fa:	8a 95       	dec	r24
     7fc:	ea f7       	brpl	.-6      	; 0x7f8 <lcd_setPixel+0x3a>
     7fe:	80 81       	ld	r24, Z
     800:	84 2b       	or	r24, r20
     802:	80 83       	st	Z, r24
     804:	14 c0       	rjmp	.+40     	; 0x82e <lcd_setPixel+0x70>
     806:	4a e7       	ldi	r20, 0x7A	; 122
     808:	4a 9f       	mul	r20, r26
     80a:	f0 01       	movw	r30, r0
     80c:	4b 9f       	mul	r20, r27
     80e:	f0 0d       	add	r31, r0
     810:	11 24       	eor	r1, r1
     812:	e2 0f       	add	r30, r18
     814:	f3 1f       	adc	r31, r19
     816:	e3 56       	subi	r30, 0x63	; 99
     818:	f7 4f       	sbci	r31, 0xF7	; 247
     81a:	41 e0       	ldi	r20, 0x01	; 1
     81c:	50 e0       	ldi	r21, 0x00	; 0
     81e:	01 c0       	rjmp	.+2      	; 0x822 <lcd_setPixel+0x64>
     820:	44 0f       	add	r20, r20
     822:	8a 95       	dec	r24
     824:	ea f7       	brpl	.-6      	; 0x820 <lcd_setPixel+0x62>
     826:	40 95       	com	r20
     828:	80 81       	ld	r24, Z
     82a:	48 23       	and	r20, r24
     82c:	40 83       	st	Z, r20
     82e:	8a e7       	ldi	r24, 0x7A	; 122
     830:	8a 9f       	mul	r24, r26
     832:	f0 01       	movw	r30, r0
     834:	8b 9f       	mul	r24, r27
     836:	f0 0d       	add	r31, r0
     838:	11 24       	eor	r1, r1
     83a:	e2 0f       	add	r30, r18
     83c:	f3 1f       	adc	r31, r19
     83e:	e3 56       	subi	r30, 0x63	; 99
     840:	f7 4f       	sbci	r31, 0xF7	; 247
     842:	40 81       	ld	r20, Z
     844:	89 2f       	mov	r24, r25
     846:	0c 94 67 03 	jmp	0x6ce	; 0x6ce <lcd_write>
     84a:	08 95       	ret

0000084c <lcd_clear>:
     84c:	ff 92       	push	r15
     84e:	0f 93       	push	r16
     850:	1f 93       	push	r17
     852:	cf 93       	push	r28
     854:	df 93       	push	r29
     856:	0d e9       	ldi	r16, 0x9D	; 157
     858:	18 e0       	ldi	r17, 0x08	; 8
     85a:	f1 2c       	mov	r15, r1
     85c:	c0 e0       	ldi	r28, 0x00	; 0
     85e:	d0 e0       	ldi	r29, 0x00	; 0
     860:	40 e0       	ldi	r20, 0x00	; 0
     862:	6c 2f       	mov	r22, r28
     864:	8f 2d       	mov	r24, r15
     866:	0e 94 67 03 	call	0x6ce	; 0x6ce <lcd_write>
     86a:	f8 01       	movw	r30, r16
     86c:	ec 0f       	add	r30, r28
     86e:	fd 1f       	adc	r31, r29
     870:	10 82       	st	Z, r1
     872:	21 96       	adiw	r28, 0x01	; 1
     874:	ca 37       	cpi	r28, 0x7A	; 122
     876:	d1 05       	cpc	r29, r1
     878:	99 f7       	brne	.-26     	; 0x860 <lcd_clear+0x14>
     87a:	f3 94       	inc	r15
     87c:	06 58       	subi	r16, 0x86	; 134
     87e:	1f 4f       	sbci	r17, 0xFF	; 255
     880:	84 e0       	ldi	r24, 0x04	; 4
     882:	f8 12       	cpse	r15, r24
     884:	eb cf       	rjmp	.-42     	; 0x85c <lcd_clear+0x10>
     886:	df 91       	pop	r29
     888:	cf 91       	pop	r28
     88a:	1f 91       	pop	r17
     88c:	0f 91       	pop	r16
     88e:	ff 90       	pop	r15
     890:	08 95       	ret

00000892 <lcd_init>:
     892:	0e 94 7c 04 	call	0x8f8	; 0x8f8 <lcdDriver_init>
     896:	80 e0       	ldi	r24, 0x00	; 0
     898:	0e 94 98 04 	call	0x930	; 0x930 <lcdDriver_selectController>
     89c:	0e 94 62 03 	call	0x6c4	; 0x6c4 <lcd_waitBusy>
     8a0:	82 ee       	ldi	r24, 0xE2	; 226
     8a2:	0e 94 8e 04 	call	0x91c	; 0x91c <lcdDriver_writeCommand>
     8a6:	0e 94 62 03 	call	0x6c4	; 0x6c4 <lcd_waitBusy>
     8aa:	8f ea       	ldi	r24, 0xAF	; 175
     8ac:	0e 94 8e 04 	call	0x91c	; 0x91c <lcdDriver_writeCommand>
     8b0:	81 e0       	ldi	r24, 0x01	; 1
     8b2:	0e 94 98 04 	call	0x930	; 0x930 <lcdDriver_selectController>
     8b6:	0e 94 62 03 	call	0x6c4	; 0x6c4 <lcd_waitBusy>
     8ba:	82 ee       	ldi	r24, 0xE2	; 226
     8bc:	0e 94 8e 04 	call	0x91c	; 0x91c <lcdDriver_writeCommand>
     8c0:	0e 94 62 03 	call	0x6c4	; 0x6c4 <lcd_waitBusy>
     8c4:	8f ea       	ldi	r24, 0xAF	; 175
     8c6:	0e 94 8e 04 	call	0x91c	; 0x91c <lcdDriver_writeCommand>
     8ca:	0e 94 26 04 	call	0x84c	; 0x84c <lcd_clear>
     8ce:	10 92 86 0a 	sts	0x0A86, r1
     8d2:	10 92 85 0a 	sts	0x0A85, r1
     8d6:	8e e0       	ldi	r24, 0x0E	; 14
     8d8:	e7 e8       	ldi	r30, 0x87	; 135
     8da:	fa e0       	ldi	r31, 0x0A	; 10
     8dc:	df 01       	movw	r26, r30
     8de:	1d 92       	st	X+, r1
     8e0:	8a 95       	dec	r24
     8e2:	e9 f7       	brne	.-6      	; 0x8de <lcd_init+0x4c>
     8e4:	8a ed       	ldi	r24, 0xDA	; 218
     8e6:	93 e0       	ldi	r25, 0x03	; 3
     8e8:	90 93 90 0a 	sts	0x0A90, r25
     8ec:	80 93 8f 0a 	sts	0x0A8F, r24
     8f0:	82 e0       	ldi	r24, 0x02	; 2
     8f2:	80 93 8a 0a 	sts	0x0A8A, r24
     8f6:	08 95       	ret

000008f8 <lcdDriver_init>:
     8f8:	54 9a       	sbi	0x0a, 4	; 10
     8fa:	55 9a       	sbi	0x0a, 5	; 10
     8fc:	5d 9a       	sbi	0x0b, 5	; 11
     8fe:	57 9a       	sbi	0x0a, 7	; 10
     900:	5f 9a       	sbi	0x0b, 7	; 11
     902:	56 9a       	sbi	0x0a, 6	; 10
     904:	08 95       	ret

00000906 <lcdDriver_writeData>:
     906:	5e 9a       	sbi	0x0b, 6	; 11
     908:	9f ef       	ldi	r25, 0xFF	; 255
     90a:	9d b9       	out	0x0d, r25	; 13
     90c:	8e b9       	out	0x0e, r24	; 14
     90e:	5d 98       	cbi	0x0b, 5	; 11
     910:	00 00       	nop
     912:	00 00       	nop
     914:	00 00       	nop
     916:	5d 9a       	sbi	0x0b, 5	; 11
     918:	5e 98       	cbi	0x0b, 6	; 11
     91a:	08 95       	ret

0000091c <lcdDriver_writeCommand>:
     91c:	5e 98       	cbi	0x0b, 6	; 11
     91e:	9f ef       	ldi	r25, 0xFF	; 255
     920:	9d b9       	out	0x0d, r25	; 13
     922:	8e b9       	out	0x0e, r24	; 14
     924:	5d 98       	cbi	0x0b, 5	; 11
     926:	00 00       	nop
     928:	00 00       	nop
     92a:	00 00       	nop
     92c:	5d 9a       	sbi	0x0b, 5	; 11
     92e:	08 95       	ret

00000930 <lcdDriver_selectController>:
     930:	2b b1       	in	r18, 0x0b	; 11
     932:	30 e1       	ldi	r19, 0x10	; 16
     934:	83 9f       	mul	r24, r19
     936:	c0 01       	movw	r24, r0
     938:	11 24       	eor	r1, r1
     93a:	2f 7e       	andi	r18, 0xEF	; 239
     93c:	28 2b       	or	r18, r24
     93e:	2b b9       	out	0x0b, r18	; 11
     940:	08 95       	ret

00000942 <lcdDriver_readStatus>:
     942:	5e 98       	cbi	0x0b, 6	; 11
     944:	1d b8       	out	0x0d, r1	; 13
     946:	1e b8       	out	0x0e, r1	; 14
     948:	5f 98       	cbi	0x0b, 7	; 11
     94a:	00 00       	nop
     94c:	00 00       	nop
     94e:	00 00       	nop
     950:	8c b1       	in	r24, 0x0c	; 12
     952:	5f 9a       	sbi	0x0b, 7	; 11
     954:	08 95       	ret

00000956 <led_redInit>:
     956:	cf 93       	push	r28
     958:	df 93       	push	r29
     95a:	cd b7       	in	r28, 0x3d	; 61
     95c:	de b7       	in	r29, 0x3e	; 62
     95e:	83 e3       	ldi	r24, 0x33	; 51
     960:	90 e0       	ldi	r25, 0x00	; 0
     962:	23 e3       	ldi	r18, 0x33	; 51
     964:	30 e0       	ldi	r19, 0x00	; 0
     966:	f9 01       	movw	r30, r18
     968:	20 81       	ld	r18, Z
     96a:	22 60       	ori	r18, 0x02	; 2
     96c:	fc 01       	movw	r30, r24
     96e:	20 83       	st	Z, r18
     970:	0e 94 de 04 	call	0x9bc	; 0x9bc <led_redOff>
     974:	df 91       	pop	r29
     976:	cf 91       	pop	r28
     978:	08 95       	ret

0000097a <led_redToggle>:
     97a:	cf 93       	push	r28
     97c:	df 93       	push	r29
     97e:	cd b7       	in	r28, 0x3d	; 61
     980:	de b7       	in	r29, 0x3e	; 62
     982:	84 e3       	ldi	r24, 0x34	; 52
     984:	90 e0       	ldi	r25, 0x00	; 0
     986:	24 e3       	ldi	r18, 0x34	; 52
     988:	30 e0       	ldi	r19, 0x00	; 0
     98a:	f9 01       	movw	r30, r18
     98c:	30 81       	ld	r19, Z
     98e:	22 e0       	ldi	r18, 0x02	; 2
     990:	23 27       	eor	r18, r19
     992:	fc 01       	movw	r30, r24
     994:	20 83       	st	Z, r18
     996:	df 91       	pop	r29
     998:	cf 91       	pop	r28
     99a:	08 95       	ret

0000099c <led_redOn>:
     99c:	cf 93       	push	r28
     99e:	df 93       	push	r29
     9a0:	cd b7       	in	r28, 0x3d	; 61
     9a2:	de b7       	in	r29, 0x3e	; 62
     9a4:	84 e3       	ldi	r24, 0x34	; 52
     9a6:	90 e0       	ldi	r25, 0x00	; 0
     9a8:	24 e3       	ldi	r18, 0x34	; 52
     9aa:	30 e0       	ldi	r19, 0x00	; 0
     9ac:	f9 01       	movw	r30, r18
     9ae:	20 81       	ld	r18, Z
     9b0:	2d 7f       	andi	r18, 0xFD	; 253
     9b2:	fc 01       	movw	r30, r24
     9b4:	20 83       	st	Z, r18
     9b6:	df 91       	pop	r29
     9b8:	cf 91       	pop	r28
     9ba:	08 95       	ret

000009bc <led_redOff>:
     9bc:	cf 93       	push	r28
     9be:	df 93       	push	r29
     9c0:	cd b7       	in	r28, 0x3d	; 61
     9c2:	de b7       	in	r29, 0x3e	; 62
     9c4:	84 e3       	ldi	r24, 0x34	; 52
     9c6:	90 e0       	ldi	r25, 0x00	; 0
     9c8:	24 e3       	ldi	r18, 0x34	; 52
     9ca:	30 e0       	ldi	r19, 0x00	; 0
     9cc:	f9 01       	movw	r30, r18
     9ce:	20 81       	ld	r18, Z
     9d0:	22 60       	ori	r18, 0x02	; 2
     9d2:	fc 01       	movw	r30, r24
     9d4:	20 83       	st	Z, r18
     9d6:	df 91       	pop	r29
     9d8:	cf 91       	pop	r28
     9da:	08 95       	ret

000009dc <led_yellowInit>:
     9dc:	cf 93       	push	r28
     9de:	df 93       	push	r29
     9e0:	cd b7       	in	r28, 0x3d	; 61
     9e2:	de b7       	in	r29, 0x3e	; 62
     9e4:	80 e3       	ldi	r24, 0x30	; 48
     9e6:	90 e0       	ldi	r25, 0x00	; 0
     9e8:	20 e3       	ldi	r18, 0x30	; 48
     9ea:	30 e0       	ldi	r19, 0x00	; 0
     9ec:	f9 01       	movw	r30, r18
     9ee:	20 81       	ld	r18, Z
     9f0:	20 68       	ori	r18, 0x80	; 128
     9f2:	fc 01       	movw	r30, r24
     9f4:	20 83       	st	Z, r18
     9f6:	0e 94 21 05 	call	0xa42	; 0xa42 <led_yellowOff>
     9fa:	df 91       	pop	r29
     9fc:	cf 91       	pop	r28
     9fe:	08 95       	ret

00000a00 <led_yellowToggle>:
     a00:	cf 93       	push	r28
     a02:	df 93       	push	r29
     a04:	cd b7       	in	r28, 0x3d	; 61
     a06:	de b7       	in	r29, 0x3e	; 62
     a08:	81 e3       	ldi	r24, 0x31	; 49
     a0a:	90 e0       	ldi	r25, 0x00	; 0
     a0c:	21 e3       	ldi	r18, 0x31	; 49
     a0e:	30 e0       	ldi	r19, 0x00	; 0
     a10:	f9 01       	movw	r30, r18
     a12:	30 81       	ld	r19, Z
     a14:	20 e8       	ldi	r18, 0x80	; 128
     a16:	23 27       	eor	r18, r19
     a18:	fc 01       	movw	r30, r24
     a1a:	20 83       	st	Z, r18
     a1c:	df 91       	pop	r29
     a1e:	cf 91       	pop	r28
     a20:	08 95       	ret

00000a22 <led_yellowOn>:
     a22:	cf 93       	push	r28
     a24:	df 93       	push	r29
     a26:	cd b7       	in	r28, 0x3d	; 61
     a28:	de b7       	in	r29, 0x3e	; 62
     a2a:	81 e3       	ldi	r24, 0x31	; 49
     a2c:	90 e0       	ldi	r25, 0x00	; 0
     a2e:	21 e3       	ldi	r18, 0x31	; 49
     a30:	30 e0       	ldi	r19, 0x00	; 0
     a32:	f9 01       	movw	r30, r18
     a34:	20 81       	ld	r18, Z
     a36:	2f 77       	andi	r18, 0x7F	; 127
     a38:	fc 01       	movw	r30, r24
     a3a:	20 83       	st	Z, r18
     a3c:	df 91       	pop	r29
     a3e:	cf 91       	pop	r28
     a40:	08 95       	ret

00000a42 <led_yellowOff>:
     a42:	cf 93       	push	r28
     a44:	df 93       	push	r29
     a46:	cd b7       	in	r28, 0x3d	; 61
     a48:	de b7       	in	r29, 0x3e	; 62
     a4a:	81 e3       	ldi	r24, 0x31	; 49
     a4c:	90 e0       	ldi	r25, 0x00	; 0
     a4e:	21 e3       	ldi	r18, 0x31	; 49
     a50:	30 e0       	ldi	r19, 0x00	; 0
     a52:	f9 01       	movw	r30, r18
     a54:	20 81       	ld	r18, Z
     a56:	20 68       	ori	r18, 0x80	; 128
     a58:	fc 01       	movw	r30, r24
     a5a:	20 83       	st	Z, r18
     a5c:	df 91       	pop	r29
     a5e:	cf 91       	pop	r28
     a60:	08 95       	ret

00000a62 <led_greenInit>:
     a62:	cf 93       	push	r28
     a64:	df 93       	push	r29
     a66:	cd b7       	in	r28, 0x3d	; 61
     a68:	de b7       	in	r29, 0x3e	; 62
     a6a:	80 e3       	ldi	r24, 0x30	; 48
     a6c:	90 e0       	ldi	r25, 0x00	; 0
     a6e:	20 e3       	ldi	r18, 0x30	; 48
     a70:	30 e0       	ldi	r19, 0x00	; 0
     a72:	f9 01       	movw	r30, r18
     a74:	20 81       	ld	r18, Z
     a76:	20 64       	ori	r18, 0x40	; 64
     a78:	fc 01       	movw	r30, r24
     a7a:	20 83       	st	Z, r18
     a7c:	0e 94 64 05 	call	0xac8	; 0xac8 <led_greenOff>
     a80:	df 91       	pop	r29
     a82:	cf 91       	pop	r28
     a84:	08 95       	ret

00000a86 <led_greenToggle>:
     a86:	cf 93       	push	r28
     a88:	df 93       	push	r29
     a8a:	cd b7       	in	r28, 0x3d	; 61
     a8c:	de b7       	in	r29, 0x3e	; 62
     a8e:	81 e3       	ldi	r24, 0x31	; 49
     a90:	90 e0       	ldi	r25, 0x00	; 0
     a92:	21 e3       	ldi	r18, 0x31	; 49
     a94:	30 e0       	ldi	r19, 0x00	; 0
     a96:	f9 01       	movw	r30, r18
     a98:	30 81       	ld	r19, Z
     a9a:	20 e4       	ldi	r18, 0x40	; 64
     a9c:	23 27       	eor	r18, r19
     a9e:	fc 01       	movw	r30, r24
     aa0:	20 83       	st	Z, r18
     aa2:	df 91       	pop	r29
     aa4:	cf 91       	pop	r28
     aa6:	08 95       	ret

00000aa8 <led_greenOn>:
     aa8:	cf 93       	push	r28
     aaa:	df 93       	push	r29
     aac:	cd b7       	in	r28, 0x3d	; 61
     aae:	de b7       	in	r29, 0x3e	; 62
     ab0:	81 e3       	ldi	r24, 0x31	; 49
     ab2:	90 e0       	ldi	r25, 0x00	; 0
     ab4:	21 e3       	ldi	r18, 0x31	; 49
     ab6:	30 e0       	ldi	r19, 0x00	; 0
     ab8:	f9 01       	movw	r30, r18
     aba:	20 81       	ld	r18, Z
     abc:	2f 7b       	andi	r18, 0xBF	; 191
     abe:	fc 01       	movw	r30, r24
     ac0:	20 83       	st	Z, r18
     ac2:	df 91       	pop	r29
     ac4:	cf 91       	pop	r28
     ac6:	08 95       	ret

00000ac8 <led_greenOff>:
     ac8:	cf 93       	push	r28
     aca:	df 93       	push	r29
     acc:	cd b7       	in	r28, 0x3d	; 61
     ace:	de b7       	in	r29, 0x3e	; 62
     ad0:	81 e3       	ldi	r24, 0x31	; 49
     ad2:	90 e0       	ldi	r25, 0x00	; 0
     ad4:	21 e3       	ldi	r18, 0x31	; 49
     ad6:	30 e0       	ldi	r19, 0x00	; 0
     ad8:	f9 01       	movw	r30, r18
     ada:	20 81       	ld	r18, Z
     adc:	20 64       	ori	r18, 0x40	; 64
     ade:	fc 01       	movw	r30, r24
     ae0:	20 83       	st	Z, r18
     ae2:	df 91       	pop	r29
     ae4:	cf 91       	pop	r28
     ae6:	08 95       	ret

00000ae8 <__udivmodsi4>:
     ae8:	a1 e2       	ldi	r26, 0x21	; 33
     aea:	1a 2e       	mov	r1, r26
     aec:	aa 1b       	sub	r26, r26
     aee:	bb 1b       	sub	r27, r27
     af0:	fd 01       	movw	r30, r26
     af2:	0d c0       	rjmp	.+26     	; 0xb0e <__udivmodsi4_ep>

00000af4 <__udivmodsi4_loop>:
     af4:	aa 1f       	adc	r26, r26
     af6:	bb 1f       	adc	r27, r27
     af8:	ee 1f       	adc	r30, r30
     afa:	ff 1f       	adc	r31, r31
     afc:	a2 17       	cp	r26, r18
     afe:	b3 07       	cpc	r27, r19
     b00:	e4 07       	cpc	r30, r20
     b02:	f5 07       	cpc	r31, r21
     b04:	20 f0       	brcs	.+8      	; 0xb0e <__udivmodsi4_ep>
     b06:	a2 1b       	sub	r26, r18
     b08:	b3 0b       	sbc	r27, r19
     b0a:	e4 0b       	sbc	r30, r20
     b0c:	f5 0b       	sbc	r31, r21

00000b0e <__udivmodsi4_ep>:
     b0e:	66 1f       	adc	r22, r22
     b10:	77 1f       	adc	r23, r23
     b12:	88 1f       	adc	r24, r24
     b14:	99 1f       	adc	r25, r25
     b16:	1a 94       	dec	r1
     b18:	69 f7       	brne	.-38     	; 0xaf4 <__udivmodsi4_loop>
     b1a:	60 95       	com	r22
     b1c:	70 95       	com	r23
     b1e:	80 95       	com	r24
     b20:	90 95       	com	r25
     b22:	9b 01       	movw	r18, r22
     b24:	ac 01       	movw	r20, r24
     b26:	bd 01       	movw	r22, r26
     b28:	cf 01       	movw	r24, r30
     b2a:	08 95       	ret

00000b2c <__cmpsf2>:
     b2c:	0e 94 ca 05 	call	0xb94	; 0xb94 <__fp_cmp>
     b30:	08 f4       	brcc	.+2      	; 0xb34 <__cmpsf2+0x8>
     b32:	81 e0       	ldi	r24, 0x01	; 1
     b34:	08 95       	ret

00000b36 <__fixunssfsi>:
     b36:	0e 94 f6 05 	call	0xbec	; 0xbec <__fp_splitA>
     b3a:	88 f0       	brcs	.+34     	; 0xb5e <__fixunssfsi+0x28>
     b3c:	9f 57       	subi	r25, 0x7F	; 127
     b3e:	98 f0       	brcs	.+38     	; 0xb66 <__fixunssfsi+0x30>
     b40:	b9 2f       	mov	r27, r25
     b42:	99 27       	eor	r25, r25
     b44:	b7 51       	subi	r27, 0x17	; 23
     b46:	b0 f0       	brcs	.+44     	; 0xb74 <__fixunssfsi+0x3e>
     b48:	e1 f0       	breq	.+56     	; 0xb82 <__fixunssfsi+0x4c>
     b4a:	66 0f       	add	r22, r22
     b4c:	77 1f       	adc	r23, r23
     b4e:	88 1f       	adc	r24, r24
     b50:	99 1f       	adc	r25, r25
     b52:	1a f0       	brmi	.+6      	; 0xb5a <__fixunssfsi+0x24>
     b54:	ba 95       	dec	r27
     b56:	c9 f7       	brne	.-14     	; 0xb4a <__fixunssfsi+0x14>
     b58:	14 c0       	rjmp	.+40     	; 0xb82 <__fixunssfsi+0x4c>
     b5a:	b1 30       	cpi	r27, 0x01	; 1
     b5c:	91 f0       	breq	.+36     	; 0xb82 <__fixunssfsi+0x4c>
     b5e:	0e 94 10 06 	call	0xc20	; 0xc20 <__fp_zero>
     b62:	b1 e0       	ldi	r27, 0x01	; 1
     b64:	08 95       	ret
     b66:	0c 94 10 06 	jmp	0xc20	; 0xc20 <__fp_zero>
     b6a:	67 2f       	mov	r22, r23
     b6c:	78 2f       	mov	r23, r24
     b6e:	88 27       	eor	r24, r24
     b70:	b8 5f       	subi	r27, 0xF8	; 248
     b72:	39 f0       	breq	.+14     	; 0xb82 <__fixunssfsi+0x4c>
     b74:	b9 3f       	cpi	r27, 0xF9	; 249
     b76:	cc f3       	brlt	.-14     	; 0xb6a <__fixunssfsi+0x34>
     b78:	86 95       	lsr	r24
     b7a:	77 95       	ror	r23
     b7c:	67 95       	ror	r22
     b7e:	b3 95       	inc	r27
     b80:	d9 f7       	brne	.-10     	; 0xb78 <__fixunssfsi+0x42>
     b82:	3e f4       	brtc	.+14     	; 0xb92 <__fixunssfsi+0x5c>
     b84:	90 95       	com	r25
     b86:	80 95       	com	r24
     b88:	70 95       	com	r23
     b8a:	61 95       	neg	r22
     b8c:	7f 4f       	sbci	r23, 0xFF	; 255
     b8e:	8f 4f       	sbci	r24, 0xFF	; 255
     b90:	9f 4f       	sbci	r25, 0xFF	; 255
     b92:	08 95       	ret

00000b94 <__fp_cmp>:
     b94:	99 0f       	add	r25, r25
     b96:	00 08       	sbc	r0, r0
     b98:	55 0f       	add	r21, r21
     b9a:	aa 0b       	sbc	r26, r26
     b9c:	e0 e8       	ldi	r30, 0x80	; 128
     b9e:	fe ef       	ldi	r31, 0xFE	; 254
     ba0:	16 16       	cp	r1, r22
     ba2:	17 06       	cpc	r1, r23
     ba4:	e8 07       	cpc	r30, r24
     ba6:	f9 07       	cpc	r31, r25
     ba8:	c0 f0       	brcs	.+48     	; 0xbda <__fp_cmp+0x46>
     baa:	12 16       	cp	r1, r18
     bac:	13 06       	cpc	r1, r19
     bae:	e4 07       	cpc	r30, r20
     bb0:	f5 07       	cpc	r31, r21
     bb2:	98 f0       	brcs	.+38     	; 0xbda <__fp_cmp+0x46>
     bb4:	62 1b       	sub	r22, r18
     bb6:	73 0b       	sbc	r23, r19
     bb8:	84 0b       	sbc	r24, r20
     bba:	95 0b       	sbc	r25, r21
     bbc:	39 f4       	brne	.+14     	; 0xbcc <__fp_cmp+0x38>
     bbe:	0a 26       	eor	r0, r26
     bc0:	61 f0       	breq	.+24     	; 0xbda <__fp_cmp+0x46>
     bc2:	23 2b       	or	r18, r19
     bc4:	24 2b       	or	r18, r20
     bc6:	25 2b       	or	r18, r21
     bc8:	21 f4       	brne	.+8      	; 0xbd2 <__fp_cmp+0x3e>
     bca:	08 95       	ret
     bcc:	0a 26       	eor	r0, r26
     bce:	09 f4       	brne	.+2      	; 0xbd2 <__fp_cmp+0x3e>
     bd0:	a1 40       	sbci	r26, 0x01	; 1
     bd2:	a6 95       	lsr	r26
     bd4:	8f ef       	ldi	r24, 0xFF	; 255
     bd6:	81 1d       	adc	r24, r1
     bd8:	81 1d       	adc	r24, r1
     bda:	08 95       	ret

00000bdc <__fp_split3>:
     bdc:	57 fd       	sbrc	r21, 7
     bde:	90 58       	subi	r25, 0x80	; 128
     be0:	44 0f       	add	r20, r20
     be2:	55 1f       	adc	r21, r21
     be4:	59 f0       	breq	.+22     	; 0xbfc <__fp_splitA+0x10>
     be6:	5f 3f       	cpi	r21, 0xFF	; 255
     be8:	71 f0       	breq	.+28     	; 0xc06 <__fp_splitA+0x1a>
     bea:	47 95       	ror	r20

00000bec <__fp_splitA>:
     bec:	88 0f       	add	r24, r24
     bee:	97 fb       	bst	r25, 7
     bf0:	99 1f       	adc	r25, r25
     bf2:	61 f0       	breq	.+24     	; 0xc0c <__fp_splitA+0x20>
     bf4:	9f 3f       	cpi	r25, 0xFF	; 255
     bf6:	79 f0       	breq	.+30     	; 0xc16 <__fp_splitA+0x2a>
     bf8:	87 95       	ror	r24
     bfa:	08 95       	ret
     bfc:	12 16       	cp	r1, r18
     bfe:	13 06       	cpc	r1, r19
     c00:	14 06       	cpc	r1, r20
     c02:	55 1f       	adc	r21, r21
     c04:	f2 cf       	rjmp	.-28     	; 0xbea <__fp_split3+0xe>
     c06:	46 95       	lsr	r20
     c08:	f1 df       	rcall	.-30     	; 0xbec <__fp_splitA>
     c0a:	08 c0       	rjmp	.+16     	; 0xc1c <__fp_splitA+0x30>
     c0c:	16 16       	cp	r1, r22
     c0e:	17 06       	cpc	r1, r23
     c10:	18 06       	cpc	r1, r24
     c12:	99 1f       	adc	r25, r25
     c14:	f1 cf       	rjmp	.-30     	; 0xbf8 <__fp_splitA+0xc>
     c16:	86 95       	lsr	r24
     c18:	71 05       	cpc	r23, r1
     c1a:	61 05       	cpc	r22, r1
     c1c:	08 94       	sec
     c1e:	08 95       	ret

00000c20 <__fp_zero>:
     c20:	e8 94       	clt

00000c22 <__fp_szero>:
     c22:	bb 27       	eor	r27, r27
     c24:	66 27       	eor	r22, r22
     c26:	77 27       	eor	r23, r23
     c28:	cb 01       	movw	r24, r22
     c2a:	97 f9       	bld	r25, 7
     c2c:	08 95       	ret

00000c2e <__gesf2>:
     c2e:	0e 94 ca 05 	call	0xb94	; 0xb94 <__fp_cmp>
     c32:	08 f4       	brcc	.+2      	; 0xc36 <__gesf2+0x8>
     c34:	8f ef       	ldi	r24, 0xFF	; 255
     c36:	08 95       	ret

00000c38 <__mulsf3>:
     c38:	0e 94 2f 06 	call	0xc5e	; 0xc5e <__mulsf3x>
     c3c:	0c 94 a0 06 	jmp	0xd40	; 0xd40 <__fp_round>
     c40:	0e 94 92 06 	call	0xd24	; 0xd24 <__fp_pscA>
     c44:	38 f0       	brcs	.+14     	; 0xc54 <__mulsf3+0x1c>
     c46:	0e 94 99 06 	call	0xd32	; 0xd32 <__fp_pscB>
     c4a:	20 f0       	brcs	.+8      	; 0xc54 <__mulsf3+0x1c>
     c4c:	95 23       	and	r25, r21
     c4e:	11 f0       	breq	.+4      	; 0xc54 <__mulsf3+0x1c>
     c50:	0c 94 89 06 	jmp	0xd12	; 0xd12 <__fp_inf>
     c54:	0c 94 8f 06 	jmp	0xd1e	; 0xd1e <__fp_nan>
     c58:	11 24       	eor	r1, r1
     c5a:	0c 94 11 06 	jmp	0xc22	; 0xc22 <__fp_szero>

00000c5e <__mulsf3x>:
     c5e:	0e 94 ee 05 	call	0xbdc	; 0xbdc <__fp_split3>
     c62:	70 f3       	brcs	.-36     	; 0xc40 <__mulsf3+0x8>

00000c64 <__mulsf3_pse>:
     c64:	95 9f       	mul	r25, r21
     c66:	c1 f3       	breq	.-16     	; 0xc58 <__mulsf3+0x20>
     c68:	95 0f       	add	r25, r21
     c6a:	50 e0       	ldi	r21, 0x00	; 0
     c6c:	55 1f       	adc	r21, r21
     c6e:	62 9f       	mul	r22, r18
     c70:	f0 01       	movw	r30, r0
     c72:	72 9f       	mul	r23, r18
     c74:	bb 27       	eor	r27, r27
     c76:	f0 0d       	add	r31, r0
     c78:	b1 1d       	adc	r27, r1
     c7a:	63 9f       	mul	r22, r19
     c7c:	aa 27       	eor	r26, r26
     c7e:	f0 0d       	add	r31, r0
     c80:	b1 1d       	adc	r27, r1
     c82:	aa 1f       	adc	r26, r26
     c84:	64 9f       	mul	r22, r20
     c86:	66 27       	eor	r22, r22
     c88:	b0 0d       	add	r27, r0
     c8a:	a1 1d       	adc	r26, r1
     c8c:	66 1f       	adc	r22, r22
     c8e:	82 9f       	mul	r24, r18
     c90:	22 27       	eor	r18, r18
     c92:	b0 0d       	add	r27, r0
     c94:	a1 1d       	adc	r26, r1
     c96:	62 1f       	adc	r22, r18
     c98:	73 9f       	mul	r23, r19
     c9a:	b0 0d       	add	r27, r0
     c9c:	a1 1d       	adc	r26, r1
     c9e:	62 1f       	adc	r22, r18
     ca0:	83 9f       	mul	r24, r19
     ca2:	a0 0d       	add	r26, r0
     ca4:	61 1d       	adc	r22, r1
     ca6:	22 1f       	adc	r18, r18
     ca8:	74 9f       	mul	r23, r20
     caa:	33 27       	eor	r19, r19
     cac:	a0 0d       	add	r26, r0
     cae:	61 1d       	adc	r22, r1
     cb0:	23 1f       	adc	r18, r19
     cb2:	84 9f       	mul	r24, r20
     cb4:	60 0d       	add	r22, r0
     cb6:	21 1d       	adc	r18, r1
     cb8:	82 2f       	mov	r24, r18
     cba:	76 2f       	mov	r23, r22
     cbc:	6a 2f       	mov	r22, r26
     cbe:	11 24       	eor	r1, r1
     cc0:	9f 57       	subi	r25, 0x7F	; 127
     cc2:	50 40       	sbci	r21, 0x00	; 0
     cc4:	9a f0       	brmi	.+38     	; 0xcec <__mulsf3_pse+0x88>
     cc6:	f1 f0       	breq	.+60     	; 0xd04 <__mulsf3_pse+0xa0>
     cc8:	88 23       	and	r24, r24
     cca:	4a f0       	brmi	.+18     	; 0xcde <__mulsf3_pse+0x7a>
     ccc:	ee 0f       	add	r30, r30
     cce:	ff 1f       	adc	r31, r31
     cd0:	bb 1f       	adc	r27, r27
     cd2:	66 1f       	adc	r22, r22
     cd4:	77 1f       	adc	r23, r23
     cd6:	88 1f       	adc	r24, r24
     cd8:	91 50       	subi	r25, 0x01	; 1
     cda:	50 40       	sbci	r21, 0x00	; 0
     cdc:	a9 f7       	brne	.-22     	; 0xcc8 <__mulsf3_pse+0x64>
     cde:	9e 3f       	cpi	r25, 0xFE	; 254
     ce0:	51 05       	cpc	r21, r1
     ce2:	80 f0       	brcs	.+32     	; 0xd04 <__mulsf3_pse+0xa0>
     ce4:	0c 94 89 06 	jmp	0xd12	; 0xd12 <__fp_inf>
     ce8:	0c 94 11 06 	jmp	0xc22	; 0xc22 <__fp_szero>
     cec:	5f 3f       	cpi	r21, 0xFF	; 255
     cee:	e4 f3       	brlt	.-8      	; 0xce8 <__mulsf3_pse+0x84>
     cf0:	98 3e       	cpi	r25, 0xE8	; 232
     cf2:	d4 f3       	brlt	.-12     	; 0xce8 <__mulsf3_pse+0x84>
     cf4:	86 95       	lsr	r24
     cf6:	77 95       	ror	r23
     cf8:	67 95       	ror	r22
     cfa:	b7 95       	ror	r27
     cfc:	f7 95       	ror	r31
     cfe:	e7 95       	ror	r30
     d00:	9f 5f       	subi	r25, 0xFF	; 255
     d02:	c1 f7       	brne	.-16     	; 0xcf4 <__mulsf3_pse+0x90>
     d04:	fe 2b       	or	r31, r30
     d06:	88 0f       	add	r24, r24
     d08:	91 1d       	adc	r25, r1
     d0a:	96 95       	lsr	r25
     d0c:	87 95       	ror	r24
     d0e:	97 f9       	bld	r25, 7
     d10:	08 95       	ret

00000d12 <__fp_inf>:
     d12:	97 f9       	bld	r25, 7
     d14:	9f 67       	ori	r25, 0x7F	; 127
     d16:	80 e8       	ldi	r24, 0x80	; 128
     d18:	70 e0       	ldi	r23, 0x00	; 0
     d1a:	60 e0       	ldi	r22, 0x00	; 0
     d1c:	08 95       	ret

00000d1e <__fp_nan>:
     d1e:	9f ef       	ldi	r25, 0xFF	; 255
     d20:	80 ec       	ldi	r24, 0xC0	; 192
     d22:	08 95       	ret

00000d24 <__fp_pscA>:
     d24:	00 24       	eor	r0, r0
     d26:	0a 94       	dec	r0
     d28:	16 16       	cp	r1, r22
     d2a:	17 06       	cpc	r1, r23
     d2c:	18 06       	cpc	r1, r24
     d2e:	09 06       	cpc	r0, r25
     d30:	08 95       	ret

00000d32 <__fp_pscB>:
     d32:	00 24       	eor	r0, r0
     d34:	0a 94       	dec	r0
     d36:	12 16       	cp	r1, r18
     d38:	13 06       	cpc	r1, r19
     d3a:	14 06       	cpc	r1, r20
     d3c:	05 06       	cpc	r0, r21
     d3e:	08 95       	ret

00000d40 <__fp_round>:
     d40:	09 2e       	mov	r0, r25
     d42:	03 94       	inc	r0
     d44:	00 0c       	add	r0, r0
     d46:	11 f4       	brne	.+4      	; 0xd4c <__fp_round+0xc>
     d48:	88 23       	and	r24, r24
     d4a:	52 f0       	brmi	.+20     	; 0xd60 <__fp_round+0x20>
     d4c:	bb 0f       	add	r27, r27
     d4e:	40 f4       	brcc	.+16     	; 0xd60 <__fp_round+0x20>
     d50:	bf 2b       	or	r27, r31
     d52:	11 f4       	brne	.+4      	; 0xd58 <__fp_round+0x18>
     d54:	60 ff       	sbrs	r22, 0
     d56:	04 c0       	rjmp	.+8      	; 0xd60 <__fp_round+0x20>
     d58:	6f 5f       	subi	r22, 0xFF	; 255
     d5a:	7f 4f       	sbci	r23, 0xFF	; 255
     d5c:	8f 4f       	sbci	r24, 0xFF	; 255
     d5e:	9f 4f       	sbci	r25, 0xFF	; 255
     d60:	08 95       	ret

00000d62 <fprintf>:
     d62:	cf 93       	push	r28
     d64:	df 93       	push	r29
     d66:	cd b7       	in	r28, 0x3d	; 61
     d68:	de b7       	in	r29, 0x3e	; 62
     d6a:	ae 01       	movw	r20, r28
     d6c:	47 5f       	subi	r20, 0xF7	; 247
     d6e:	5f 4f       	sbci	r21, 0xFF	; 255
     d70:	6f 81       	ldd	r22, Y+7	; 0x07
     d72:	78 85       	ldd	r23, Y+8	; 0x08
     d74:	8d 81       	ldd	r24, Y+5	; 0x05
     d76:	9e 81       	ldd	r25, Y+6	; 0x06
     d78:	0e 94 03 07 	call	0xe06	; 0xe06 <vfprintf>
     d7c:	df 91       	pop	r29
     d7e:	cf 91       	pop	r28
     d80:	08 95       	ret

00000d82 <fwrite>:
     d82:	8f 92       	push	r8
     d84:	9f 92       	push	r9
     d86:	af 92       	push	r10
     d88:	bf 92       	push	r11
     d8a:	cf 92       	push	r12
     d8c:	df 92       	push	r13
     d8e:	ef 92       	push	r14
     d90:	ff 92       	push	r15
     d92:	0f 93       	push	r16
     d94:	1f 93       	push	r17
     d96:	cf 93       	push	r28
     d98:	df 93       	push	r29
     d9a:	5b 01       	movw	r10, r22
     d9c:	4a 01       	movw	r8, r20
     d9e:	79 01       	movw	r14, r18
     da0:	d9 01       	movw	r26, r18
     da2:	13 96       	adiw	r26, 0x03	; 3
     da4:	2c 91       	ld	r18, X
     da6:	21 ff       	sbrs	r18, 1
     da8:	1d c0       	rjmp	.+58     	; 0xde4 <fwrite+0x62>
     daa:	c0 e0       	ldi	r28, 0x00	; 0
     dac:	d0 e0       	ldi	r29, 0x00	; 0
     dae:	c8 15       	cp	r28, r8
     db0:	d9 05       	cpc	r29, r9
     db2:	d9 f0       	breq	.+54     	; 0xdea <fwrite+0x68>
     db4:	8c 01       	movw	r16, r24
     db6:	6c 01       	movw	r12, r24
     db8:	ca 0c       	add	r12, r10
     dba:	db 1c       	adc	r13, r11
     dbc:	c8 01       	movw	r24, r16
     dbe:	0c 15       	cp	r16, r12
     dc0:	1d 05       	cpc	r17, r13
     dc2:	71 f0       	breq	.+28     	; 0xde0 <fwrite+0x5e>
     dc4:	0f 5f       	subi	r16, 0xFF	; 255
     dc6:	1f 4f       	sbci	r17, 0xFF	; 255
     dc8:	d7 01       	movw	r26, r14
     dca:	18 96       	adiw	r26, 0x08	; 8
     dcc:	ed 91       	ld	r30, X+
     dce:	fc 91       	ld	r31, X
     dd0:	19 97       	sbiw	r26, 0x09	; 9
     dd2:	b7 01       	movw	r22, r14
     dd4:	dc 01       	movw	r26, r24
     dd6:	8c 91       	ld	r24, X
     dd8:	09 95       	icall
     dda:	89 2b       	or	r24, r25
     ddc:	79 f3       	breq	.-34     	; 0xdbc <fwrite+0x3a>
     dde:	05 c0       	rjmp	.+10     	; 0xdea <fwrite+0x68>
     de0:	21 96       	adiw	r28, 0x01	; 1
     de2:	e5 cf       	rjmp	.-54     	; 0xdae <fwrite+0x2c>
     de4:	80 e0       	ldi	r24, 0x00	; 0
     de6:	90 e0       	ldi	r25, 0x00	; 0
     de8:	01 c0       	rjmp	.+2      	; 0xdec <fwrite+0x6a>
     dea:	ce 01       	movw	r24, r28
     dec:	df 91       	pop	r29
     dee:	cf 91       	pop	r28
     df0:	1f 91       	pop	r17
     df2:	0f 91       	pop	r16
     df4:	ff 90       	pop	r15
     df6:	ef 90       	pop	r14
     df8:	df 90       	pop	r13
     dfa:	cf 90       	pop	r12
     dfc:	bf 90       	pop	r11
     dfe:	af 90       	pop	r10
     e00:	9f 90       	pop	r9
     e02:	8f 90       	pop	r8
     e04:	08 95       	ret

00000e06 <vfprintf>:
     e06:	2f 92       	push	r2
     e08:	3f 92       	push	r3
     e0a:	4f 92       	push	r4
     e0c:	5f 92       	push	r5
     e0e:	6f 92       	push	r6
     e10:	7f 92       	push	r7
     e12:	8f 92       	push	r8
     e14:	9f 92       	push	r9
     e16:	af 92       	push	r10
     e18:	bf 92       	push	r11
     e1a:	cf 92       	push	r12
     e1c:	df 92       	push	r13
     e1e:	ef 92       	push	r14
     e20:	ff 92       	push	r15
     e22:	0f 93       	push	r16
     e24:	1f 93       	push	r17
     e26:	cf 93       	push	r28
     e28:	df 93       	push	r29
     e2a:	cd b7       	in	r28, 0x3d	; 61
     e2c:	de b7       	in	r29, 0x3e	; 62
     e2e:	2c 97       	sbiw	r28, 0x0c	; 12
     e30:	0f b6       	in	r0, 0x3f	; 63
     e32:	f8 94       	cli
     e34:	de bf       	out	0x3e, r29	; 62
     e36:	0f be       	out	0x3f, r0	; 63
     e38:	cd bf       	out	0x3d, r28	; 61
     e3a:	7c 01       	movw	r14, r24
     e3c:	6b 01       	movw	r12, r22
     e3e:	8a 01       	movw	r16, r20
     e40:	fc 01       	movw	r30, r24
     e42:	17 82       	std	Z+7, r1	; 0x07
     e44:	16 82       	std	Z+6, r1	; 0x06
     e46:	83 81       	ldd	r24, Z+3	; 0x03
     e48:	81 ff       	sbrs	r24, 1
     e4a:	bd c1       	rjmp	.+890    	; 0x11c6 <vfprintf+0x3c0>
     e4c:	ce 01       	movw	r24, r28
     e4e:	01 96       	adiw	r24, 0x01	; 1
     e50:	4c 01       	movw	r8, r24
     e52:	f7 01       	movw	r30, r14
     e54:	93 81       	ldd	r25, Z+3	; 0x03
     e56:	f6 01       	movw	r30, r12
     e58:	93 fd       	sbrc	r25, 3
     e5a:	85 91       	lpm	r24, Z+
     e5c:	93 ff       	sbrs	r25, 3
     e5e:	81 91       	ld	r24, Z+
     e60:	6f 01       	movw	r12, r30
     e62:	88 23       	and	r24, r24
     e64:	09 f4       	brne	.+2      	; 0xe68 <vfprintf+0x62>
     e66:	ab c1       	rjmp	.+854    	; 0x11be <vfprintf+0x3b8>
     e68:	85 32       	cpi	r24, 0x25	; 37
     e6a:	39 f4       	brne	.+14     	; 0xe7a <vfprintf+0x74>
     e6c:	93 fd       	sbrc	r25, 3
     e6e:	85 91       	lpm	r24, Z+
     e70:	93 ff       	sbrs	r25, 3
     e72:	81 91       	ld	r24, Z+
     e74:	6f 01       	movw	r12, r30
     e76:	85 32       	cpi	r24, 0x25	; 37
     e78:	29 f4       	brne	.+10     	; 0xe84 <vfprintf+0x7e>
     e7a:	b7 01       	movw	r22, r14
     e7c:	90 e0       	ldi	r25, 0x00	; 0
     e7e:	0e 94 14 09 	call	0x1228	; 0x1228 <fputc>
     e82:	e7 cf       	rjmp	.-50     	; 0xe52 <vfprintf+0x4c>
     e84:	51 2c       	mov	r5, r1
     e86:	31 2c       	mov	r3, r1
     e88:	20 e0       	ldi	r18, 0x00	; 0
     e8a:	20 32       	cpi	r18, 0x20	; 32
     e8c:	a0 f4       	brcc	.+40     	; 0xeb6 <vfprintf+0xb0>
     e8e:	8b 32       	cpi	r24, 0x2B	; 43
     e90:	69 f0       	breq	.+26     	; 0xeac <vfprintf+0xa6>
     e92:	30 f4       	brcc	.+12     	; 0xea0 <vfprintf+0x9a>
     e94:	80 32       	cpi	r24, 0x20	; 32
     e96:	59 f0       	breq	.+22     	; 0xeae <vfprintf+0xa8>
     e98:	83 32       	cpi	r24, 0x23	; 35
     e9a:	69 f4       	brne	.+26     	; 0xeb6 <vfprintf+0xb0>
     e9c:	20 61       	ori	r18, 0x10	; 16
     e9e:	2c c0       	rjmp	.+88     	; 0xef8 <vfprintf+0xf2>
     ea0:	8d 32       	cpi	r24, 0x2D	; 45
     ea2:	39 f0       	breq	.+14     	; 0xeb2 <vfprintf+0xac>
     ea4:	80 33       	cpi	r24, 0x30	; 48
     ea6:	39 f4       	brne	.+14     	; 0xeb6 <vfprintf+0xb0>
     ea8:	21 60       	ori	r18, 0x01	; 1
     eaa:	26 c0       	rjmp	.+76     	; 0xef8 <vfprintf+0xf2>
     eac:	22 60       	ori	r18, 0x02	; 2
     eae:	24 60       	ori	r18, 0x04	; 4
     eb0:	23 c0       	rjmp	.+70     	; 0xef8 <vfprintf+0xf2>
     eb2:	28 60       	ori	r18, 0x08	; 8
     eb4:	21 c0       	rjmp	.+66     	; 0xef8 <vfprintf+0xf2>
     eb6:	27 fd       	sbrc	r18, 7
     eb8:	27 c0       	rjmp	.+78     	; 0xf08 <vfprintf+0x102>
     eba:	30 ed       	ldi	r19, 0xD0	; 208
     ebc:	38 0f       	add	r19, r24
     ebe:	3a 30       	cpi	r19, 0x0A	; 10
     ec0:	78 f4       	brcc	.+30     	; 0xee0 <vfprintf+0xda>
     ec2:	26 ff       	sbrs	r18, 6
     ec4:	06 c0       	rjmp	.+12     	; 0xed2 <vfprintf+0xcc>
     ec6:	fa e0       	ldi	r31, 0x0A	; 10
     ec8:	5f 9e       	mul	r5, r31
     eca:	30 0d       	add	r19, r0
     ecc:	11 24       	eor	r1, r1
     ece:	53 2e       	mov	r5, r19
     ed0:	13 c0       	rjmp	.+38     	; 0xef8 <vfprintf+0xf2>
     ed2:	8a e0       	ldi	r24, 0x0A	; 10
     ed4:	38 9e       	mul	r3, r24
     ed6:	30 0d       	add	r19, r0
     ed8:	11 24       	eor	r1, r1
     eda:	33 2e       	mov	r3, r19
     edc:	20 62       	ori	r18, 0x20	; 32
     ede:	0c c0       	rjmp	.+24     	; 0xef8 <vfprintf+0xf2>
     ee0:	8e 32       	cpi	r24, 0x2E	; 46
     ee2:	21 f4       	brne	.+8      	; 0xeec <vfprintf+0xe6>
     ee4:	26 fd       	sbrc	r18, 6
     ee6:	6b c1       	rjmp	.+726    	; 0x11be <vfprintf+0x3b8>
     ee8:	20 64       	ori	r18, 0x40	; 64
     eea:	06 c0       	rjmp	.+12     	; 0xef8 <vfprintf+0xf2>
     eec:	8c 36       	cpi	r24, 0x6C	; 108
     eee:	11 f4       	brne	.+4      	; 0xef4 <vfprintf+0xee>
     ef0:	20 68       	ori	r18, 0x80	; 128
     ef2:	02 c0       	rjmp	.+4      	; 0xef8 <vfprintf+0xf2>
     ef4:	88 36       	cpi	r24, 0x68	; 104
     ef6:	41 f4       	brne	.+16     	; 0xf08 <vfprintf+0x102>
     ef8:	f6 01       	movw	r30, r12
     efa:	93 fd       	sbrc	r25, 3
     efc:	85 91       	lpm	r24, Z+
     efe:	93 ff       	sbrs	r25, 3
     f00:	81 91       	ld	r24, Z+
     f02:	6f 01       	movw	r12, r30
     f04:	81 11       	cpse	r24, r1
     f06:	c1 cf       	rjmp	.-126    	; 0xe8a <vfprintf+0x84>
     f08:	98 2f       	mov	r25, r24
     f0a:	9f 7d       	andi	r25, 0xDF	; 223
     f0c:	95 54       	subi	r25, 0x45	; 69
     f0e:	93 30       	cpi	r25, 0x03	; 3
     f10:	28 f4       	brcc	.+10     	; 0xf1c <vfprintf+0x116>
     f12:	0c 5f       	subi	r16, 0xFC	; 252
     f14:	1f 4f       	sbci	r17, 0xFF	; 255
     f16:	ff e3       	ldi	r31, 0x3F	; 63
     f18:	f9 83       	std	Y+1, r31	; 0x01
     f1a:	0d c0       	rjmp	.+26     	; 0xf36 <vfprintf+0x130>
     f1c:	83 36       	cpi	r24, 0x63	; 99
     f1e:	31 f0       	breq	.+12     	; 0xf2c <vfprintf+0x126>
     f20:	83 37       	cpi	r24, 0x73	; 115
     f22:	71 f0       	breq	.+28     	; 0xf40 <vfprintf+0x13a>
     f24:	83 35       	cpi	r24, 0x53	; 83
     f26:	09 f0       	breq	.+2      	; 0xf2a <vfprintf+0x124>
     f28:	5b c0       	rjmp	.+182    	; 0xfe0 <vfprintf+0x1da>
     f2a:	22 c0       	rjmp	.+68     	; 0xf70 <vfprintf+0x16a>
     f2c:	f8 01       	movw	r30, r16
     f2e:	80 81       	ld	r24, Z
     f30:	89 83       	std	Y+1, r24	; 0x01
     f32:	0e 5f       	subi	r16, 0xFE	; 254
     f34:	1f 4f       	sbci	r17, 0xFF	; 255
     f36:	44 24       	eor	r4, r4
     f38:	43 94       	inc	r4
     f3a:	51 2c       	mov	r5, r1
     f3c:	54 01       	movw	r10, r8
     f3e:	15 c0       	rjmp	.+42     	; 0xf6a <vfprintf+0x164>
     f40:	38 01       	movw	r6, r16
     f42:	f2 e0       	ldi	r31, 0x02	; 2
     f44:	6f 0e       	add	r6, r31
     f46:	71 1c       	adc	r7, r1
     f48:	f8 01       	movw	r30, r16
     f4a:	a0 80       	ld	r10, Z
     f4c:	b1 80       	ldd	r11, Z+1	; 0x01
     f4e:	26 ff       	sbrs	r18, 6
     f50:	03 c0       	rjmp	.+6      	; 0xf58 <vfprintf+0x152>
     f52:	65 2d       	mov	r22, r5
     f54:	70 e0       	ldi	r23, 0x00	; 0
     f56:	02 c0       	rjmp	.+4      	; 0xf5c <vfprintf+0x156>
     f58:	6f ef       	ldi	r22, 0xFF	; 255
     f5a:	7f ef       	ldi	r23, 0xFF	; 255
     f5c:	c5 01       	movw	r24, r10
     f5e:	2c 87       	std	Y+12, r18	; 0x0c
     f60:	0e 94 09 09 	call	0x1212	; 0x1212 <strnlen>
     f64:	2c 01       	movw	r4, r24
     f66:	83 01       	movw	r16, r6
     f68:	2c 85       	ldd	r18, Y+12	; 0x0c
     f6a:	2f 77       	andi	r18, 0x7F	; 127
     f6c:	22 2e       	mov	r2, r18
     f6e:	17 c0       	rjmp	.+46     	; 0xf9e <vfprintf+0x198>
     f70:	38 01       	movw	r6, r16
     f72:	f2 e0       	ldi	r31, 0x02	; 2
     f74:	6f 0e       	add	r6, r31
     f76:	71 1c       	adc	r7, r1
     f78:	f8 01       	movw	r30, r16
     f7a:	a0 80       	ld	r10, Z
     f7c:	b1 80       	ldd	r11, Z+1	; 0x01
     f7e:	26 ff       	sbrs	r18, 6
     f80:	03 c0       	rjmp	.+6      	; 0xf88 <vfprintf+0x182>
     f82:	65 2d       	mov	r22, r5
     f84:	70 e0       	ldi	r23, 0x00	; 0
     f86:	02 c0       	rjmp	.+4      	; 0xf8c <vfprintf+0x186>
     f88:	6f ef       	ldi	r22, 0xFF	; 255
     f8a:	7f ef       	ldi	r23, 0xFF	; 255
     f8c:	c5 01       	movw	r24, r10
     f8e:	2c 87       	std	Y+12, r18	; 0x0c
     f90:	0e 94 fe 08 	call	0x11fc	; 0x11fc <strnlen_P>
     f94:	2c 01       	movw	r4, r24
     f96:	2c 85       	ldd	r18, Y+12	; 0x0c
     f98:	20 68       	ori	r18, 0x80	; 128
     f9a:	22 2e       	mov	r2, r18
     f9c:	83 01       	movw	r16, r6
     f9e:	23 fc       	sbrc	r2, 3
     fa0:	1b c0       	rjmp	.+54     	; 0xfd8 <vfprintf+0x1d2>
     fa2:	83 2d       	mov	r24, r3
     fa4:	90 e0       	ldi	r25, 0x00	; 0
     fa6:	48 16       	cp	r4, r24
     fa8:	59 06       	cpc	r5, r25
     faa:	b0 f4       	brcc	.+44     	; 0xfd8 <vfprintf+0x1d2>
     fac:	b7 01       	movw	r22, r14
     fae:	80 e2       	ldi	r24, 0x20	; 32
     fb0:	90 e0       	ldi	r25, 0x00	; 0
     fb2:	0e 94 14 09 	call	0x1228	; 0x1228 <fputc>
     fb6:	3a 94       	dec	r3
     fb8:	f4 cf       	rjmp	.-24     	; 0xfa2 <vfprintf+0x19c>
     fba:	f5 01       	movw	r30, r10
     fbc:	27 fc       	sbrc	r2, 7
     fbe:	85 91       	lpm	r24, Z+
     fc0:	27 fe       	sbrs	r2, 7
     fc2:	81 91       	ld	r24, Z+
     fc4:	5f 01       	movw	r10, r30
     fc6:	b7 01       	movw	r22, r14
     fc8:	90 e0       	ldi	r25, 0x00	; 0
     fca:	0e 94 14 09 	call	0x1228	; 0x1228 <fputc>
     fce:	31 10       	cpse	r3, r1
     fd0:	3a 94       	dec	r3
     fd2:	f1 e0       	ldi	r31, 0x01	; 1
     fd4:	4f 1a       	sub	r4, r31
     fd6:	51 08       	sbc	r5, r1
     fd8:	41 14       	cp	r4, r1
     fda:	51 04       	cpc	r5, r1
     fdc:	71 f7       	brne	.-36     	; 0xfba <vfprintf+0x1b4>
     fde:	e5 c0       	rjmp	.+458    	; 0x11aa <vfprintf+0x3a4>
     fe0:	84 36       	cpi	r24, 0x64	; 100
     fe2:	11 f0       	breq	.+4      	; 0xfe8 <vfprintf+0x1e2>
     fe4:	89 36       	cpi	r24, 0x69	; 105
     fe6:	39 f5       	brne	.+78     	; 0x1036 <vfprintf+0x230>
     fe8:	f8 01       	movw	r30, r16
     fea:	27 ff       	sbrs	r18, 7
     fec:	07 c0       	rjmp	.+14     	; 0xffc <vfprintf+0x1f6>
     fee:	60 81       	ld	r22, Z
     ff0:	71 81       	ldd	r23, Z+1	; 0x01
     ff2:	82 81       	ldd	r24, Z+2	; 0x02
     ff4:	93 81       	ldd	r25, Z+3	; 0x03
     ff6:	0c 5f       	subi	r16, 0xFC	; 252
     ff8:	1f 4f       	sbci	r17, 0xFF	; 255
     ffa:	08 c0       	rjmp	.+16     	; 0x100c <vfprintf+0x206>
     ffc:	60 81       	ld	r22, Z
     ffe:	71 81       	ldd	r23, Z+1	; 0x01
    1000:	07 2e       	mov	r0, r23
    1002:	00 0c       	add	r0, r0
    1004:	88 0b       	sbc	r24, r24
    1006:	99 0b       	sbc	r25, r25
    1008:	0e 5f       	subi	r16, 0xFE	; 254
    100a:	1f 4f       	sbci	r17, 0xFF	; 255
    100c:	2f 76       	andi	r18, 0x6F	; 111
    100e:	72 2e       	mov	r7, r18
    1010:	97 ff       	sbrs	r25, 7
    1012:	09 c0       	rjmp	.+18     	; 0x1026 <vfprintf+0x220>
    1014:	90 95       	com	r25
    1016:	80 95       	com	r24
    1018:	70 95       	com	r23
    101a:	61 95       	neg	r22
    101c:	7f 4f       	sbci	r23, 0xFF	; 255
    101e:	8f 4f       	sbci	r24, 0xFF	; 255
    1020:	9f 4f       	sbci	r25, 0xFF	; 255
    1022:	20 68       	ori	r18, 0x80	; 128
    1024:	72 2e       	mov	r7, r18
    1026:	2a e0       	ldi	r18, 0x0A	; 10
    1028:	30 e0       	ldi	r19, 0x00	; 0
    102a:	a4 01       	movw	r20, r8
    102c:	0e 94 4c 09 	call	0x1298	; 0x1298 <__ultoa_invert>
    1030:	a8 2e       	mov	r10, r24
    1032:	a8 18       	sub	r10, r8
    1034:	44 c0       	rjmp	.+136    	; 0x10be <vfprintf+0x2b8>
    1036:	85 37       	cpi	r24, 0x75	; 117
    1038:	29 f4       	brne	.+10     	; 0x1044 <vfprintf+0x23e>
    103a:	2f 7e       	andi	r18, 0xEF	; 239
    103c:	b2 2e       	mov	r11, r18
    103e:	2a e0       	ldi	r18, 0x0A	; 10
    1040:	30 e0       	ldi	r19, 0x00	; 0
    1042:	25 c0       	rjmp	.+74     	; 0x108e <vfprintf+0x288>
    1044:	f2 2f       	mov	r31, r18
    1046:	f9 7f       	andi	r31, 0xF9	; 249
    1048:	bf 2e       	mov	r11, r31
    104a:	8f 36       	cpi	r24, 0x6F	; 111
    104c:	c1 f0       	breq	.+48     	; 0x107e <vfprintf+0x278>
    104e:	18 f4       	brcc	.+6      	; 0x1056 <vfprintf+0x250>
    1050:	88 35       	cpi	r24, 0x58	; 88
    1052:	79 f0       	breq	.+30     	; 0x1072 <vfprintf+0x26c>
    1054:	b4 c0       	rjmp	.+360    	; 0x11be <vfprintf+0x3b8>
    1056:	80 37       	cpi	r24, 0x70	; 112
    1058:	19 f0       	breq	.+6      	; 0x1060 <vfprintf+0x25a>
    105a:	88 37       	cpi	r24, 0x78	; 120
    105c:	21 f0       	breq	.+8      	; 0x1066 <vfprintf+0x260>
    105e:	af c0       	rjmp	.+350    	; 0x11be <vfprintf+0x3b8>
    1060:	2f 2f       	mov	r18, r31
    1062:	20 61       	ori	r18, 0x10	; 16
    1064:	b2 2e       	mov	r11, r18
    1066:	b4 fe       	sbrs	r11, 4
    1068:	0d c0       	rjmp	.+26     	; 0x1084 <vfprintf+0x27e>
    106a:	8b 2d       	mov	r24, r11
    106c:	84 60       	ori	r24, 0x04	; 4
    106e:	b8 2e       	mov	r11, r24
    1070:	09 c0       	rjmp	.+18     	; 0x1084 <vfprintf+0x27e>
    1072:	24 ff       	sbrs	r18, 4
    1074:	0a c0       	rjmp	.+20     	; 0x108a <vfprintf+0x284>
    1076:	9f 2f       	mov	r25, r31
    1078:	96 60       	ori	r25, 0x06	; 6
    107a:	b9 2e       	mov	r11, r25
    107c:	06 c0       	rjmp	.+12     	; 0x108a <vfprintf+0x284>
    107e:	28 e0       	ldi	r18, 0x08	; 8
    1080:	30 e0       	ldi	r19, 0x00	; 0
    1082:	05 c0       	rjmp	.+10     	; 0x108e <vfprintf+0x288>
    1084:	20 e1       	ldi	r18, 0x10	; 16
    1086:	30 e0       	ldi	r19, 0x00	; 0
    1088:	02 c0       	rjmp	.+4      	; 0x108e <vfprintf+0x288>
    108a:	20 e1       	ldi	r18, 0x10	; 16
    108c:	32 e0       	ldi	r19, 0x02	; 2
    108e:	f8 01       	movw	r30, r16
    1090:	b7 fe       	sbrs	r11, 7
    1092:	07 c0       	rjmp	.+14     	; 0x10a2 <vfprintf+0x29c>
    1094:	60 81       	ld	r22, Z
    1096:	71 81       	ldd	r23, Z+1	; 0x01
    1098:	82 81       	ldd	r24, Z+2	; 0x02
    109a:	93 81       	ldd	r25, Z+3	; 0x03
    109c:	0c 5f       	subi	r16, 0xFC	; 252
    109e:	1f 4f       	sbci	r17, 0xFF	; 255
    10a0:	06 c0       	rjmp	.+12     	; 0x10ae <vfprintf+0x2a8>
    10a2:	60 81       	ld	r22, Z
    10a4:	71 81       	ldd	r23, Z+1	; 0x01
    10a6:	80 e0       	ldi	r24, 0x00	; 0
    10a8:	90 e0       	ldi	r25, 0x00	; 0
    10aa:	0e 5f       	subi	r16, 0xFE	; 254
    10ac:	1f 4f       	sbci	r17, 0xFF	; 255
    10ae:	a4 01       	movw	r20, r8
    10b0:	0e 94 4c 09 	call	0x1298	; 0x1298 <__ultoa_invert>
    10b4:	a8 2e       	mov	r10, r24
    10b6:	a8 18       	sub	r10, r8
    10b8:	fb 2d       	mov	r31, r11
    10ba:	ff 77       	andi	r31, 0x7F	; 127
    10bc:	7f 2e       	mov	r7, r31
    10be:	76 fe       	sbrs	r7, 6
    10c0:	0b c0       	rjmp	.+22     	; 0x10d8 <vfprintf+0x2d2>
    10c2:	37 2d       	mov	r19, r7
    10c4:	3e 7f       	andi	r19, 0xFE	; 254
    10c6:	a5 14       	cp	r10, r5
    10c8:	50 f4       	brcc	.+20     	; 0x10de <vfprintf+0x2d8>
    10ca:	74 fe       	sbrs	r7, 4
    10cc:	0a c0       	rjmp	.+20     	; 0x10e2 <vfprintf+0x2dc>
    10ce:	72 fc       	sbrc	r7, 2
    10d0:	08 c0       	rjmp	.+16     	; 0x10e2 <vfprintf+0x2dc>
    10d2:	37 2d       	mov	r19, r7
    10d4:	3e 7e       	andi	r19, 0xEE	; 238
    10d6:	05 c0       	rjmp	.+10     	; 0x10e2 <vfprintf+0x2dc>
    10d8:	ba 2c       	mov	r11, r10
    10da:	37 2d       	mov	r19, r7
    10dc:	03 c0       	rjmp	.+6      	; 0x10e4 <vfprintf+0x2de>
    10de:	ba 2c       	mov	r11, r10
    10e0:	01 c0       	rjmp	.+2      	; 0x10e4 <vfprintf+0x2de>
    10e2:	b5 2c       	mov	r11, r5
    10e4:	34 ff       	sbrs	r19, 4
    10e6:	0d c0       	rjmp	.+26     	; 0x1102 <vfprintf+0x2fc>
    10e8:	fe 01       	movw	r30, r28
    10ea:	ea 0d       	add	r30, r10
    10ec:	f1 1d       	adc	r31, r1
    10ee:	80 81       	ld	r24, Z
    10f0:	80 33       	cpi	r24, 0x30	; 48
    10f2:	11 f4       	brne	.+4      	; 0x10f8 <vfprintf+0x2f2>
    10f4:	39 7e       	andi	r19, 0xE9	; 233
    10f6:	09 c0       	rjmp	.+18     	; 0x110a <vfprintf+0x304>
    10f8:	32 ff       	sbrs	r19, 2
    10fa:	06 c0       	rjmp	.+12     	; 0x1108 <vfprintf+0x302>
    10fc:	b3 94       	inc	r11
    10fe:	b3 94       	inc	r11
    1100:	04 c0       	rjmp	.+8      	; 0x110a <vfprintf+0x304>
    1102:	83 2f       	mov	r24, r19
    1104:	86 78       	andi	r24, 0x86	; 134
    1106:	09 f0       	breq	.+2      	; 0x110a <vfprintf+0x304>
    1108:	b3 94       	inc	r11
    110a:	33 fd       	sbrc	r19, 3
    110c:	13 c0       	rjmp	.+38     	; 0x1134 <vfprintf+0x32e>
    110e:	30 ff       	sbrs	r19, 0
    1110:	06 c0       	rjmp	.+12     	; 0x111e <vfprintf+0x318>
    1112:	5a 2c       	mov	r5, r10
    1114:	b3 14       	cp	r11, r3
    1116:	18 f4       	brcc	.+6      	; 0x111e <vfprintf+0x318>
    1118:	53 0c       	add	r5, r3
    111a:	5b 18       	sub	r5, r11
    111c:	b3 2c       	mov	r11, r3
    111e:	b3 14       	cp	r11, r3
    1120:	68 f4       	brcc	.+26     	; 0x113c <vfprintf+0x336>
    1122:	b7 01       	movw	r22, r14
    1124:	80 e2       	ldi	r24, 0x20	; 32
    1126:	90 e0       	ldi	r25, 0x00	; 0
    1128:	3c 87       	std	Y+12, r19	; 0x0c
    112a:	0e 94 14 09 	call	0x1228	; 0x1228 <fputc>
    112e:	b3 94       	inc	r11
    1130:	3c 85       	ldd	r19, Y+12	; 0x0c
    1132:	f5 cf       	rjmp	.-22     	; 0x111e <vfprintf+0x318>
    1134:	b3 14       	cp	r11, r3
    1136:	10 f4       	brcc	.+4      	; 0x113c <vfprintf+0x336>
    1138:	3b 18       	sub	r3, r11
    113a:	01 c0       	rjmp	.+2      	; 0x113e <vfprintf+0x338>
    113c:	31 2c       	mov	r3, r1
    113e:	34 ff       	sbrs	r19, 4
    1140:	12 c0       	rjmp	.+36     	; 0x1166 <vfprintf+0x360>
    1142:	b7 01       	movw	r22, r14
    1144:	80 e3       	ldi	r24, 0x30	; 48
    1146:	90 e0       	ldi	r25, 0x00	; 0
    1148:	3c 87       	std	Y+12, r19	; 0x0c
    114a:	0e 94 14 09 	call	0x1228	; 0x1228 <fputc>
    114e:	3c 85       	ldd	r19, Y+12	; 0x0c
    1150:	32 ff       	sbrs	r19, 2
    1152:	17 c0       	rjmp	.+46     	; 0x1182 <vfprintf+0x37c>
    1154:	31 fd       	sbrc	r19, 1
    1156:	03 c0       	rjmp	.+6      	; 0x115e <vfprintf+0x358>
    1158:	88 e7       	ldi	r24, 0x78	; 120
    115a:	90 e0       	ldi	r25, 0x00	; 0
    115c:	02 c0       	rjmp	.+4      	; 0x1162 <vfprintf+0x35c>
    115e:	88 e5       	ldi	r24, 0x58	; 88
    1160:	90 e0       	ldi	r25, 0x00	; 0
    1162:	b7 01       	movw	r22, r14
    1164:	0c c0       	rjmp	.+24     	; 0x117e <vfprintf+0x378>
    1166:	83 2f       	mov	r24, r19
    1168:	86 78       	andi	r24, 0x86	; 134
    116a:	59 f0       	breq	.+22     	; 0x1182 <vfprintf+0x37c>
    116c:	31 ff       	sbrs	r19, 1
    116e:	02 c0       	rjmp	.+4      	; 0x1174 <vfprintf+0x36e>
    1170:	8b e2       	ldi	r24, 0x2B	; 43
    1172:	01 c0       	rjmp	.+2      	; 0x1176 <vfprintf+0x370>
    1174:	80 e2       	ldi	r24, 0x20	; 32
    1176:	37 fd       	sbrc	r19, 7
    1178:	8d e2       	ldi	r24, 0x2D	; 45
    117a:	b7 01       	movw	r22, r14
    117c:	90 e0       	ldi	r25, 0x00	; 0
    117e:	0e 94 14 09 	call	0x1228	; 0x1228 <fputc>
    1182:	a5 14       	cp	r10, r5
    1184:	38 f4       	brcc	.+14     	; 0x1194 <vfprintf+0x38e>
    1186:	b7 01       	movw	r22, r14
    1188:	80 e3       	ldi	r24, 0x30	; 48
    118a:	90 e0       	ldi	r25, 0x00	; 0
    118c:	0e 94 14 09 	call	0x1228	; 0x1228 <fputc>
    1190:	5a 94       	dec	r5
    1192:	f7 cf       	rjmp	.-18     	; 0x1182 <vfprintf+0x37c>
    1194:	aa 94       	dec	r10
    1196:	f4 01       	movw	r30, r8
    1198:	ea 0d       	add	r30, r10
    119a:	f1 1d       	adc	r31, r1
    119c:	80 81       	ld	r24, Z
    119e:	b7 01       	movw	r22, r14
    11a0:	90 e0       	ldi	r25, 0x00	; 0
    11a2:	0e 94 14 09 	call	0x1228	; 0x1228 <fputc>
    11a6:	a1 10       	cpse	r10, r1
    11a8:	f5 cf       	rjmp	.-22     	; 0x1194 <vfprintf+0x38e>
    11aa:	33 20       	and	r3, r3
    11ac:	09 f4       	brne	.+2      	; 0x11b0 <vfprintf+0x3aa>
    11ae:	51 ce       	rjmp	.-862    	; 0xe52 <vfprintf+0x4c>
    11b0:	b7 01       	movw	r22, r14
    11b2:	80 e2       	ldi	r24, 0x20	; 32
    11b4:	90 e0       	ldi	r25, 0x00	; 0
    11b6:	0e 94 14 09 	call	0x1228	; 0x1228 <fputc>
    11ba:	3a 94       	dec	r3
    11bc:	f6 cf       	rjmp	.-20     	; 0x11aa <vfprintf+0x3a4>
    11be:	f7 01       	movw	r30, r14
    11c0:	86 81       	ldd	r24, Z+6	; 0x06
    11c2:	97 81       	ldd	r25, Z+7	; 0x07
    11c4:	02 c0       	rjmp	.+4      	; 0x11ca <vfprintf+0x3c4>
    11c6:	8f ef       	ldi	r24, 0xFF	; 255
    11c8:	9f ef       	ldi	r25, 0xFF	; 255
    11ca:	2c 96       	adiw	r28, 0x0c	; 12
    11cc:	0f b6       	in	r0, 0x3f	; 63
    11ce:	f8 94       	cli
    11d0:	de bf       	out	0x3e, r29	; 62
    11d2:	0f be       	out	0x3f, r0	; 63
    11d4:	cd bf       	out	0x3d, r28	; 61
    11d6:	df 91       	pop	r29
    11d8:	cf 91       	pop	r28
    11da:	1f 91       	pop	r17
    11dc:	0f 91       	pop	r16
    11de:	ff 90       	pop	r15
    11e0:	ef 90       	pop	r14
    11e2:	df 90       	pop	r13
    11e4:	cf 90       	pop	r12
    11e6:	bf 90       	pop	r11
    11e8:	af 90       	pop	r10
    11ea:	9f 90       	pop	r9
    11ec:	8f 90       	pop	r8
    11ee:	7f 90       	pop	r7
    11f0:	6f 90       	pop	r6
    11f2:	5f 90       	pop	r5
    11f4:	4f 90       	pop	r4
    11f6:	3f 90       	pop	r3
    11f8:	2f 90       	pop	r2
    11fa:	08 95       	ret

000011fc <strnlen_P>:
    11fc:	fc 01       	movw	r30, r24
    11fe:	05 90       	lpm	r0, Z+
    1200:	61 50       	subi	r22, 0x01	; 1
    1202:	70 40       	sbci	r23, 0x00	; 0
    1204:	01 10       	cpse	r0, r1
    1206:	d8 f7       	brcc	.-10     	; 0x11fe <strnlen_P+0x2>
    1208:	80 95       	com	r24
    120a:	90 95       	com	r25
    120c:	8e 0f       	add	r24, r30
    120e:	9f 1f       	adc	r25, r31
    1210:	08 95       	ret

00001212 <strnlen>:
    1212:	fc 01       	movw	r30, r24
    1214:	61 50       	subi	r22, 0x01	; 1
    1216:	70 40       	sbci	r23, 0x00	; 0
    1218:	01 90       	ld	r0, Z+
    121a:	01 10       	cpse	r0, r1
    121c:	d8 f7       	brcc	.-10     	; 0x1214 <strnlen+0x2>
    121e:	80 95       	com	r24
    1220:	90 95       	com	r25
    1222:	8e 0f       	add	r24, r30
    1224:	9f 1f       	adc	r25, r31
    1226:	08 95       	ret

00001228 <fputc>:
    1228:	0f 93       	push	r16
    122a:	1f 93       	push	r17
    122c:	cf 93       	push	r28
    122e:	df 93       	push	r29
    1230:	fb 01       	movw	r30, r22
    1232:	23 81       	ldd	r18, Z+3	; 0x03
    1234:	21 fd       	sbrc	r18, 1
    1236:	03 c0       	rjmp	.+6      	; 0x123e <fputc+0x16>
    1238:	8f ef       	ldi	r24, 0xFF	; 255
    123a:	9f ef       	ldi	r25, 0xFF	; 255
    123c:	28 c0       	rjmp	.+80     	; 0x128e <fputc+0x66>
    123e:	22 ff       	sbrs	r18, 2
    1240:	16 c0       	rjmp	.+44     	; 0x126e <fputc+0x46>
    1242:	46 81       	ldd	r20, Z+6	; 0x06
    1244:	57 81       	ldd	r21, Z+7	; 0x07
    1246:	24 81       	ldd	r18, Z+4	; 0x04
    1248:	35 81       	ldd	r19, Z+5	; 0x05
    124a:	42 17       	cp	r20, r18
    124c:	53 07       	cpc	r21, r19
    124e:	44 f4       	brge	.+16     	; 0x1260 <fputc+0x38>
    1250:	a0 81       	ld	r26, Z
    1252:	b1 81       	ldd	r27, Z+1	; 0x01
    1254:	9d 01       	movw	r18, r26
    1256:	2f 5f       	subi	r18, 0xFF	; 255
    1258:	3f 4f       	sbci	r19, 0xFF	; 255
    125a:	31 83       	std	Z+1, r19	; 0x01
    125c:	20 83       	st	Z, r18
    125e:	8c 93       	st	X, r24
    1260:	26 81       	ldd	r18, Z+6	; 0x06
    1262:	37 81       	ldd	r19, Z+7	; 0x07
    1264:	2f 5f       	subi	r18, 0xFF	; 255
    1266:	3f 4f       	sbci	r19, 0xFF	; 255
    1268:	37 83       	std	Z+7, r19	; 0x07
    126a:	26 83       	std	Z+6, r18	; 0x06
    126c:	10 c0       	rjmp	.+32     	; 0x128e <fputc+0x66>
    126e:	eb 01       	movw	r28, r22
    1270:	09 2f       	mov	r16, r25
    1272:	18 2f       	mov	r17, r24
    1274:	00 84       	ldd	r0, Z+8	; 0x08
    1276:	f1 85       	ldd	r31, Z+9	; 0x09
    1278:	e0 2d       	mov	r30, r0
    127a:	09 95       	icall
    127c:	89 2b       	or	r24, r25
    127e:	e1 f6       	brne	.-72     	; 0x1238 <fputc+0x10>
    1280:	8e 81       	ldd	r24, Y+6	; 0x06
    1282:	9f 81       	ldd	r25, Y+7	; 0x07
    1284:	01 96       	adiw	r24, 0x01	; 1
    1286:	9f 83       	std	Y+7, r25	; 0x07
    1288:	8e 83       	std	Y+6, r24	; 0x06
    128a:	81 2f       	mov	r24, r17
    128c:	90 2f       	mov	r25, r16
    128e:	df 91       	pop	r29
    1290:	cf 91       	pop	r28
    1292:	1f 91       	pop	r17
    1294:	0f 91       	pop	r16
    1296:	08 95       	ret

00001298 <__ultoa_invert>:
    1298:	fa 01       	movw	r30, r20
    129a:	aa 27       	eor	r26, r26
    129c:	28 30       	cpi	r18, 0x08	; 8
    129e:	51 f1       	breq	.+84     	; 0x12f4 <__ultoa_invert+0x5c>
    12a0:	20 31       	cpi	r18, 0x10	; 16
    12a2:	81 f1       	breq	.+96     	; 0x1304 <__ultoa_invert+0x6c>
    12a4:	e8 94       	clt
    12a6:	6f 93       	push	r22
    12a8:	6e 7f       	andi	r22, 0xFE	; 254
    12aa:	6e 5f       	subi	r22, 0xFE	; 254
    12ac:	7f 4f       	sbci	r23, 0xFF	; 255
    12ae:	8f 4f       	sbci	r24, 0xFF	; 255
    12b0:	9f 4f       	sbci	r25, 0xFF	; 255
    12b2:	af 4f       	sbci	r26, 0xFF	; 255
    12b4:	b1 e0       	ldi	r27, 0x01	; 1
    12b6:	3e d0       	rcall	.+124    	; 0x1334 <__ultoa_invert+0x9c>
    12b8:	b4 e0       	ldi	r27, 0x04	; 4
    12ba:	3c d0       	rcall	.+120    	; 0x1334 <__ultoa_invert+0x9c>
    12bc:	67 0f       	add	r22, r23
    12be:	78 1f       	adc	r23, r24
    12c0:	89 1f       	adc	r24, r25
    12c2:	9a 1f       	adc	r25, r26
    12c4:	a1 1d       	adc	r26, r1
    12c6:	68 0f       	add	r22, r24
    12c8:	79 1f       	adc	r23, r25
    12ca:	8a 1f       	adc	r24, r26
    12cc:	91 1d       	adc	r25, r1
    12ce:	a1 1d       	adc	r26, r1
    12d0:	6a 0f       	add	r22, r26
    12d2:	71 1d       	adc	r23, r1
    12d4:	81 1d       	adc	r24, r1
    12d6:	91 1d       	adc	r25, r1
    12d8:	a1 1d       	adc	r26, r1
    12da:	20 d0       	rcall	.+64     	; 0x131c <__ultoa_invert+0x84>
    12dc:	09 f4       	brne	.+2      	; 0x12e0 <__ultoa_invert+0x48>
    12de:	68 94       	set
    12e0:	3f 91       	pop	r19
    12e2:	2a e0       	ldi	r18, 0x0A	; 10
    12e4:	26 9f       	mul	r18, r22
    12e6:	11 24       	eor	r1, r1
    12e8:	30 19       	sub	r19, r0
    12ea:	30 5d       	subi	r19, 0xD0	; 208
    12ec:	31 93       	st	Z+, r19
    12ee:	de f6       	brtc	.-74     	; 0x12a6 <__ultoa_invert+0xe>
    12f0:	cf 01       	movw	r24, r30
    12f2:	08 95       	ret
    12f4:	46 2f       	mov	r20, r22
    12f6:	47 70       	andi	r20, 0x07	; 7
    12f8:	40 5d       	subi	r20, 0xD0	; 208
    12fa:	41 93       	st	Z+, r20
    12fc:	b3 e0       	ldi	r27, 0x03	; 3
    12fe:	0f d0       	rcall	.+30     	; 0x131e <__ultoa_invert+0x86>
    1300:	c9 f7       	brne	.-14     	; 0x12f4 <__ultoa_invert+0x5c>
    1302:	f6 cf       	rjmp	.-20     	; 0x12f0 <__ultoa_invert+0x58>
    1304:	46 2f       	mov	r20, r22
    1306:	4f 70       	andi	r20, 0x0F	; 15
    1308:	40 5d       	subi	r20, 0xD0	; 208
    130a:	4a 33       	cpi	r20, 0x3A	; 58
    130c:	18 f0       	brcs	.+6      	; 0x1314 <__ultoa_invert+0x7c>
    130e:	49 5d       	subi	r20, 0xD9	; 217
    1310:	31 fd       	sbrc	r19, 1
    1312:	40 52       	subi	r20, 0x20	; 32
    1314:	41 93       	st	Z+, r20
    1316:	02 d0       	rcall	.+4      	; 0x131c <__ultoa_invert+0x84>
    1318:	a9 f7       	brne	.-22     	; 0x1304 <__ultoa_invert+0x6c>
    131a:	ea cf       	rjmp	.-44     	; 0x12f0 <__ultoa_invert+0x58>
    131c:	b4 e0       	ldi	r27, 0x04	; 4
    131e:	a6 95       	lsr	r26
    1320:	97 95       	ror	r25
    1322:	87 95       	ror	r24
    1324:	77 95       	ror	r23
    1326:	67 95       	ror	r22
    1328:	ba 95       	dec	r27
    132a:	c9 f7       	brne	.-14     	; 0x131e <__ultoa_invert+0x86>
    132c:	00 97       	sbiw	r24, 0x00	; 0
    132e:	61 05       	cpc	r22, r1
    1330:	71 05       	cpc	r23, r1
    1332:	08 95       	ret
    1334:	9b 01       	movw	r18, r22
    1336:	ac 01       	movw	r20, r24
    1338:	0a 2e       	mov	r0, r26
    133a:	06 94       	lsr	r0
    133c:	57 95       	ror	r21
    133e:	47 95       	ror	r20
    1340:	37 95       	ror	r19
    1342:	27 95       	ror	r18
    1344:	ba 95       	dec	r27
    1346:	c9 f7       	brne	.-14     	; 0x133a <__ultoa_invert+0xa2>
    1348:	62 0f       	add	r22, r18
    134a:	73 1f       	adc	r23, r19
    134c:	84 1f       	adc	r24, r20
    134e:	95 1f       	adc	r25, r21
    1350:	a0 1d       	adc	r26, r0
    1352:	08 95       	ret

00001354 <_exit>:
    1354:	f8 94       	cli

00001356 <__stop_program>:
    1356:	ff cf       	rjmp	.-2      	; 0x1356 <__stop_program>
