
traffic_light.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000066a  00800200  0000126c  00001300  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000126c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001f  0080086a  0080086a  0000196a  2**0
                  ALLOC
  3 .stab         000016a4  00000000  00000000  0000196c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00004774  00000000  00000000  00003010  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000008c  00000000  00000000  00007784  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00007810  2**2
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 90 00 	jmp	0x120	; 0x120 <__ctors_end>
       4:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
       8:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
       c:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      10:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      14:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      18:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      1c:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      20:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      24:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      28:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      2c:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      30:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      34:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      38:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      3c:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      40:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      44:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      48:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      4c:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      50:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      54:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      58:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      5c:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      60:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      64:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      68:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      6c:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      70:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      74:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      78:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      7c:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      80:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      84:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      88:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      8c:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      90:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      94:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      98:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      9c:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      a0:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      a4:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      a8:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      ac:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      b0:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      b4:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      b8:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      bc:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      c0:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      c4:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      c8:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      cc:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      d0:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      d4:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      d8:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      dc:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      e0:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      e4:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      e8:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      ec:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      f0:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      f4:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      f8:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
      fc:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
     100:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
     104:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
     108:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
     10c:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
     110:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
     114:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
     118:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>
     11c:	0c 94 af 00 	jmp	0x15e	; 0x15e <__bad_interrupt>

00000120 <__ctors_end>:
     120:	11 24       	eor	r1, r1
     122:	1f be       	out	0x3f, r1	; 63
     124:	cf ef       	ldi	r28, 0xFF	; 255
     126:	d1 e4       	ldi	r29, 0x41	; 65
     128:	de bf       	out	0x3e, r29	; 62
     12a:	cd bf       	out	0x3d, r28	; 61

0000012c <__do_copy_data>:
     12c:	18 e0       	ldi	r17, 0x08	; 8
     12e:	a0 e0       	ldi	r26, 0x00	; 0
     130:	b2 e0       	ldi	r27, 0x02	; 2
     132:	ec e6       	ldi	r30, 0x6C	; 108
     134:	f2 e1       	ldi	r31, 0x12	; 18
     136:	00 e0       	ldi	r16, 0x00	; 0
     138:	0b bf       	out	0x3b, r16	; 59
     13a:	02 c0       	rjmp	.+4      	; 0x140 <__do_copy_data+0x14>
     13c:	07 90       	elpm	r0, Z+
     13e:	0d 92       	st	X+, r0
     140:	aa 36       	cpi	r26, 0x6A	; 106
     142:	b1 07       	cpc	r27, r17
     144:	d9 f7       	brne	.-10     	; 0x13c <__do_copy_data+0x10>

00000146 <__do_clear_bss>:
     146:	28 e0       	ldi	r18, 0x08	; 8
     148:	aa e6       	ldi	r26, 0x6A	; 106
     14a:	b8 e0       	ldi	r27, 0x08	; 8
     14c:	01 c0       	rjmp	.+2      	; 0x150 <.do_clear_bss_start>

0000014e <.do_clear_bss_loop>:
     14e:	1d 92       	st	X+, r1

00000150 <.do_clear_bss_start>:
     150:	a9 38       	cpi	r26, 0x89	; 137
     152:	b2 07       	cpc	r27, r18
     154:	e1 f7       	brne	.-8      	; 0x14e <.do_clear_bss_loop>
     156:	0e 94 b1 00 	call	0x162	; 0x162 <main>
     15a:	0c 94 34 09 	jmp	0x1268	; 0x1268 <_exit>

0000015e <__bad_interrupt>:
     15e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000162 <main>:
#include "ses_lcd.h"
#include "ses_uart.h"

void printState(const char*);

int main(void) {
     162:	cf 93       	push	r28
     164:	df 93       	push	r29
     166:	cd b7       	in	r28, 0x3d	; 61
     168:	de b7       	in	r29, 0x3e	; 62
     16a:	e8 97       	sbiw	r28, 0x38	; 56
     16c:	0f b6       	in	r0, 0x3f	; 63
     16e:	f8 94       	cli
     170:	de bf       	out	0x3e, r29	; 62
     172:	0f be       	out	0x3f, r0	; 63
     174:	cd bf       	out	0x3d, r28	; 61
	uart_init(57600);
     176:	60 e0       	ldi	r22, 0x00	; 0
     178:	71 ee       	ldi	r23, 0xE1	; 225
     17a:	80 e0       	ldi	r24, 0x00	; 0
     17c:	90 e0       	ldi	r25, 0x00	; 0
     17e:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <uart_init>
	lcd_init();
     182:	0e 94 d3 03 	call	0x7a6	; 0x7a6 <lcd_init>

	fprintf(uartout,"START\n");
     186:	80 91 00 02 	lds	r24, 0x0200
     18a:	90 91 01 02 	lds	r25, 0x0201
     18e:	9c 01       	movw	r18, r24
     190:	46 e0       	ldi	r20, 0x06	; 6
     192:	50 e0       	ldi	r21, 0x00	; 0
     194:	61 e0       	ldi	r22, 0x01	; 1
     196:	70 e0       	ldi	r23, 0x00	; 0
     198:	84 e0       	ldi	r24, 0x04	; 4
     19a:	92 e0       	ldi	r25, 0x02	; 2
     19c:	0e 94 4b 06 	call	0xc96	; 0xc96 <fwrite>
	fprintf(lcdout,"START");
     1a0:	80 91 02 02 	lds	r24, 0x0202
     1a4:	90 91 03 02 	lds	r25, 0x0203
     1a8:	9c 01       	movw	r18, r24
     1aa:	45 e0       	ldi	r20, 0x05	; 5
     1ac:	50 e0       	ldi	r21, 0x00	; 0
     1ae:	61 e0       	ldi	r22, 0x01	; 1
     1b0:	70 e0       	ldi	r23, 0x00	; 0
     1b2:	8b e0       	ldi	r24, 0x0B	; 11
     1b4:	92 e0       	ldi	r25, 0x02	; 2
     1b6:	0e 94 4b 06 	call	0xc96	; 0xc96 <fwrite>


	led_redInit();
     1ba:	0e 94 35 04 	call	0x86a	; 0x86a <led_redInit>
	led_yellowInit();
     1be:	0e 94 78 04 	call	0x8f0	; 0x8f0 <led_yellowInit>
	led_greenInit();
     1c2:	0e 94 bb 04 	call	0x976	; 0x976 <led_greenInit>
	while (1) {
		led_greenOn();
     1c6:	0e 94 de 04 	call	0x9bc	; 0x9bc <led_greenOn>
		printState("The state is green");
     1ca:	81 e1       	ldi	r24, 0x11	; 17
     1cc:	92 e0       	ldi	r25, 0x02	; 2
     1ce:	0e 94 cc 02 	call	0x598	; 0x598 <printState>
     1d2:	80 e0       	ldi	r24, 0x00	; 0
     1d4:	90 e4       	ldi	r25, 0x40	; 64
     1d6:	ac e9       	ldi	r26, 0x9C	; 156
     1d8:	b5 e4       	ldi	r27, 0x45	; 69
     1da:	89 83       	std	Y+1, r24	; 0x01
     1dc:	9a 83       	std	Y+2, r25	; 0x02
     1de:	ab 83       	std	Y+3, r26	; 0x03
     1e0:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     1e2:	20 e0       	ldi	r18, 0x00	; 0
     1e4:	30 e0       	ldi	r19, 0x00	; 0
     1e6:	4a e7       	ldi	r20, 0x7A	; 122
     1e8:	55 e4       	ldi	r21, 0x45	; 69
     1ea:	69 81       	ldd	r22, Y+1	; 0x01
     1ec:	7a 81       	ldd	r23, Y+2	; 0x02
     1ee:	8b 81       	ldd	r24, Y+3	; 0x03
     1f0:	9c 81       	ldd	r25, Y+4	; 0x04
     1f2:	0e 94 a6 05 	call	0xb4c	; 0xb4c <__mulsf3>
     1f6:	dc 01       	movw	r26, r24
     1f8:	cb 01       	movw	r24, r22
     1fa:	8d 83       	std	Y+5, r24	; 0x05
     1fc:	9e 83       	std	Y+6, r25	; 0x06
     1fe:	af 83       	std	Y+7, r26	; 0x07
     200:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     202:	20 e0       	ldi	r18, 0x00	; 0
     204:	30 e0       	ldi	r19, 0x00	; 0
     206:	40 e8       	ldi	r20, 0x80	; 128
     208:	5f e3       	ldi	r21, 0x3F	; 63
     20a:	6d 81       	ldd	r22, Y+5	; 0x05
     20c:	7e 81       	ldd	r23, Y+6	; 0x06
     20e:	8f 81       	ldd	r24, Y+7	; 0x07
     210:	98 85       	ldd	r25, Y+8	; 0x08
     212:	0e 94 20 05 	call	0xa40	; 0xa40 <__cmpsf2>
     216:	88 23       	and	r24, r24
     218:	2c f4       	brge	.+10     	; 0x224 <main+0xc2>
		__ticks = 1;
     21a:	81 e0       	ldi	r24, 0x01	; 1
     21c:	90 e0       	ldi	r25, 0x00	; 0
     21e:	9a 87       	std	Y+10, r25	; 0x0a
     220:	89 87       	std	Y+9, r24	; 0x09
     222:	3f c0       	rjmp	.+126    	; 0x2a2 <main+0x140>
	else if (__tmp > 65535)
     224:	20 e0       	ldi	r18, 0x00	; 0
     226:	3f ef       	ldi	r19, 0xFF	; 255
     228:	4f e7       	ldi	r20, 0x7F	; 127
     22a:	57 e4       	ldi	r21, 0x47	; 71
     22c:	6d 81       	ldd	r22, Y+5	; 0x05
     22e:	7e 81       	ldd	r23, Y+6	; 0x06
     230:	8f 81       	ldd	r24, Y+7	; 0x07
     232:	98 85       	ldd	r25, Y+8	; 0x08
     234:	0e 94 a1 05 	call	0xb42	; 0xb42 <__gesf2>
     238:	18 16       	cp	r1, r24
     23a:	4c f5       	brge	.+82     	; 0x28e <main+0x12c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     23c:	20 e0       	ldi	r18, 0x00	; 0
     23e:	30 e0       	ldi	r19, 0x00	; 0
     240:	40 e2       	ldi	r20, 0x20	; 32
     242:	51 e4       	ldi	r21, 0x41	; 65
     244:	69 81       	ldd	r22, Y+1	; 0x01
     246:	7a 81       	ldd	r23, Y+2	; 0x02
     248:	8b 81       	ldd	r24, Y+3	; 0x03
     24a:	9c 81       	ldd	r25, Y+4	; 0x04
     24c:	0e 94 a6 05 	call	0xb4c	; 0xb4c <__mulsf3>
     250:	dc 01       	movw	r26, r24
     252:	cb 01       	movw	r24, r22
     254:	bc 01       	movw	r22, r24
     256:	cd 01       	movw	r24, r26
     258:	0e 94 25 05 	call	0xa4a	; 0xa4a <__fixunssfsi>
     25c:	dc 01       	movw	r26, r24
     25e:	cb 01       	movw	r24, r22
     260:	9a 87       	std	Y+10, r25	; 0x0a
     262:	89 87       	std	Y+9, r24	; 0x09
     264:	0f c0       	rjmp	.+30     	; 0x284 <main+0x122>
     266:	80 e9       	ldi	r24, 0x90	; 144
     268:	91 e0       	ldi	r25, 0x01	; 1
     26a:	9c 87       	std	Y+12, r25	; 0x0c
     26c:	8b 87       	std	Y+11, r24	; 0x0b
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     26e:	8b 85       	ldd	r24, Y+11	; 0x0b
     270:	9c 85       	ldd	r25, Y+12	; 0x0c
     272:	01 97       	sbiw	r24, 0x01	; 1
     274:	f1 f7       	brne	.-4      	; 0x272 <main+0x110>
     276:	9c 87       	std	Y+12, r25	; 0x0c
     278:	8b 87       	std	Y+11, r24	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     27a:	89 85       	ldd	r24, Y+9	; 0x09
     27c:	9a 85       	ldd	r25, Y+10	; 0x0a
     27e:	01 97       	sbiw	r24, 0x01	; 1
     280:	9a 87       	std	Y+10, r25	; 0x0a
     282:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     284:	89 85       	ldd	r24, Y+9	; 0x09
     286:	9a 85       	ldd	r25, Y+10	; 0x0a
     288:	89 2b       	or	r24, r25
     28a:	69 f7       	brne	.-38     	; 0x266 <main+0x104>
     28c:	14 c0       	rjmp	.+40     	; 0x2b6 <main+0x154>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     28e:	6d 81       	ldd	r22, Y+5	; 0x05
     290:	7e 81       	ldd	r23, Y+6	; 0x06
     292:	8f 81       	ldd	r24, Y+7	; 0x07
     294:	98 85       	ldd	r25, Y+8	; 0x08
     296:	0e 94 25 05 	call	0xa4a	; 0xa4a <__fixunssfsi>
     29a:	dc 01       	movw	r26, r24
     29c:	cb 01       	movw	r24, r22
     29e:	9a 87       	std	Y+10, r25	; 0x0a
     2a0:	89 87       	std	Y+9, r24	; 0x09
     2a2:	89 85       	ldd	r24, Y+9	; 0x09
     2a4:	9a 85       	ldd	r25, Y+10	; 0x0a
     2a6:	9e 87       	std	Y+14, r25	; 0x0e
     2a8:	8d 87       	std	Y+13, r24	; 0x0d
     2aa:	8d 85       	ldd	r24, Y+13	; 0x0d
     2ac:	9e 85       	ldd	r25, Y+14	; 0x0e
     2ae:	01 97       	sbiw	r24, 0x01	; 1
     2b0:	f1 f7       	brne	.-4      	; 0x2ae <main+0x14c>
     2b2:	9e 87       	std	Y+14, r25	; 0x0e
     2b4:	8d 87       	std	Y+13, r24	; 0x0d
		_delay_ms(5000);


		led_greenToggle();
     2b6:	0e 94 cd 04 	call	0x99a	; 0x99a <led_greenToggle>
		led_yellowOn();
     2ba:	0e 94 9b 04 	call	0x936	; 0x936 <led_yellowOn>
		printState("The state is yellow");
     2be:	84 e2       	ldi	r24, 0x24	; 36
     2c0:	92 e0       	ldi	r25, 0x02	; 2
     2c2:	0e 94 cc 02 	call	0x598	; 0x598 <printState>
     2c6:	80 e0       	ldi	r24, 0x00	; 0
     2c8:	90 e0       	ldi	r25, 0x00	; 0
     2ca:	aa ef       	ldi	r26, 0xFA	; 250
     2cc:	b3 e4       	ldi	r27, 0x43	; 67
     2ce:	8f 87       	std	Y+15, r24	; 0x0f
     2d0:	98 8b       	std	Y+16, r25	; 0x10
     2d2:	a9 8b       	std	Y+17, r26	; 0x11
     2d4:	ba 8b       	std	Y+18, r27	; 0x12

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     2d6:	20 e0       	ldi	r18, 0x00	; 0
     2d8:	30 e0       	ldi	r19, 0x00	; 0
     2da:	4a e7       	ldi	r20, 0x7A	; 122
     2dc:	55 e4       	ldi	r21, 0x45	; 69
     2de:	6f 85       	ldd	r22, Y+15	; 0x0f
     2e0:	78 89       	ldd	r23, Y+16	; 0x10
     2e2:	89 89       	ldd	r24, Y+17	; 0x11
     2e4:	9a 89       	ldd	r25, Y+18	; 0x12
     2e6:	0e 94 a6 05 	call	0xb4c	; 0xb4c <__mulsf3>
     2ea:	dc 01       	movw	r26, r24
     2ec:	cb 01       	movw	r24, r22
     2ee:	8b 8b       	std	Y+19, r24	; 0x13
     2f0:	9c 8b       	std	Y+20, r25	; 0x14
     2f2:	ad 8b       	std	Y+21, r26	; 0x15
     2f4:	be 8b       	std	Y+22, r27	; 0x16
	if (__tmp < 1.0)
     2f6:	20 e0       	ldi	r18, 0x00	; 0
     2f8:	30 e0       	ldi	r19, 0x00	; 0
     2fa:	40 e8       	ldi	r20, 0x80	; 128
     2fc:	5f e3       	ldi	r21, 0x3F	; 63
     2fe:	6b 89       	ldd	r22, Y+19	; 0x13
     300:	7c 89       	ldd	r23, Y+20	; 0x14
     302:	8d 89       	ldd	r24, Y+21	; 0x15
     304:	9e 89       	ldd	r25, Y+22	; 0x16
     306:	0e 94 20 05 	call	0xa40	; 0xa40 <__cmpsf2>
     30a:	88 23       	and	r24, r24
     30c:	2c f4       	brge	.+10     	; 0x318 <main+0x1b6>
		__ticks = 1;
     30e:	81 e0       	ldi	r24, 0x01	; 1
     310:	90 e0       	ldi	r25, 0x00	; 0
     312:	98 8f       	std	Y+24, r25	; 0x18
     314:	8f 8b       	std	Y+23, r24	; 0x17
     316:	3f c0       	rjmp	.+126    	; 0x396 <main+0x234>
	else if (__tmp > 65535)
     318:	20 e0       	ldi	r18, 0x00	; 0
     31a:	3f ef       	ldi	r19, 0xFF	; 255
     31c:	4f e7       	ldi	r20, 0x7F	; 127
     31e:	57 e4       	ldi	r21, 0x47	; 71
     320:	6b 89       	ldd	r22, Y+19	; 0x13
     322:	7c 89       	ldd	r23, Y+20	; 0x14
     324:	8d 89       	ldd	r24, Y+21	; 0x15
     326:	9e 89       	ldd	r25, Y+22	; 0x16
     328:	0e 94 a1 05 	call	0xb42	; 0xb42 <__gesf2>
     32c:	18 16       	cp	r1, r24
     32e:	4c f5       	brge	.+82     	; 0x382 <main+0x220>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     330:	20 e0       	ldi	r18, 0x00	; 0
     332:	30 e0       	ldi	r19, 0x00	; 0
     334:	40 e2       	ldi	r20, 0x20	; 32
     336:	51 e4       	ldi	r21, 0x41	; 65
     338:	6f 85       	ldd	r22, Y+15	; 0x0f
     33a:	78 89       	ldd	r23, Y+16	; 0x10
     33c:	89 89       	ldd	r24, Y+17	; 0x11
     33e:	9a 89       	ldd	r25, Y+18	; 0x12
     340:	0e 94 a6 05 	call	0xb4c	; 0xb4c <__mulsf3>
     344:	dc 01       	movw	r26, r24
     346:	cb 01       	movw	r24, r22
     348:	bc 01       	movw	r22, r24
     34a:	cd 01       	movw	r24, r26
     34c:	0e 94 25 05 	call	0xa4a	; 0xa4a <__fixunssfsi>
     350:	dc 01       	movw	r26, r24
     352:	cb 01       	movw	r24, r22
     354:	98 8f       	std	Y+24, r25	; 0x18
     356:	8f 8b       	std	Y+23, r24	; 0x17
     358:	0f c0       	rjmp	.+30     	; 0x378 <main+0x216>
     35a:	80 e9       	ldi	r24, 0x90	; 144
     35c:	91 e0       	ldi	r25, 0x01	; 1
     35e:	9a 8f       	std	Y+26, r25	; 0x1a
     360:	89 8f       	std	Y+25, r24	; 0x19
     362:	89 8d       	ldd	r24, Y+25	; 0x19
     364:	9a 8d       	ldd	r25, Y+26	; 0x1a
     366:	01 97       	sbiw	r24, 0x01	; 1
     368:	f1 f7       	brne	.-4      	; 0x366 <main+0x204>
     36a:	9a 8f       	std	Y+26, r25	; 0x1a
     36c:	89 8f       	std	Y+25, r24	; 0x19
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     36e:	8f 89       	ldd	r24, Y+23	; 0x17
     370:	98 8d       	ldd	r25, Y+24	; 0x18
     372:	01 97       	sbiw	r24, 0x01	; 1
     374:	98 8f       	std	Y+24, r25	; 0x18
     376:	8f 8b       	std	Y+23, r24	; 0x17
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     378:	8f 89       	ldd	r24, Y+23	; 0x17
     37a:	98 8d       	ldd	r25, Y+24	; 0x18
     37c:	89 2b       	or	r24, r25
     37e:	69 f7       	brne	.-38     	; 0x35a <main+0x1f8>
     380:	14 c0       	rjmp	.+40     	; 0x3aa <main+0x248>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     382:	6b 89       	ldd	r22, Y+19	; 0x13
     384:	7c 89       	ldd	r23, Y+20	; 0x14
     386:	8d 89       	ldd	r24, Y+21	; 0x15
     388:	9e 89       	ldd	r25, Y+22	; 0x16
     38a:	0e 94 25 05 	call	0xa4a	; 0xa4a <__fixunssfsi>
     38e:	dc 01       	movw	r26, r24
     390:	cb 01       	movw	r24, r22
     392:	98 8f       	std	Y+24, r25	; 0x18
     394:	8f 8b       	std	Y+23, r24	; 0x17
     396:	8f 89       	ldd	r24, Y+23	; 0x17
     398:	98 8d       	ldd	r25, Y+24	; 0x18
     39a:	9c 8f       	std	Y+28, r25	; 0x1c
     39c:	8b 8f       	std	Y+27, r24	; 0x1b
     39e:	8b 8d       	ldd	r24, Y+27	; 0x1b
     3a0:	9c 8d       	ldd	r25, Y+28	; 0x1c
     3a2:	01 97       	sbiw	r24, 0x01	; 1
     3a4:	f1 f7       	brne	.-4      	; 0x3a2 <main+0x240>
     3a6:	9c 8f       	std	Y+28, r25	; 0x1c
     3a8:	8b 8f       	std	Y+27, r24	; 0x1b
		_delay_ms(500);


		led_yellowToggle();
     3aa:	0e 94 8a 04 	call	0x914	; 0x914 <led_yellowToggle>
		led_redOn();
     3ae:	0e 94 58 04 	call	0x8b0	; 0x8b0 <led_redOn>
		printState("The state is red");
     3b2:	88 e3       	ldi	r24, 0x38	; 56
     3b4:	92 e0       	ldi	r25, 0x02	; 2
     3b6:	0e 94 cc 02 	call	0x598	; 0x598 <printState>
     3ba:	80 e0       	ldi	r24, 0x00	; 0
     3bc:	90 e0       	ldi	r25, 0x00	; 0
     3be:	aa ef       	ldi	r26, 0xFA	; 250
     3c0:	b4 e4       	ldi	r27, 0x44	; 68
     3c2:	8d 8f       	std	Y+29, r24	; 0x1d
     3c4:	9e 8f       	std	Y+30, r25	; 0x1e
     3c6:	af 8f       	std	Y+31, r26	; 0x1f
     3c8:	b8 a3       	std	Y+32, r27	; 0x20

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     3ca:	20 e0       	ldi	r18, 0x00	; 0
     3cc:	30 e0       	ldi	r19, 0x00	; 0
     3ce:	4a e7       	ldi	r20, 0x7A	; 122
     3d0:	55 e4       	ldi	r21, 0x45	; 69
     3d2:	6d 8d       	ldd	r22, Y+29	; 0x1d
     3d4:	7e 8d       	ldd	r23, Y+30	; 0x1e
     3d6:	8f 8d       	ldd	r24, Y+31	; 0x1f
     3d8:	98 a1       	ldd	r25, Y+32	; 0x20
     3da:	0e 94 a6 05 	call	0xb4c	; 0xb4c <__mulsf3>
     3de:	dc 01       	movw	r26, r24
     3e0:	cb 01       	movw	r24, r22
     3e2:	89 a3       	std	Y+33, r24	; 0x21
     3e4:	9a a3       	std	Y+34, r25	; 0x22
     3e6:	ab a3       	std	Y+35, r26	; 0x23
     3e8:	bc a3       	std	Y+36, r27	; 0x24
	if (__tmp < 1.0)
     3ea:	20 e0       	ldi	r18, 0x00	; 0
     3ec:	30 e0       	ldi	r19, 0x00	; 0
     3ee:	40 e8       	ldi	r20, 0x80	; 128
     3f0:	5f e3       	ldi	r21, 0x3F	; 63
     3f2:	69 a1       	ldd	r22, Y+33	; 0x21
     3f4:	7a a1       	ldd	r23, Y+34	; 0x22
     3f6:	8b a1       	ldd	r24, Y+35	; 0x23
     3f8:	9c a1       	ldd	r25, Y+36	; 0x24
     3fa:	0e 94 20 05 	call	0xa40	; 0xa40 <__cmpsf2>
     3fe:	88 23       	and	r24, r24
     400:	2c f4       	brge	.+10     	; 0x40c <main+0x2aa>
		__ticks = 1;
     402:	81 e0       	ldi	r24, 0x01	; 1
     404:	90 e0       	ldi	r25, 0x00	; 0
     406:	9e a3       	std	Y+38, r25	; 0x26
     408:	8d a3       	std	Y+37, r24	; 0x25
     40a:	3f c0       	rjmp	.+126    	; 0x48a <main+0x328>
	else if (__tmp > 65535)
     40c:	20 e0       	ldi	r18, 0x00	; 0
     40e:	3f ef       	ldi	r19, 0xFF	; 255
     410:	4f e7       	ldi	r20, 0x7F	; 127
     412:	57 e4       	ldi	r21, 0x47	; 71
     414:	69 a1       	ldd	r22, Y+33	; 0x21
     416:	7a a1       	ldd	r23, Y+34	; 0x22
     418:	8b a1       	ldd	r24, Y+35	; 0x23
     41a:	9c a1       	ldd	r25, Y+36	; 0x24
     41c:	0e 94 a1 05 	call	0xb42	; 0xb42 <__gesf2>
     420:	18 16       	cp	r1, r24
     422:	4c f5       	brge	.+82     	; 0x476 <main+0x314>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     424:	20 e0       	ldi	r18, 0x00	; 0
     426:	30 e0       	ldi	r19, 0x00	; 0
     428:	40 e2       	ldi	r20, 0x20	; 32
     42a:	51 e4       	ldi	r21, 0x41	; 65
     42c:	6d 8d       	ldd	r22, Y+29	; 0x1d
     42e:	7e 8d       	ldd	r23, Y+30	; 0x1e
     430:	8f 8d       	ldd	r24, Y+31	; 0x1f
     432:	98 a1       	ldd	r25, Y+32	; 0x20
     434:	0e 94 a6 05 	call	0xb4c	; 0xb4c <__mulsf3>
     438:	dc 01       	movw	r26, r24
     43a:	cb 01       	movw	r24, r22
     43c:	bc 01       	movw	r22, r24
     43e:	cd 01       	movw	r24, r26
     440:	0e 94 25 05 	call	0xa4a	; 0xa4a <__fixunssfsi>
     444:	dc 01       	movw	r26, r24
     446:	cb 01       	movw	r24, r22
     448:	9e a3       	std	Y+38, r25	; 0x26
     44a:	8d a3       	std	Y+37, r24	; 0x25
     44c:	0f c0       	rjmp	.+30     	; 0x46c <main+0x30a>
     44e:	80 e9       	ldi	r24, 0x90	; 144
     450:	91 e0       	ldi	r25, 0x01	; 1
     452:	98 a7       	std	Y+40, r25	; 0x28
     454:	8f a3       	std	Y+39, r24	; 0x27
     456:	8f a1       	ldd	r24, Y+39	; 0x27
     458:	98 a5       	ldd	r25, Y+40	; 0x28
     45a:	01 97       	sbiw	r24, 0x01	; 1
     45c:	f1 f7       	brne	.-4      	; 0x45a <main+0x2f8>
     45e:	98 a7       	std	Y+40, r25	; 0x28
     460:	8f a3       	std	Y+39, r24	; 0x27
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     462:	8d a1       	ldd	r24, Y+37	; 0x25
     464:	9e a1       	ldd	r25, Y+38	; 0x26
     466:	01 97       	sbiw	r24, 0x01	; 1
     468:	9e a3       	std	Y+38, r25	; 0x26
     46a:	8d a3       	std	Y+37, r24	; 0x25
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     46c:	8d a1       	ldd	r24, Y+37	; 0x25
     46e:	9e a1       	ldd	r25, Y+38	; 0x26
     470:	89 2b       	or	r24, r25
     472:	69 f7       	brne	.-38     	; 0x44e <main+0x2ec>
     474:	14 c0       	rjmp	.+40     	; 0x49e <main+0x33c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     476:	69 a1       	ldd	r22, Y+33	; 0x21
     478:	7a a1       	ldd	r23, Y+34	; 0x22
     47a:	8b a1       	ldd	r24, Y+35	; 0x23
     47c:	9c a1       	ldd	r25, Y+36	; 0x24
     47e:	0e 94 25 05 	call	0xa4a	; 0xa4a <__fixunssfsi>
     482:	dc 01       	movw	r26, r24
     484:	cb 01       	movw	r24, r22
     486:	9e a3       	std	Y+38, r25	; 0x26
     488:	8d a3       	std	Y+37, r24	; 0x25
     48a:	8d a1       	ldd	r24, Y+37	; 0x25
     48c:	9e a1       	ldd	r25, Y+38	; 0x26
     48e:	9a a7       	std	Y+42, r25	; 0x2a
     490:	89 a7       	std	Y+41, r24	; 0x29
     492:	89 a5       	ldd	r24, Y+41	; 0x29
     494:	9a a5       	ldd	r25, Y+42	; 0x2a
     496:	01 97       	sbiw	r24, 0x01	; 1
     498:	f1 f7       	brne	.-4      	; 0x496 <main+0x334>
     49a:	9a a7       	std	Y+42, r25	; 0x2a
     49c:	89 a7       	std	Y+41, r24	; 0x29
		_delay_ms(2000);

		led_yellowToggle();
     49e:	0e 94 8a 04 	call	0x914	; 0x914 <led_yellowToggle>
		printState("The state is red and yellow");
     4a2:	89 e4       	ldi	r24, 0x49	; 73
     4a4:	92 e0       	ldi	r25, 0x02	; 2
     4a6:	0e 94 cc 02 	call	0x598	; 0x598 <printState>
     4aa:	80 e0       	ldi	r24, 0x00	; 0
     4ac:	90 e0       	ldi	r25, 0x00	; 0
     4ae:	a6 e9       	ldi	r26, 0x96	; 150
     4b0:	b3 e4       	ldi	r27, 0x43	; 67
     4b2:	8b a7       	std	Y+43, r24	; 0x2b
     4b4:	9c a7       	std	Y+44, r25	; 0x2c
     4b6:	ad a7       	std	Y+45, r26	; 0x2d
     4b8:	be a7       	std	Y+46, r27	; 0x2e

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     4ba:	20 e0       	ldi	r18, 0x00	; 0
     4bc:	30 e0       	ldi	r19, 0x00	; 0
     4be:	4a e7       	ldi	r20, 0x7A	; 122
     4c0:	55 e4       	ldi	r21, 0x45	; 69
     4c2:	6b a5       	ldd	r22, Y+43	; 0x2b
     4c4:	7c a5       	ldd	r23, Y+44	; 0x2c
     4c6:	8d a5       	ldd	r24, Y+45	; 0x2d
     4c8:	9e a5       	ldd	r25, Y+46	; 0x2e
     4ca:	0e 94 a6 05 	call	0xb4c	; 0xb4c <__mulsf3>
     4ce:	dc 01       	movw	r26, r24
     4d0:	cb 01       	movw	r24, r22
     4d2:	8f a7       	std	Y+47, r24	; 0x2f
     4d4:	98 ab       	std	Y+48, r25	; 0x30
     4d6:	a9 ab       	std	Y+49, r26	; 0x31
     4d8:	ba ab       	std	Y+50, r27	; 0x32
	if (__tmp < 1.0)
     4da:	20 e0       	ldi	r18, 0x00	; 0
     4dc:	30 e0       	ldi	r19, 0x00	; 0
     4de:	40 e8       	ldi	r20, 0x80	; 128
     4e0:	5f e3       	ldi	r21, 0x3F	; 63
     4e2:	6f a5       	ldd	r22, Y+47	; 0x2f
     4e4:	78 a9       	ldd	r23, Y+48	; 0x30
     4e6:	89 a9       	ldd	r24, Y+49	; 0x31
     4e8:	9a a9       	ldd	r25, Y+50	; 0x32
     4ea:	0e 94 20 05 	call	0xa40	; 0xa40 <__cmpsf2>
     4ee:	88 23       	and	r24, r24
     4f0:	2c f4       	brge	.+10     	; 0x4fc <main+0x39a>
		__ticks = 1;
     4f2:	81 e0       	ldi	r24, 0x01	; 1
     4f4:	90 e0       	ldi	r25, 0x00	; 0
     4f6:	9c ab       	std	Y+52, r25	; 0x34
     4f8:	8b ab       	std	Y+51, r24	; 0x33
     4fa:	3f c0       	rjmp	.+126    	; 0x57a <main+0x418>
	else if (__tmp > 65535)
     4fc:	20 e0       	ldi	r18, 0x00	; 0
     4fe:	3f ef       	ldi	r19, 0xFF	; 255
     500:	4f e7       	ldi	r20, 0x7F	; 127
     502:	57 e4       	ldi	r21, 0x47	; 71
     504:	6f a5       	ldd	r22, Y+47	; 0x2f
     506:	78 a9       	ldd	r23, Y+48	; 0x30
     508:	89 a9       	ldd	r24, Y+49	; 0x31
     50a:	9a a9       	ldd	r25, Y+50	; 0x32
     50c:	0e 94 a1 05 	call	0xb42	; 0xb42 <__gesf2>
     510:	18 16       	cp	r1, r24
     512:	4c f5       	brge	.+82     	; 0x566 <main+0x404>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     514:	20 e0       	ldi	r18, 0x00	; 0
     516:	30 e0       	ldi	r19, 0x00	; 0
     518:	40 e2       	ldi	r20, 0x20	; 32
     51a:	51 e4       	ldi	r21, 0x41	; 65
     51c:	6b a5       	ldd	r22, Y+43	; 0x2b
     51e:	7c a5       	ldd	r23, Y+44	; 0x2c
     520:	8d a5       	ldd	r24, Y+45	; 0x2d
     522:	9e a5       	ldd	r25, Y+46	; 0x2e
     524:	0e 94 a6 05 	call	0xb4c	; 0xb4c <__mulsf3>
     528:	dc 01       	movw	r26, r24
     52a:	cb 01       	movw	r24, r22
     52c:	bc 01       	movw	r22, r24
     52e:	cd 01       	movw	r24, r26
     530:	0e 94 25 05 	call	0xa4a	; 0xa4a <__fixunssfsi>
     534:	dc 01       	movw	r26, r24
     536:	cb 01       	movw	r24, r22
     538:	9c ab       	std	Y+52, r25	; 0x34
     53a:	8b ab       	std	Y+51, r24	; 0x33
     53c:	0f c0       	rjmp	.+30     	; 0x55c <main+0x3fa>
     53e:	80 e9       	ldi	r24, 0x90	; 144
     540:	91 e0       	ldi	r25, 0x01	; 1
     542:	9e ab       	std	Y+54, r25	; 0x36
     544:	8d ab       	std	Y+53, r24	; 0x35
     546:	8d a9       	ldd	r24, Y+53	; 0x35
     548:	9e a9       	ldd	r25, Y+54	; 0x36
     54a:	01 97       	sbiw	r24, 0x01	; 1
     54c:	f1 f7       	brne	.-4      	; 0x54a <main+0x3e8>
     54e:	9e ab       	std	Y+54, r25	; 0x36
     550:	8d ab       	std	Y+53, r24	; 0x35
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     552:	8b a9       	ldd	r24, Y+51	; 0x33
     554:	9c a9       	ldd	r25, Y+52	; 0x34
     556:	01 97       	sbiw	r24, 0x01	; 1
     558:	9c ab       	std	Y+52, r25	; 0x34
     55a:	8b ab       	std	Y+51, r24	; 0x33
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     55c:	8b a9       	ldd	r24, Y+51	; 0x33
     55e:	9c a9       	ldd	r25, Y+52	; 0x34
     560:	89 2b       	or	r24, r25
     562:	69 f7       	brne	.-38     	; 0x53e <main+0x3dc>
     564:	14 c0       	rjmp	.+40     	; 0x58e <main+0x42c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     566:	6f a5       	ldd	r22, Y+47	; 0x2f
     568:	78 a9       	ldd	r23, Y+48	; 0x30
     56a:	89 a9       	ldd	r24, Y+49	; 0x31
     56c:	9a a9       	ldd	r25, Y+50	; 0x32
     56e:	0e 94 25 05 	call	0xa4a	; 0xa4a <__fixunssfsi>
     572:	dc 01       	movw	r26, r24
     574:	cb 01       	movw	r24, r22
     576:	9c ab       	std	Y+52, r25	; 0x34
     578:	8b ab       	std	Y+51, r24	; 0x33
     57a:	8b a9       	ldd	r24, Y+51	; 0x33
     57c:	9c a9       	ldd	r25, Y+52	; 0x34
     57e:	98 af       	std	Y+56, r25	; 0x38
     580:	8f ab       	std	Y+55, r24	; 0x37
     582:	8f a9       	ldd	r24, Y+55	; 0x37
     584:	98 ad       	ldd	r25, Y+56	; 0x38
     586:	01 97       	sbiw	r24, 0x01	; 1
     588:	f1 f7       	brne	.-4      	; 0x586 <main+0x424>
     58a:	98 af       	std	Y+56, r25	; 0x38
     58c:	8f ab       	std	Y+55, r24	; 0x37
		_delay_ms(300);

		led_yellowOff();
     58e:	0e 94 ab 04 	call	0x956	; 0x956 <led_yellowOff>
		led_redOff();
     592:	0e 94 68 04 	call	0x8d0	; 0x8d0 <led_redOff>
	}
     596:	17 ce       	rjmp	.-978    	; 0x1c6 <main+0x64>

00000598 <printState>:
	return 1;
}

void printState(const char* state)
{
     598:	cf 93       	push	r28
     59a:	df 93       	push	r29
     59c:	00 d0       	rcall	.+0      	; 0x59e <printState+0x6>
     59e:	cd b7       	in	r28, 0x3d	; 61
     5a0:	de b7       	in	r29, 0x3e	; 62
     5a2:	9a 83       	std	Y+2, r25	; 0x02
     5a4:	89 83       	std	Y+1, r24	; 0x01
	fprintf(uartout,"%s\n", state);
     5a6:	80 91 00 02 	lds	r24, 0x0200
     5aa:	90 91 01 02 	lds	r25, 0x0201
     5ae:	2a 81       	ldd	r18, Y+2	; 0x02
     5b0:	2f 93       	push	r18
     5b2:	29 81       	ldd	r18, Y+1	; 0x01
     5b4:	2f 93       	push	r18
     5b6:	25 e6       	ldi	r18, 0x65	; 101
     5b8:	32 e0       	ldi	r19, 0x02	; 2
     5ba:	23 2f       	mov	r18, r19
     5bc:	2f 93       	push	r18
     5be:	25 e6       	ldi	r18, 0x65	; 101
     5c0:	32 e0       	ldi	r19, 0x02	; 2
     5c2:	2f 93       	push	r18
     5c4:	29 2f       	mov	r18, r25
     5c6:	2f 93       	push	r18
     5c8:	8f 93       	push	r24
     5ca:	0e 94 3b 06 	call	0xc76	; 0xc76 <fprintf>
     5ce:	0f 90       	pop	r0
     5d0:	0f 90       	pop	r0
     5d2:	0f 90       	pop	r0
     5d4:	0f 90       	pop	r0
     5d6:	0f 90       	pop	r0
     5d8:	0f 90       	pop	r0
}
     5da:	0f 90       	pop	r0
     5dc:	0f 90       	pop	r0
     5de:	df 91       	pop	r29
     5e0:	cf 91       	pop	r28
     5e2:	08 95       	ret

000005e4 <uart_init>:
     5e4:	0f 93       	push	r16
     5e6:	1f 93       	push	r17
     5e8:	8b 01       	movw	r16, r22
     5ea:	9c 01       	movw	r18, r24
     5ec:	80 91 78 08 	lds	r24, 0x0878
     5f0:	81 11       	cpse	r24, r1
     5f2:	38 c0       	rjmp	.+112    	; 0x664 <uart_init+0x80>
     5f4:	81 e0       	ldi	r24, 0x01	; 1
     5f6:	80 93 78 08 	sts	0x0878, r24
     5fa:	c9 01       	movw	r24, r18
     5fc:	b8 01       	movw	r22, r16
     5fe:	77 5f       	subi	r23, 0xF7	; 247
     600:	82 4c       	sbci	r24, 0xC2	; 194
     602:	9f 4f       	sbci	r25, 0xFF	; 255
     604:	42 e0       	ldi	r20, 0x02	; 2
     606:	66 0f       	add	r22, r22
     608:	77 1f       	adc	r23, r23
     60a:	88 1f       	adc	r24, r24
     60c:	99 1f       	adc	r25, r25
     60e:	4a 95       	dec	r20
     610:	d1 f7       	brne	.-12     	; 0x606 <uart_init+0x22>
     612:	a9 01       	movw	r20, r18
     614:	98 01       	movw	r18, r16
     616:	e3 e0       	ldi	r30, 0x03	; 3
     618:	22 0f       	add	r18, r18
     61a:	33 1f       	adc	r19, r19
     61c:	44 1f       	adc	r20, r20
     61e:	55 1f       	adc	r21, r21
     620:	ea 95       	dec	r30
     622:	d1 f7       	brne	.-12     	; 0x618 <uart_init+0x34>
     624:	0e 94 fe 04 	call	0x9fc	; 0x9fc <__udivmodsi4>
     628:	21 50       	subi	r18, 0x01	; 1
     62a:	31 09       	sbc	r19, r1
     62c:	30 93 cd 00 	sts	0x00CD, r19
     630:	20 93 cc 00 	sts	0x00CC, r18
     634:	22 e0       	ldi	r18, 0x02	; 2
     636:	20 93 c8 00 	sts	0x00C8, r18
     63a:	86 e0       	ldi	r24, 0x06	; 6
     63c:	80 93 ca 00 	sts	0x00CA, r24
     640:	88 e1       	ldi	r24, 0x18	; 24
     642:	80 93 c9 00 	sts	0x00C9, r24
     646:	8e e0       	ldi	r24, 0x0E	; 14
     648:	ea e6       	ldi	r30, 0x6A	; 106
     64a:	f8 e0       	ldi	r31, 0x08	; 8
     64c:	df 01       	movw	r26, r30
     64e:	1d 92       	st	X+, r1
     650:	8a 95       	dec	r24
     652:	e9 f7       	brne	.-6      	; 0x64e <uart_init+0x6a>
     654:	83 e4       	ldi	r24, 0x43	; 67
     656:	93 e0       	ldi	r25, 0x03	; 3
     658:	90 93 73 08 	sts	0x0873, r25
     65c:	80 93 72 08 	sts	0x0872, r24
     660:	20 93 6d 08 	sts	0x086D, r18
     664:	1f 91       	pop	r17
     666:	0f 91       	pop	r16
     668:	08 95       	ret

0000066a <uart_getc>:
     66a:	80 91 c8 00 	lds	r24, 0x00C8
     66e:	87 ff       	sbrs	r24, 7
     670:	fc cf       	rjmp	.-8      	; 0x66a <uart_getc>
     672:	80 91 ce 00 	lds	r24, 0x00CE
     676:	08 95       	ret

00000678 <uart_putc>:
     678:	90 91 c8 00 	lds	r25, 0x00C8
     67c:	95 ff       	sbrs	r25, 5
     67e:	fc cf       	rjmp	.-8      	; 0x678 <uart_putc>
     680:	80 93 ce 00 	sts	0x00CE, r24
     684:	08 95       	ret

00000686 <uart_putcProxy>:
     686:	0e 94 3c 03 	call	0x678	; 0x678 <uart_putc>
     68a:	80 e0       	ldi	r24, 0x00	; 0
     68c:	90 e0       	ldi	r25, 0x00	; 0
     68e:	08 95       	ret

00000690 <lcd_waitBusy>:
     690:	0e 94 2b 04 	call	0x856	; 0x856 <lcdDriver_readStatus>
     694:	87 fd       	sbrc	r24, 7
     696:	fc cf       	rjmp	.-8      	; 0x690 <lcd_waitBusy>
     698:	08 95       	ret

0000069a <lcd_write.part.0>:
     69a:	1f 93       	push	r17
     69c:	cf 93       	push	r28
     69e:	df 93       	push	r29
     6a0:	18 2f       	mov	r17, r24
     6a2:	c6 2f       	mov	r28, r22
     6a4:	d4 2f       	mov	r29, r20
     6a6:	6d 33       	cpi	r22, 0x3D	; 61
     6a8:	40 f0       	brcs	.+16     	; 0x6ba <lcd_write.part.0+0x20>
     6aa:	81 e0       	ldi	r24, 0x01	; 1
     6ac:	0e 94 22 04 	call	0x844	; 0x844 <lcdDriver_selectController>
     6b0:	0e 94 48 03 	call	0x690	; 0x690 <lcd_waitBusy>
     6b4:	83 ec       	ldi	r24, 0xC3	; 195
     6b6:	8c 0f       	add	r24, r28
     6b8:	06 c0       	rjmp	.+12     	; 0x6c6 <lcd_write.part.0+0x2c>
     6ba:	80 e0       	ldi	r24, 0x00	; 0
     6bc:	0e 94 22 04 	call	0x844	; 0x844 <lcdDriver_selectController>
     6c0:	0e 94 48 03 	call	0x690	; 0x690 <lcd_waitBusy>
     6c4:	8c 2f       	mov	r24, r28
     6c6:	0e 94 18 04 	call	0x830	; 0x830 <lcdDriver_writeCommand>
     6ca:	0e 94 48 03 	call	0x690	; 0x690 <lcd_waitBusy>
     6ce:	81 2f       	mov	r24, r17
     6d0:	88 6b       	ori	r24, 0xB8	; 184
     6d2:	0e 94 18 04 	call	0x830	; 0x830 <lcdDriver_writeCommand>
     6d6:	0e 94 48 03 	call	0x690	; 0x690 <lcd_waitBusy>
     6da:	8d 2f       	mov	r24, r29
     6dc:	df 91       	pop	r29
     6de:	cf 91       	pop	r28
     6e0:	1f 91       	pop	r17
     6e2:	0c 94 0d 04 	jmp	0x81a	; 0x81a <lcdDriver_writeData>

000006e6 <lcd_setCursor>:
     6e6:	80 93 7a 08 	sts	0x087A, r24
     6ea:	60 93 79 08 	sts	0x0879, r22
     6ee:	08 95       	ret

000006f0 <lcd_putc>:
     6f0:	0f 93       	push	r16
     6f2:	1f 93       	push	r17
     6f4:	cf 93       	push	r28
     6f6:	df 93       	push	r29
     6f8:	90 91 79 08 	lds	r25, 0x0879
     6fc:	8a 30       	cpi	r24, 0x0A	; 10
     6fe:	31 f4       	brne	.+12     	; 0x70c <lcd_putc+0x1c>
     700:	10 92 7a 08 	sts	0x087A, r1
     704:	9f 5f       	subi	r25, 0xFF	; 255
     706:	90 93 79 08 	sts	0x0879, r25
     70a:	31 c0       	rjmp	.+98     	; 0x76e <lcd_putc+0x7e>
     70c:	20 91 7a 08 	lds	r18, 0x087A
     710:	24 31       	cpi	r18, 0x14	; 20
     712:	29 f4       	brne	.+10     	; 0x71e <lcd_putc+0x2e>
     714:	10 92 7a 08 	sts	0x087A, r1
     718:	9f 5f       	subi	r25, 0xFF	; 255
     71a:	90 93 79 08 	sts	0x0879, r25
     71e:	90 91 79 08 	lds	r25, 0x0879
     722:	94 30       	cpi	r25, 0x04	; 4
     724:	20 f5       	brcc	.+72     	; 0x76e <lcd_putc+0x7e>
     726:	96 e0       	ldi	r25, 0x06	; 6
     728:	89 9f       	mul	r24, r25
     72a:	80 01       	movw	r16, r0
     72c:	11 24       	eor	r1, r1
     72e:	c0 e0       	ldi	r28, 0x00	; 0
     730:	d0 e0       	ldi	r29, 0x00	; 0
     732:	07 59       	subi	r16, 0x97	; 151
     734:	1d 4f       	sbci	r17, 0xFD	; 253
     736:	f8 01       	movw	r30, r16
     738:	ec 0f       	add	r30, r28
     73a:	fd 1f       	adc	r31, r29
     73c:	40 81       	ld	r20, Z
     73e:	80 91 7a 08 	lds	r24, 0x087A
     742:	68 2f       	mov	r22, r24
     744:	66 0f       	add	r22, r22
     746:	68 0f       	add	r22, r24
     748:	66 0f       	add	r22, r22
     74a:	6c 0f       	add	r22, r28
     74c:	80 91 79 08 	lds	r24, 0x0879
     750:	6a 37       	cpi	r22, 0x7A	; 122
     752:	20 f4       	brcc	.+8      	; 0x75c <lcd_putc+0x6c>
     754:	84 30       	cpi	r24, 0x04	; 4
     756:	10 f4       	brcc	.+4      	; 0x75c <lcd_putc+0x6c>
     758:	0e 94 4d 03 	call	0x69a	; 0x69a <lcd_write.part.0>
     75c:	21 96       	adiw	r28, 0x01	; 1
     75e:	c6 30       	cpi	r28, 0x06	; 6
     760:	d1 05       	cpc	r29, r1
     762:	49 f7       	brne	.-46     	; 0x736 <lcd_putc+0x46>
     764:	80 91 7a 08 	lds	r24, 0x087A
     768:	8f 5f       	subi	r24, 0xFF	; 255
     76a:	80 93 7a 08 	sts	0x087A, r24
     76e:	df 91       	pop	r29
     770:	cf 91       	pop	r28
     772:	1f 91       	pop	r17
     774:	0f 91       	pop	r16
     776:	08 95       	ret

00000778 <put>:
     778:	0e 94 78 03 	call	0x6f0	; 0x6f0 <lcd_putc>
     77c:	80 e0       	ldi	r24, 0x00	; 0
     77e:	90 e0       	ldi	r25, 0x00	; 0
     780:	08 95       	ret

00000782 <lcd_clear>:
     782:	cf 93       	push	r28
     784:	df 93       	push	r29
     786:	d0 e0       	ldi	r29, 0x00	; 0
     788:	c0 e0       	ldi	r28, 0x00	; 0
     78a:	40 e0       	ldi	r20, 0x00	; 0
     78c:	6c 2f       	mov	r22, r28
     78e:	8d 2f       	mov	r24, r29
     790:	0e 94 4d 03 	call	0x69a	; 0x69a <lcd_write.part.0>
     794:	cf 5f       	subi	r28, 0xFF	; 255
     796:	ca 37       	cpi	r28, 0x7A	; 122
     798:	c1 f7       	brne	.-16     	; 0x78a <lcd_clear+0x8>
     79a:	df 5f       	subi	r29, 0xFF	; 255
     79c:	d4 30       	cpi	r29, 0x04	; 4
     79e:	a1 f7       	brne	.-24     	; 0x788 <lcd_clear+0x6>
     7a0:	df 91       	pop	r29
     7a2:	cf 91       	pop	r28
     7a4:	08 95       	ret

000007a6 <lcd_init>:
     7a6:	0e 94 06 04 	call	0x80c	; 0x80c <lcdDriver_init>
     7aa:	80 e0       	ldi	r24, 0x00	; 0
     7ac:	0e 94 22 04 	call	0x844	; 0x844 <lcdDriver_selectController>
     7b0:	0e 94 48 03 	call	0x690	; 0x690 <lcd_waitBusy>
     7b4:	82 ee       	ldi	r24, 0xE2	; 226
     7b6:	0e 94 18 04 	call	0x830	; 0x830 <lcdDriver_writeCommand>
     7ba:	0e 94 48 03 	call	0x690	; 0x690 <lcd_waitBusy>
     7be:	8f ea       	ldi	r24, 0xAF	; 175
     7c0:	0e 94 18 04 	call	0x830	; 0x830 <lcdDriver_writeCommand>
     7c4:	81 e0       	ldi	r24, 0x01	; 1
     7c6:	0e 94 22 04 	call	0x844	; 0x844 <lcdDriver_selectController>
     7ca:	0e 94 48 03 	call	0x690	; 0x690 <lcd_waitBusy>
     7ce:	82 ee       	ldi	r24, 0xE2	; 226
     7d0:	0e 94 18 04 	call	0x830	; 0x830 <lcdDriver_writeCommand>
     7d4:	0e 94 48 03 	call	0x690	; 0x690 <lcd_waitBusy>
     7d8:	8f ea       	ldi	r24, 0xAF	; 175
     7da:	0e 94 18 04 	call	0x830	; 0x830 <lcdDriver_writeCommand>
     7de:	0e 94 c1 03 	call	0x782	; 0x782 <lcd_clear>
     7e2:	10 92 7a 08 	sts	0x087A, r1
     7e6:	10 92 79 08 	sts	0x0879, r1
     7ea:	8e e0       	ldi	r24, 0x0E	; 14
     7ec:	eb e7       	ldi	r30, 0x7B	; 123
     7ee:	f8 e0       	ldi	r31, 0x08	; 8
     7f0:	df 01       	movw	r26, r30
     7f2:	1d 92       	st	X+, r1
     7f4:	8a 95       	dec	r24
     7f6:	e9 f7       	brne	.-6      	; 0x7f2 <lcd_init+0x4c>
     7f8:	8c eb       	ldi	r24, 0xBC	; 188
     7fa:	93 e0       	ldi	r25, 0x03	; 3
     7fc:	90 93 84 08 	sts	0x0884, r25
     800:	80 93 83 08 	sts	0x0883, r24
     804:	82 e0       	ldi	r24, 0x02	; 2
     806:	80 93 7e 08 	sts	0x087E, r24
     80a:	08 95       	ret

0000080c <lcdDriver_init>:
     80c:	54 9a       	sbi	0x0a, 4	; 10
     80e:	55 9a       	sbi	0x0a, 5	; 10
     810:	5d 9a       	sbi	0x0b, 5	; 11
     812:	57 9a       	sbi	0x0a, 7	; 10
     814:	5f 9a       	sbi	0x0b, 7	; 11
     816:	56 9a       	sbi	0x0a, 6	; 10
     818:	08 95       	ret

0000081a <lcdDriver_writeData>:
     81a:	5e 9a       	sbi	0x0b, 6	; 11
     81c:	9f ef       	ldi	r25, 0xFF	; 255
     81e:	9d b9       	out	0x0d, r25	; 13
     820:	8e b9       	out	0x0e, r24	; 14
     822:	5d 98       	cbi	0x0b, 5	; 11
     824:	00 00       	nop
     826:	00 00       	nop
     828:	00 00       	nop
     82a:	5d 9a       	sbi	0x0b, 5	; 11
     82c:	5e 98       	cbi	0x0b, 6	; 11
     82e:	08 95       	ret

00000830 <lcdDriver_writeCommand>:
     830:	5e 98       	cbi	0x0b, 6	; 11
     832:	9f ef       	ldi	r25, 0xFF	; 255
     834:	9d b9       	out	0x0d, r25	; 13
     836:	8e b9       	out	0x0e, r24	; 14
     838:	5d 98       	cbi	0x0b, 5	; 11
     83a:	00 00       	nop
     83c:	00 00       	nop
     83e:	00 00       	nop
     840:	5d 9a       	sbi	0x0b, 5	; 11
     842:	08 95       	ret

00000844 <lcdDriver_selectController>:
     844:	2b b1       	in	r18, 0x0b	; 11
     846:	30 e1       	ldi	r19, 0x10	; 16
     848:	83 9f       	mul	r24, r19
     84a:	c0 01       	movw	r24, r0
     84c:	11 24       	eor	r1, r1
     84e:	2f 7e       	andi	r18, 0xEF	; 239
     850:	28 2b       	or	r18, r24
     852:	2b b9       	out	0x0b, r18	; 11
     854:	08 95       	ret

00000856 <lcdDriver_readStatus>:
     856:	5e 98       	cbi	0x0b, 6	; 11
     858:	1d b8       	out	0x0d, r1	; 13
     85a:	1e b8       	out	0x0e, r1	; 14
     85c:	5f 98       	cbi	0x0b, 7	; 11
     85e:	00 00       	nop
     860:	00 00       	nop
     862:	00 00       	nop
     864:	8c b1       	in	r24, 0x0c	; 12
     866:	5f 9a       	sbi	0x0b, 7	; 11
     868:	08 95       	ret

0000086a <led_redInit>:
     86a:	cf 93       	push	r28
     86c:	df 93       	push	r29
     86e:	cd b7       	in	r28, 0x3d	; 61
     870:	de b7       	in	r29, 0x3e	; 62
     872:	83 e3       	ldi	r24, 0x33	; 51
     874:	90 e0       	ldi	r25, 0x00	; 0
     876:	23 e3       	ldi	r18, 0x33	; 51
     878:	30 e0       	ldi	r19, 0x00	; 0
     87a:	f9 01       	movw	r30, r18
     87c:	20 81       	ld	r18, Z
     87e:	22 60       	ori	r18, 0x02	; 2
     880:	fc 01       	movw	r30, r24
     882:	20 83       	st	Z, r18
     884:	0e 94 68 04 	call	0x8d0	; 0x8d0 <led_redOff>
     888:	df 91       	pop	r29
     88a:	cf 91       	pop	r28
     88c:	08 95       	ret

0000088e <led_redToggle>:
     88e:	cf 93       	push	r28
     890:	df 93       	push	r29
     892:	cd b7       	in	r28, 0x3d	; 61
     894:	de b7       	in	r29, 0x3e	; 62
     896:	84 e3       	ldi	r24, 0x34	; 52
     898:	90 e0       	ldi	r25, 0x00	; 0
     89a:	24 e3       	ldi	r18, 0x34	; 52
     89c:	30 e0       	ldi	r19, 0x00	; 0
     89e:	f9 01       	movw	r30, r18
     8a0:	30 81       	ld	r19, Z
     8a2:	22 e0       	ldi	r18, 0x02	; 2
     8a4:	23 27       	eor	r18, r19
     8a6:	fc 01       	movw	r30, r24
     8a8:	20 83       	st	Z, r18
     8aa:	df 91       	pop	r29
     8ac:	cf 91       	pop	r28
     8ae:	08 95       	ret

000008b0 <led_redOn>:
     8b0:	cf 93       	push	r28
     8b2:	df 93       	push	r29
     8b4:	cd b7       	in	r28, 0x3d	; 61
     8b6:	de b7       	in	r29, 0x3e	; 62
     8b8:	84 e3       	ldi	r24, 0x34	; 52
     8ba:	90 e0       	ldi	r25, 0x00	; 0
     8bc:	24 e3       	ldi	r18, 0x34	; 52
     8be:	30 e0       	ldi	r19, 0x00	; 0
     8c0:	f9 01       	movw	r30, r18
     8c2:	20 81       	ld	r18, Z
     8c4:	2d 7f       	andi	r18, 0xFD	; 253
     8c6:	fc 01       	movw	r30, r24
     8c8:	20 83       	st	Z, r18
     8ca:	df 91       	pop	r29
     8cc:	cf 91       	pop	r28
     8ce:	08 95       	ret

000008d0 <led_redOff>:
     8d0:	cf 93       	push	r28
     8d2:	df 93       	push	r29
     8d4:	cd b7       	in	r28, 0x3d	; 61
     8d6:	de b7       	in	r29, 0x3e	; 62
     8d8:	84 e3       	ldi	r24, 0x34	; 52
     8da:	90 e0       	ldi	r25, 0x00	; 0
     8dc:	24 e3       	ldi	r18, 0x34	; 52
     8de:	30 e0       	ldi	r19, 0x00	; 0
     8e0:	f9 01       	movw	r30, r18
     8e2:	20 81       	ld	r18, Z
     8e4:	22 60       	ori	r18, 0x02	; 2
     8e6:	fc 01       	movw	r30, r24
     8e8:	20 83       	st	Z, r18
     8ea:	df 91       	pop	r29
     8ec:	cf 91       	pop	r28
     8ee:	08 95       	ret

000008f0 <led_yellowInit>:
     8f0:	cf 93       	push	r28
     8f2:	df 93       	push	r29
     8f4:	cd b7       	in	r28, 0x3d	; 61
     8f6:	de b7       	in	r29, 0x3e	; 62
     8f8:	80 e3       	ldi	r24, 0x30	; 48
     8fa:	90 e0       	ldi	r25, 0x00	; 0
     8fc:	20 e3       	ldi	r18, 0x30	; 48
     8fe:	30 e0       	ldi	r19, 0x00	; 0
     900:	f9 01       	movw	r30, r18
     902:	20 81       	ld	r18, Z
     904:	20 68       	ori	r18, 0x80	; 128
     906:	fc 01       	movw	r30, r24
     908:	20 83       	st	Z, r18
     90a:	0e 94 ab 04 	call	0x956	; 0x956 <led_yellowOff>
     90e:	df 91       	pop	r29
     910:	cf 91       	pop	r28
     912:	08 95       	ret

00000914 <led_yellowToggle>:
     914:	cf 93       	push	r28
     916:	df 93       	push	r29
     918:	cd b7       	in	r28, 0x3d	; 61
     91a:	de b7       	in	r29, 0x3e	; 62
     91c:	81 e3       	ldi	r24, 0x31	; 49
     91e:	90 e0       	ldi	r25, 0x00	; 0
     920:	21 e3       	ldi	r18, 0x31	; 49
     922:	30 e0       	ldi	r19, 0x00	; 0
     924:	f9 01       	movw	r30, r18
     926:	30 81       	ld	r19, Z
     928:	20 e8       	ldi	r18, 0x80	; 128
     92a:	23 27       	eor	r18, r19
     92c:	fc 01       	movw	r30, r24
     92e:	20 83       	st	Z, r18
     930:	df 91       	pop	r29
     932:	cf 91       	pop	r28
     934:	08 95       	ret

00000936 <led_yellowOn>:
     936:	cf 93       	push	r28
     938:	df 93       	push	r29
     93a:	cd b7       	in	r28, 0x3d	; 61
     93c:	de b7       	in	r29, 0x3e	; 62
     93e:	81 e3       	ldi	r24, 0x31	; 49
     940:	90 e0       	ldi	r25, 0x00	; 0
     942:	21 e3       	ldi	r18, 0x31	; 49
     944:	30 e0       	ldi	r19, 0x00	; 0
     946:	f9 01       	movw	r30, r18
     948:	20 81       	ld	r18, Z
     94a:	2f 77       	andi	r18, 0x7F	; 127
     94c:	fc 01       	movw	r30, r24
     94e:	20 83       	st	Z, r18
     950:	df 91       	pop	r29
     952:	cf 91       	pop	r28
     954:	08 95       	ret

00000956 <led_yellowOff>:
     956:	cf 93       	push	r28
     958:	df 93       	push	r29
     95a:	cd b7       	in	r28, 0x3d	; 61
     95c:	de b7       	in	r29, 0x3e	; 62
     95e:	81 e3       	ldi	r24, 0x31	; 49
     960:	90 e0       	ldi	r25, 0x00	; 0
     962:	21 e3       	ldi	r18, 0x31	; 49
     964:	30 e0       	ldi	r19, 0x00	; 0
     966:	f9 01       	movw	r30, r18
     968:	20 81       	ld	r18, Z
     96a:	20 68       	ori	r18, 0x80	; 128
     96c:	fc 01       	movw	r30, r24
     96e:	20 83       	st	Z, r18
     970:	df 91       	pop	r29
     972:	cf 91       	pop	r28
     974:	08 95       	ret

00000976 <led_greenInit>:
     976:	cf 93       	push	r28
     978:	df 93       	push	r29
     97a:	cd b7       	in	r28, 0x3d	; 61
     97c:	de b7       	in	r29, 0x3e	; 62
     97e:	80 e3       	ldi	r24, 0x30	; 48
     980:	90 e0       	ldi	r25, 0x00	; 0
     982:	20 e3       	ldi	r18, 0x30	; 48
     984:	30 e0       	ldi	r19, 0x00	; 0
     986:	f9 01       	movw	r30, r18
     988:	20 81       	ld	r18, Z
     98a:	20 64       	ori	r18, 0x40	; 64
     98c:	fc 01       	movw	r30, r24
     98e:	20 83       	st	Z, r18
     990:	0e 94 ee 04 	call	0x9dc	; 0x9dc <led_greenOff>
     994:	df 91       	pop	r29
     996:	cf 91       	pop	r28
     998:	08 95       	ret

0000099a <led_greenToggle>:
     99a:	cf 93       	push	r28
     99c:	df 93       	push	r29
     99e:	cd b7       	in	r28, 0x3d	; 61
     9a0:	de b7       	in	r29, 0x3e	; 62
     9a2:	81 e3       	ldi	r24, 0x31	; 49
     9a4:	90 e0       	ldi	r25, 0x00	; 0
     9a6:	21 e3       	ldi	r18, 0x31	; 49
     9a8:	30 e0       	ldi	r19, 0x00	; 0
     9aa:	f9 01       	movw	r30, r18
     9ac:	30 81       	ld	r19, Z
     9ae:	20 e4       	ldi	r18, 0x40	; 64
     9b0:	23 27       	eor	r18, r19
     9b2:	fc 01       	movw	r30, r24
     9b4:	20 83       	st	Z, r18
     9b6:	df 91       	pop	r29
     9b8:	cf 91       	pop	r28
     9ba:	08 95       	ret

000009bc <led_greenOn>:
     9bc:	cf 93       	push	r28
     9be:	df 93       	push	r29
     9c0:	cd b7       	in	r28, 0x3d	; 61
     9c2:	de b7       	in	r29, 0x3e	; 62
     9c4:	81 e3       	ldi	r24, 0x31	; 49
     9c6:	90 e0       	ldi	r25, 0x00	; 0
     9c8:	21 e3       	ldi	r18, 0x31	; 49
     9ca:	30 e0       	ldi	r19, 0x00	; 0
     9cc:	f9 01       	movw	r30, r18
     9ce:	20 81       	ld	r18, Z
     9d0:	2f 7b       	andi	r18, 0xBF	; 191
     9d2:	fc 01       	movw	r30, r24
     9d4:	20 83       	st	Z, r18
     9d6:	df 91       	pop	r29
     9d8:	cf 91       	pop	r28
     9da:	08 95       	ret

000009dc <led_greenOff>:
     9dc:	cf 93       	push	r28
     9de:	df 93       	push	r29
     9e0:	cd b7       	in	r28, 0x3d	; 61
     9e2:	de b7       	in	r29, 0x3e	; 62
     9e4:	81 e3       	ldi	r24, 0x31	; 49
     9e6:	90 e0       	ldi	r25, 0x00	; 0
     9e8:	21 e3       	ldi	r18, 0x31	; 49
     9ea:	30 e0       	ldi	r19, 0x00	; 0
     9ec:	f9 01       	movw	r30, r18
     9ee:	20 81       	ld	r18, Z
     9f0:	20 64       	ori	r18, 0x40	; 64
     9f2:	fc 01       	movw	r30, r24
     9f4:	20 83       	st	Z, r18
     9f6:	df 91       	pop	r29
     9f8:	cf 91       	pop	r28
     9fa:	08 95       	ret

000009fc <__udivmodsi4>:
     9fc:	a1 e2       	ldi	r26, 0x21	; 33
     9fe:	1a 2e       	mov	r1, r26
     a00:	aa 1b       	sub	r26, r26
     a02:	bb 1b       	sub	r27, r27
     a04:	fd 01       	movw	r30, r26
     a06:	0d c0       	rjmp	.+26     	; 0xa22 <__udivmodsi4_ep>

00000a08 <__udivmodsi4_loop>:
     a08:	aa 1f       	adc	r26, r26
     a0a:	bb 1f       	adc	r27, r27
     a0c:	ee 1f       	adc	r30, r30
     a0e:	ff 1f       	adc	r31, r31
     a10:	a2 17       	cp	r26, r18
     a12:	b3 07       	cpc	r27, r19
     a14:	e4 07       	cpc	r30, r20
     a16:	f5 07       	cpc	r31, r21
     a18:	20 f0       	brcs	.+8      	; 0xa22 <__udivmodsi4_ep>
     a1a:	a2 1b       	sub	r26, r18
     a1c:	b3 0b       	sbc	r27, r19
     a1e:	e4 0b       	sbc	r30, r20
     a20:	f5 0b       	sbc	r31, r21

00000a22 <__udivmodsi4_ep>:
     a22:	66 1f       	adc	r22, r22
     a24:	77 1f       	adc	r23, r23
     a26:	88 1f       	adc	r24, r24
     a28:	99 1f       	adc	r25, r25
     a2a:	1a 94       	dec	r1
     a2c:	69 f7       	brne	.-38     	; 0xa08 <__udivmodsi4_loop>
     a2e:	60 95       	com	r22
     a30:	70 95       	com	r23
     a32:	80 95       	com	r24
     a34:	90 95       	com	r25
     a36:	9b 01       	movw	r18, r22
     a38:	ac 01       	movw	r20, r24
     a3a:	bd 01       	movw	r22, r26
     a3c:	cf 01       	movw	r24, r30
     a3e:	08 95       	ret

00000a40 <__cmpsf2>:
     a40:	0e 94 54 05 	call	0xaa8	; 0xaa8 <__fp_cmp>
     a44:	08 f4       	brcc	.+2      	; 0xa48 <__cmpsf2+0x8>
     a46:	81 e0       	ldi	r24, 0x01	; 1
     a48:	08 95       	ret

00000a4a <__fixunssfsi>:
     a4a:	0e 94 80 05 	call	0xb00	; 0xb00 <__fp_splitA>
     a4e:	88 f0       	brcs	.+34     	; 0xa72 <__fixunssfsi+0x28>
     a50:	9f 57       	subi	r25, 0x7F	; 127
     a52:	98 f0       	brcs	.+38     	; 0xa7a <__fixunssfsi+0x30>
     a54:	b9 2f       	mov	r27, r25
     a56:	99 27       	eor	r25, r25
     a58:	b7 51       	subi	r27, 0x17	; 23
     a5a:	b0 f0       	brcs	.+44     	; 0xa88 <__fixunssfsi+0x3e>
     a5c:	e1 f0       	breq	.+56     	; 0xa96 <__fixunssfsi+0x4c>
     a5e:	66 0f       	add	r22, r22
     a60:	77 1f       	adc	r23, r23
     a62:	88 1f       	adc	r24, r24
     a64:	99 1f       	adc	r25, r25
     a66:	1a f0       	brmi	.+6      	; 0xa6e <__fixunssfsi+0x24>
     a68:	ba 95       	dec	r27
     a6a:	c9 f7       	brne	.-14     	; 0xa5e <__fixunssfsi+0x14>
     a6c:	14 c0       	rjmp	.+40     	; 0xa96 <__fixunssfsi+0x4c>
     a6e:	b1 30       	cpi	r27, 0x01	; 1
     a70:	91 f0       	breq	.+36     	; 0xa96 <__fixunssfsi+0x4c>
     a72:	0e 94 9a 05 	call	0xb34	; 0xb34 <__fp_zero>
     a76:	b1 e0       	ldi	r27, 0x01	; 1
     a78:	08 95       	ret
     a7a:	0c 94 9a 05 	jmp	0xb34	; 0xb34 <__fp_zero>
     a7e:	67 2f       	mov	r22, r23
     a80:	78 2f       	mov	r23, r24
     a82:	88 27       	eor	r24, r24
     a84:	b8 5f       	subi	r27, 0xF8	; 248
     a86:	39 f0       	breq	.+14     	; 0xa96 <__fixunssfsi+0x4c>
     a88:	b9 3f       	cpi	r27, 0xF9	; 249
     a8a:	cc f3       	brlt	.-14     	; 0xa7e <__fixunssfsi+0x34>
     a8c:	86 95       	lsr	r24
     a8e:	77 95       	ror	r23
     a90:	67 95       	ror	r22
     a92:	b3 95       	inc	r27
     a94:	d9 f7       	brne	.-10     	; 0xa8c <__fixunssfsi+0x42>
     a96:	3e f4       	brtc	.+14     	; 0xaa6 <__fixunssfsi+0x5c>
     a98:	90 95       	com	r25
     a9a:	80 95       	com	r24
     a9c:	70 95       	com	r23
     a9e:	61 95       	neg	r22
     aa0:	7f 4f       	sbci	r23, 0xFF	; 255
     aa2:	8f 4f       	sbci	r24, 0xFF	; 255
     aa4:	9f 4f       	sbci	r25, 0xFF	; 255
     aa6:	08 95       	ret

00000aa8 <__fp_cmp>:
     aa8:	99 0f       	add	r25, r25
     aaa:	00 08       	sbc	r0, r0
     aac:	55 0f       	add	r21, r21
     aae:	aa 0b       	sbc	r26, r26
     ab0:	e0 e8       	ldi	r30, 0x80	; 128
     ab2:	fe ef       	ldi	r31, 0xFE	; 254
     ab4:	16 16       	cp	r1, r22
     ab6:	17 06       	cpc	r1, r23
     ab8:	e8 07       	cpc	r30, r24
     aba:	f9 07       	cpc	r31, r25
     abc:	c0 f0       	brcs	.+48     	; 0xaee <__fp_cmp+0x46>
     abe:	12 16       	cp	r1, r18
     ac0:	13 06       	cpc	r1, r19
     ac2:	e4 07       	cpc	r30, r20
     ac4:	f5 07       	cpc	r31, r21
     ac6:	98 f0       	brcs	.+38     	; 0xaee <__fp_cmp+0x46>
     ac8:	62 1b       	sub	r22, r18
     aca:	73 0b       	sbc	r23, r19
     acc:	84 0b       	sbc	r24, r20
     ace:	95 0b       	sbc	r25, r21
     ad0:	39 f4       	brne	.+14     	; 0xae0 <__fp_cmp+0x38>
     ad2:	0a 26       	eor	r0, r26
     ad4:	61 f0       	breq	.+24     	; 0xaee <__fp_cmp+0x46>
     ad6:	23 2b       	or	r18, r19
     ad8:	24 2b       	or	r18, r20
     ada:	25 2b       	or	r18, r21
     adc:	21 f4       	brne	.+8      	; 0xae6 <__fp_cmp+0x3e>
     ade:	08 95       	ret
     ae0:	0a 26       	eor	r0, r26
     ae2:	09 f4       	brne	.+2      	; 0xae6 <__fp_cmp+0x3e>
     ae4:	a1 40       	sbci	r26, 0x01	; 1
     ae6:	a6 95       	lsr	r26
     ae8:	8f ef       	ldi	r24, 0xFF	; 255
     aea:	81 1d       	adc	r24, r1
     aec:	81 1d       	adc	r24, r1
     aee:	08 95       	ret

00000af0 <__fp_split3>:
     af0:	57 fd       	sbrc	r21, 7
     af2:	90 58       	subi	r25, 0x80	; 128
     af4:	44 0f       	add	r20, r20
     af6:	55 1f       	adc	r21, r21
     af8:	59 f0       	breq	.+22     	; 0xb10 <__fp_splitA+0x10>
     afa:	5f 3f       	cpi	r21, 0xFF	; 255
     afc:	71 f0       	breq	.+28     	; 0xb1a <__fp_splitA+0x1a>
     afe:	47 95       	ror	r20

00000b00 <__fp_splitA>:
     b00:	88 0f       	add	r24, r24
     b02:	97 fb       	bst	r25, 7
     b04:	99 1f       	adc	r25, r25
     b06:	61 f0       	breq	.+24     	; 0xb20 <__fp_splitA+0x20>
     b08:	9f 3f       	cpi	r25, 0xFF	; 255
     b0a:	79 f0       	breq	.+30     	; 0xb2a <__fp_splitA+0x2a>
     b0c:	87 95       	ror	r24
     b0e:	08 95       	ret
     b10:	12 16       	cp	r1, r18
     b12:	13 06       	cpc	r1, r19
     b14:	14 06       	cpc	r1, r20
     b16:	55 1f       	adc	r21, r21
     b18:	f2 cf       	rjmp	.-28     	; 0xafe <__fp_split3+0xe>
     b1a:	46 95       	lsr	r20
     b1c:	f1 df       	rcall	.-30     	; 0xb00 <__fp_splitA>
     b1e:	08 c0       	rjmp	.+16     	; 0xb30 <__fp_splitA+0x30>
     b20:	16 16       	cp	r1, r22
     b22:	17 06       	cpc	r1, r23
     b24:	18 06       	cpc	r1, r24
     b26:	99 1f       	adc	r25, r25
     b28:	f1 cf       	rjmp	.-30     	; 0xb0c <__fp_splitA+0xc>
     b2a:	86 95       	lsr	r24
     b2c:	71 05       	cpc	r23, r1
     b2e:	61 05       	cpc	r22, r1
     b30:	08 94       	sec
     b32:	08 95       	ret

00000b34 <__fp_zero>:
     b34:	e8 94       	clt

00000b36 <__fp_szero>:
     b36:	bb 27       	eor	r27, r27
     b38:	66 27       	eor	r22, r22
     b3a:	77 27       	eor	r23, r23
     b3c:	cb 01       	movw	r24, r22
     b3e:	97 f9       	bld	r25, 7
     b40:	08 95       	ret

00000b42 <__gesf2>:
     b42:	0e 94 54 05 	call	0xaa8	; 0xaa8 <__fp_cmp>
     b46:	08 f4       	brcc	.+2      	; 0xb4a <__gesf2+0x8>
     b48:	8f ef       	ldi	r24, 0xFF	; 255
     b4a:	08 95       	ret

00000b4c <__mulsf3>:
     b4c:	0e 94 b9 05 	call	0xb72	; 0xb72 <__mulsf3x>
     b50:	0c 94 2a 06 	jmp	0xc54	; 0xc54 <__fp_round>
     b54:	0e 94 1c 06 	call	0xc38	; 0xc38 <__fp_pscA>
     b58:	38 f0       	brcs	.+14     	; 0xb68 <__mulsf3+0x1c>
     b5a:	0e 94 23 06 	call	0xc46	; 0xc46 <__fp_pscB>
     b5e:	20 f0       	brcs	.+8      	; 0xb68 <__mulsf3+0x1c>
     b60:	95 23       	and	r25, r21
     b62:	11 f0       	breq	.+4      	; 0xb68 <__mulsf3+0x1c>
     b64:	0c 94 13 06 	jmp	0xc26	; 0xc26 <__fp_inf>
     b68:	0c 94 19 06 	jmp	0xc32	; 0xc32 <__fp_nan>
     b6c:	11 24       	eor	r1, r1
     b6e:	0c 94 9b 05 	jmp	0xb36	; 0xb36 <__fp_szero>

00000b72 <__mulsf3x>:
     b72:	0e 94 78 05 	call	0xaf0	; 0xaf0 <__fp_split3>
     b76:	70 f3       	brcs	.-36     	; 0xb54 <__mulsf3+0x8>

00000b78 <__mulsf3_pse>:
     b78:	95 9f       	mul	r25, r21
     b7a:	c1 f3       	breq	.-16     	; 0xb6c <__mulsf3+0x20>
     b7c:	95 0f       	add	r25, r21
     b7e:	50 e0       	ldi	r21, 0x00	; 0
     b80:	55 1f       	adc	r21, r21
     b82:	62 9f       	mul	r22, r18
     b84:	f0 01       	movw	r30, r0
     b86:	72 9f       	mul	r23, r18
     b88:	bb 27       	eor	r27, r27
     b8a:	f0 0d       	add	r31, r0
     b8c:	b1 1d       	adc	r27, r1
     b8e:	63 9f       	mul	r22, r19
     b90:	aa 27       	eor	r26, r26
     b92:	f0 0d       	add	r31, r0
     b94:	b1 1d       	adc	r27, r1
     b96:	aa 1f       	adc	r26, r26
     b98:	64 9f       	mul	r22, r20
     b9a:	66 27       	eor	r22, r22
     b9c:	b0 0d       	add	r27, r0
     b9e:	a1 1d       	adc	r26, r1
     ba0:	66 1f       	adc	r22, r22
     ba2:	82 9f       	mul	r24, r18
     ba4:	22 27       	eor	r18, r18
     ba6:	b0 0d       	add	r27, r0
     ba8:	a1 1d       	adc	r26, r1
     baa:	62 1f       	adc	r22, r18
     bac:	73 9f       	mul	r23, r19
     bae:	b0 0d       	add	r27, r0
     bb0:	a1 1d       	adc	r26, r1
     bb2:	62 1f       	adc	r22, r18
     bb4:	83 9f       	mul	r24, r19
     bb6:	a0 0d       	add	r26, r0
     bb8:	61 1d       	adc	r22, r1
     bba:	22 1f       	adc	r18, r18
     bbc:	74 9f       	mul	r23, r20
     bbe:	33 27       	eor	r19, r19
     bc0:	a0 0d       	add	r26, r0
     bc2:	61 1d       	adc	r22, r1
     bc4:	23 1f       	adc	r18, r19
     bc6:	84 9f       	mul	r24, r20
     bc8:	60 0d       	add	r22, r0
     bca:	21 1d       	adc	r18, r1
     bcc:	82 2f       	mov	r24, r18
     bce:	76 2f       	mov	r23, r22
     bd0:	6a 2f       	mov	r22, r26
     bd2:	11 24       	eor	r1, r1
     bd4:	9f 57       	subi	r25, 0x7F	; 127
     bd6:	50 40       	sbci	r21, 0x00	; 0
     bd8:	9a f0       	brmi	.+38     	; 0xc00 <__mulsf3_pse+0x88>
     bda:	f1 f0       	breq	.+60     	; 0xc18 <__mulsf3_pse+0xa0>
     bdc:	88 23       	and	r24, r24
     bde:	4a f0       	brmi	.+18     	; 0xbf2 <__mulsf3_pse+0x7a>
     be0:	ee 0f       	add	r30, r30
     be2:	ff 1f       	adc	r31, r31
     be4:	bb 1f       	adc	r27, r27
     be6:	66 1f       	adc	r22, r22
     be8:	77 1f       	adc	r23, r23
     bea:	88 1f       	adc	r24, r24
     bec:	91 50       	subi	r25, 0x01	; 1
     bee:	50 40       	sbci	r21, 0x00	; 0
     bf0:	a9 f7       	brne	.-22     	; 0xbdc <__mulsf3_pse+0x64>
     bf2:	9e 3f       	cpi	r25, 0xFE	; 254
     bf4:	51 05       	cpc	r21, r1
     bf6:	80 f0       	brcs	.+32     	; 0xc18 <__mulsf3_pse+0xa0>
     bf8:	0c 94 13 06 	jmp	0xc26	; 0xc26 <__fp_inf>
     bfc:	0c 94 9b 05 	jmp	0xb36	; 0xb36 <__fp_szero>
     c00:	5f 3f       	cpi	r21, 0xFF	; 255
     c02:	e4 f3       	brlt	.-8      	; 0xbfc <__mulsf3_pse+0x84>
     c04:	98 3e       	cpi	r25, 0xE8	; 232
     c06:	d4 f3       	brlt	.-12     	; 0xbfc <__mulsf3_pse+0x84>
     c08:	86 95       	lsr	r24
     c0a:	77 95       	ror	r23
     c0c:	67 95       	ror	r22
     c0e:	b7 95       	ror	r27
     c10:	f7 95       	ror	r31
     c12:	e7 95       	ror	r30
     c14:	9f 5f       	subi	r25, 0xFF	; 255
     c16:	c1 f7       	brne	.-16     	; 0xc08 <__mulsf3_pse+0x90>
     c18:	fe 2b       	or	r31, r30
     c1a:	88 0f       	add	r24, r24
     c1c:	91 1d       	adc	r25, r1
     c1e:	96 95       	lsr	r25
     c20:	87 95       	ror	r24
     c22:	97 f9       	bld	r25, 7
     c24:	08 95       	ret

00000c26 <__fp_inf>:
     c26:	97 f9       	bld	r25, 7
     c28:	9f 67       	ori	r25, 0x7F	; 127
     c2a:	80 e8       	ldi	r24, 0x80	; 128
     c2c:	70 e0       	ldi	r23, 0x00	; 0
     c2e:	60 e0       	ldi	r22, 0x00	; 0
     c30:	08 95       	ret

00000c32 <__fp_nan>:
     c32:	9f ef       	ldi	r25, 0xFF	; 255
     c34:	80 ec       	ldi	r24, 0xC0	; 192
     c36:	08 95       	ret

00000c38 <__fp_pscA>:
     c38:	00 24       	eor	r0, r0
     c3a:	0a 94       	dec	r0
     c3c:	16 16       	cp	r1, r22
     c3e:	17 06       	cpc	r1, r23
     c40:	18 06       	cpc	r1, r24
     c42:	09 06       	cpc	r0, r25
     c44:	08 95       	ret

00000c46 <__fp_pscB>:
     c46:	00 24       	eor	r0, r0
     c48:	0a 94       	dec	r0
     c4a:	12 16       	cp	r1, r18
     c4c:	13 06       	cpc	r1, r19
     c4e:	14 06       	cpc	r1, r20
     c50:	05 06       	cpc	r0, r21
     c52:	08 95       	ret

00000c54 <__fp_round>:
     c54:	09 2e       	mov	r0, r25
     c56:	03 94       	inc	r0
     c58:	00 0c       	add	r0, r0
     c5a:	11 f4       	brne	.+4      	; 0xc60 <__fp_round+0xc>
     c5c:	88 23       	and	r24, r24
     c5e:	52 f0       	brmi	.+20     	; 0xc74 <__fp_round+0x20>
     c60:	bb 0f       	add	r27, r27
     c62:	40 f4       	brcc	.+16     	; 0xc74 <__fp_round+0x20>
     c64:	bf 2b       	or	r27, r31
     c66:	11 f4       	brne	.+4      	; 0xc6c <__fp_round+0x18>
     c68:	60 ff       	sbrs	r22, 0
     c6a:	04 c0       	rjmp	.+8      	; 0xc74 <__fp_round+0x20>
     c6c:	6f 5f       	subi	r22, 0xFF	; 255
     c6e:	7f 4f       	sbci	r23, 0xFF	; 255
     c70:	8f 4f       	sbci	r24, 0xFF	; 255
     c72:	9f 4f       	sbci	r25, 0xFF	; 255
     c74:	08 95       	ret

00000c76 <fprintf>:
     c76:	cf 93       	push	r28
     c78:	df 93       	push	r29
     c7a:	cd b7       	in	r28, 0x3d	; 61
     c7c:	de b7       	in	r29, 0x3e	; 62
     c7e:	ae 01       	movw	r20, r28
     c80:	47 5f       	subi	r20, 0xF7	; 247
     c82:	5f 4f       	sbci	r21, 0xFF	; 255
     c84:	6f 81       	ldd	r22, Y+7	; 0x07
     c86:	78 85       	ldd	r23, Y+8	; 0x08
     c88:	8d 81       	ldd	r24, Y+5	; 0x05
     c8a:	9e 81       	ldd	r25, Y+6	; 0x06
     c8c:	0e 94 8d 06 	call	0xd1a	; 0xd1a <vfprintf>
     c90:	df 91       	pop	r29
     c92:	cf 91       	pop	r28
     c94:	08 95       	ret

00000c96 <fwrite>:
     c96:	8f 92       	push	r8
     c98:	9f 92       	push	r9
     c9a:	af 92       	push	r10
     c9c:	bf 92       	push	r11
     c9e:	cf 92       	push	r12
     ca0:	df 92       	push	r13
     ca2:	ef 92       	push	r14
     ca4:	ff 92       	push	r15
     ca6:	0f 93       	push	r16
     ca8:	1f 93       	push	r17
     caa:	cf 93       	push	r28
     cac:	df 93       	push	r29
     cae:	5b 01       	movw	r10, r22
     cb0:	4a 01       	movw	r8, r20
     cb2:	79 01       	movw	r14, r18
     cb4:	d9 01       	movw	r26, r18
     cb6:	13 96       	adiw	r26, 0x03	; 3
     cb8:	2c 91       	ld	r18, X
     cba:	21 ff       	sbrs	r18, 1
     cbc:	1d c0       	rjmp	.+58     	; 0xcf8 <fwrite+0x62>
     cbe:	c0 e0       	ldi	r28, 0x00	; 0
     cc0:	d0 e0       	ldi	r29, 0x00	; 0
     cc2:	c8 15       	cp	r28, r8
     cc4:	d9 05       	cpc	r29, r9
     cc6:	d9 f0       	breq	.+54     	; 0xcfe <fwrite+0x68>
     cc8:	8c 01       	movw	r16, r24
     cca:	6c 01       	movw	r12, r24
     ccc:	ca 0c       	add	r12, r10
     cce:	db 1c       	adc	r13, r11
     cd0:	c8 01       	movw	r24, r16
     cd2:	0c 15       	cp	r16, r12
     cd4:	1d 05       	cpc	r17, r13
     cd6:	71 f0       	breq	.+28     	; 0xcf4 <fwrite+0x5e>
     cd8:	0f 5f       	subi	r16, 0xFF	; 255
     cda:	1f 4f       	sbci	r17, 0xFF	; 255
     cdc:	d7 01       	movw	r26, r14
     cde:	18 96       	adiw	r26, 0x08	; 8
     ce0:	ed 91       	ld	r30, X+
     ce2:	fc 91       	ld	r31, X
     ce4:	19 97       	sbiw	r26, 0x09	; 9
     ce6:	b7 01       	movw	r22, r14
     ce8:	dc 01       	movw	r26, r24
     cea:	8c 91       	ld	r24, X
     cec:	09 95       	icall
     cee:	89 2b       	or	r24, r25
     cf0:	79 f3       	breq	.-34     	; 0xcd0 <fwrite+0x3a>
     cf2:	05 c0       	rjmp	.+10     	; 0xcfe <fwrite+0x68>
     cf4:	21 96       	adiw	r28, 0x01	; 1
     cf6:	e5 cf       	rjmp	.-54     	; 0xcc2 <fwrite+0x2c>
     cf8:	80 e0       	ldi	r24, 0x00	; 0
     cfa:	90 e0       	ldi	r25, 0x00	; 0
     cfc:	01 c0       	rjmp	.+2      	; 0xd00 <fwrite+0x6a>
     cfe:	ce 01       	movw	r24, r28
     d00:	df 91       	pop	r29
     d02:	cf 91       	pop	r28
     d04:	1f 91       	pop	r17
     d06:	0f 91       	pop	r16
     d08:	ff 90       	pop	r15
     d0a:	ef 90       	pop	r14
     d0c:	df 90       	pop	r13
     d0e:	cf 90       	pop	r12
     d10:	bf 90       	pop	r11
     d12:	af 90       	pop	r10
     d14:	9f 90       	pop	r9
     d16:	8f 90       	pop	r8
     d18:	08 95       	ret

00000d1a <vfprintf>:
     d1a:	2f 92       	push	r2
     d1c:	3f 92       	push	r3
     d1e:	4f 92       	push	r4
     d20:	5f 92       	push	r5
     d22:	6f 92       	push	r6
     d24:	7f 92       	push	r7
     d26:	8f 92       	push	r8
     d28:	9f 92       	push	r9
     d2a:	af 92       	push	r10
     d2c:	bf 92       	push	r11
     d2e:	cf 92       	push	r12
     d30:	df 92       	push	r13
     d32:	ef 92       	push	r14
     d34:	ff 92       	push	r15
     d36:	0f 93       	push	r16
     d38:	1f 93       	push	r17
     d3a:	cf 93       	push	r28
     d3c:	df 93       	push	r29
     d3e:	cd b7       	in	r28, 0x3d	; 61
     d40:	de b7       	in	r29, 0x3e	; 62
     d42:	2c 97       	sbiw	r28, 0x0c	; 12
     d44:	0f b6       	in	r0, 0x3f	; 63
     d46:	f8 94       	cli
     d48:	de bf       	out	0x3e, r29	; 62
     d4a:	0f be       	out	0x3f, r0	; 63
     d4c:	cd bf       	out	0x3d, r28	; 61
     d4e:	7c 01       	movw	r14, r24
     d50:	6b 01       	movw	r12, r22
     d52:	8a 01       	movw	r16, r20
     d54:	fc 01       	movw	r30, r24
     d56:	17 82       	std	Z+7, r1	; 0x07
     d58:	16 82       	std	Z+6, r1	; 0x06
     d5a:	83 81       	ldd	r24, Z+3	; 0x03
     d5c:	81 ff       	sbrs	r24, 1
     d5e:	bd c1       	rjmp	.+890    	; 0x10da <vfprintf+0x3c0>
     d60:	ce 01       	movw	r24, r28
     d62:	01 96       	adiw	r24, 0x01	; 1
     d64:	4c 01       	movw	r8, r24
     d66:	f7 01       	movw	r30, r14
     d68:	93 81       	ldd	r25, Z+3	; 0x03
     d6a:	f6 01       	movw	r30, r12
     d6c:	93 fd       	sbrc	r25, 3
     d6e:	85 91       	lpm	r24, Z+
     d70:	93 ff       	sbrs	r25, 3
     d72:	81 91       	ld	r24, Z+
     d74:	6f 01       	movw	r12, r30
     d76:	88 23       	and	r24, r24
     d78:	09 f4       	brne	.+2      	; 0xd7c <vfprintf+0x62>
     d7a:	ab c1       	rjmp	.+854    	; 0x10d2 <vfprintf+0x3b8>
     d7c:	85 32       	cpi	r24, 0x25	; 37
     d7e:	39 f4       	brne	.+14     	; 0xd8e <vfprintf+0x74>
     d80:	93 fd       	sbrc	r25, 3
     d82:	85 91       	lpm	r24, Z+
     d84:	93 ff       	sbrs	r25, 3
     d86:	81 91       	ld	r24, Z+
     d88:	6f 01       	movw	r12, r30
     d8a:	85 32       	cpi	r24, 0x25	; 37
     d8c:	29 f4       	brne	.+10     	; 0xd98 <vfprintf+0x7e>
     d8e:	b7 01       	movw	r22, r14
     d90:	90 e0       	ldi	r25, 0x00	; 0
     d92:	0e 94 9e 08 	call	0x113c	; 0x113c <fputc>
     d96:	e7 cf       	rjmp	.-50     	; 0xd66 <vfprintf+0x4c>
     d98:	51 2c       	mov	r5, r1
     d9a:	31 2c       	mov	r3, r1
     d9c:	20 e0       	ldi	r18, 0x00	; 0
     d9e:	20 32       	cpi	r18, 0x20	; 32
     da0:	a0 f4       	brcc	.+40     	; 0xdca <vfprintf+0xb0>
     da2:	8b 32       	cpi	r24, 0x2B	; 43
     da4:	69 f0       	breq	.+26     	; 0xdc0 <vfprintf+0xa6>
     da6:	30 f4       	brcc	.+12     	; 0xdb4 <vfprintf+0x9a>
     da8:	80 32       	cpi	r24, 0x20	; 32
     daa:	59 f0       	breq	.+22     	; 0xdc2 <vfprintf+0xa8>
     dac:	83 32       	cpi	r24, 0x23	; 35
     dae:	69 f4       	brne	.+26     	; 0xdca <vfprintf+0xb0>
     db0:	20 61       	ori	r18, 0x10	; 16
     db2:	2c c0       	rjmp	.+88     	; 0xe0c <vfprintf+0xf2>
     db4:	8d 32       	cpi	r24, 0x2D	; 45
     db6:	39 f0       	breq	.+14     	; 0xdc6 <vfprintf+0xac>
     db8:	80 33       	cpi	r24, 0x30	; 48
     dba:	39 f4       	brne	.+14     	; 0xdca <vfprintf+0xb0>
     dbc:	21 60       	ori	r18, 0x01	; 1
     dbe:	26 c0       	rjmp	.+76     	; 0xe0c <vfprintf+0xf2>
     dc0:	22 60       	ori	r18, 0x02	; 2
     dc2:	24 60       	ori	r18, 0x04	; 4
     dc4:	23 c0       	rjmp	.+70     	; 0xe0c <vfprintf+0xf2>
     dc6:	28 60       	ori	r18, 0x08	; 8
     dc8:	21 c0       	rjmp	.+66     	; 0xe0c <vfprintf+0xf2>
     dca:	27 fd       	sbrc	r18, 7
     dcc:	27 c0       	rjmp	.+78     	; 0xe1c <vfprintf+0x102>
     dce:	30 ed       	ldi	r19, 0xD0	; 208
     dd0:	38 0f       	add	r19, r24
     dd2:	3a 30       	cpi	r19, 0x0A	; 10
     dd4:	78 f4       	brcc	.+30     	; 0xdf4 <vfprintf+0xda>
     dd6:	26 ff       	sbrs	r18, 6
     dd8:	06 c0       	rjmp	.+12     	; 0xde6 <vfprintf+0xcc>
     dda:	fa e0       	ldi	r31, 0x0A	; 10
     ddc:	5f 9e       	mul	r5, r31
     dde:	30 0d       	add	r19, r0
     de0:	11 24       	eor	r1, r1
     de2:	53 2e       	mov	r5, r19
     de4:	13 c0       	rjmp	.+38     	; 0xe0c <vfprintf+0xf2>
     de6:	8a e0       	ldi	r24, 0x0A	; 10
     de8:	38 9e       	mul	r3, r24
     dea:	30 0d       	add	r19, r0
     dec:	11 24       	eor	r1, r1
     dee:	33 2e       	mov	r3, r19
     df0:	20 62       	ori	r18, 0x20	; 32
     df2:	0c c0       	rjmp	.+24     	; 0xe0c <vfprintf+0xf2>
     df4:	8e 32       	cpi	r24, 0x2E	; 46
     df6:	21 f4       	brne	.+8      	; 0xe00 <vfprintf+0xe6>
     df8:	26 fd       	sbrc	r18, 6
     dfa:	6b c1       	rjmp	.+726    	; 0x10d2 <vfprintf+0x3b8>
     dfc:	20 64       	ori	r18, 0x40	; 64
     dfe:	06 c0       	rjmp	.+12     	; 0xe0c <vfprintf+0xf2>
     e00:	8c 36       	cpi	r24, 0x6C	; 108
     e02:	11 f4       	brne	.+4      	; 0xe08 <vfprintf+0xee>
     e04:	20 68       	ori	r18, 0x80	; 128
     e06:	02 c0       	rjmp	.+4      	; 0xe0c <vfprintf+0xf2>
     e08:	88 36       	cpi	r24, 0x68	; 104
     e0a:	41 f4       	brne	.+16     	; 0xe1c <vfprintf+0x102>
     e0c:	f6 01       	movw	r30, r12
     e0e:	93 fd       	sbrc	r25, 3
     e10:	85 91       	lpm	r24, Z+
     e12:	93 ff       	sbrs	r25, 3
     e14:	81 91       	ld	r24, Z+
     e16:	6f 01       	movw	r12, r30
     e18:	81 11       	cpse	r24, r1
     e1a:	c1 cf       	rjmp	.-126    	; 0xd9e <vfprintf+0x84>
     e1c:	98 2f       	mov	r25, r24
     e1e:	9f 7d       	andi	r25, 0xDF	; 223
     e20:	95 54       	subi	r25, 0x45	; 69
     e22:	93 30       	cpi	r25, 0x03	; 3
     e24:	28 f4       	brcc	.+10     	; 0xe30 <vfprintf+0x116>
     e26:	0c 5f       	subi	r16, 0xFC	; 252
     e28:	1f 4f       	sbci	r17, 0xFF	; 255
     e2a:	ff e3       	ldi	r31, 0x3F	; 63
     e2c:	f9 83       	std	Y+1, r31	; 0x01
     e2e:	0d c0       	rjmp	.+26     	; 0xe4a <vfprintf+0x130>
     e30:	83 36       	cpi	r24, 0x63	; 99
     e32:	31 f0       	breq	.+12     	; 0xe40 <vfprintf+0x126>
     e34:	83 37       	cpi	r24, 0x73	; 115
     e36:	71 f0       	breq	.+28     	; 0xe54 <vfprintf+0x13a>
     e38:	83 35       	cpi	r24, 0x53	; 83
     e3a:	09 f0       	breq	.+2      	; 0xe3e <vfprintf+0x124>
     e3c:	5b c0       	rjmp	.+182    	; 0xef4 <vfprintf+0x1da>
     e3e:	22 c0       	rjmp	.+68     	; 0xe84 <vfprintf+0x16a>
     e40:	f8 01       	movw	r30, r16
     e42:	80 81       	ld	r24, Z
     e44:	89 83       	std	Y+1, r24	; 0x01
     e46:	0e 5f       	subi	r16, 0xFE	; 254
     e48:	1f 4f       	sbci	r17, 0xFF	; 255
     e4a:	44 24       	eor	r4, r4
     e4c:	43 94       	inc	r4
     e4e:	51 2c       	mov	r5, r1
     e50:	54 01       	movw	r10, r8
     e52:	15 c0       	rjmp	.+42     	; 0xe7e <vfprintf+0x164>
     e54:	38 01       	movw	r6, r16
     e56:	f2 e0       	ldi	r31, 0x02	; 2
     e58:	6f 0e       	add	r6, r31
     e5a:	71 1c       	adc	r7, r1
     e5c:	f8 01       	movw	r30, r16
     e5e:	a0 80       	ld	r10, Z
     e60:	b1 80       	ldd	r11, Z+1	; 0x01
     e62:	26 ff       	sbrs	r18, 6
     e64:	03 c0       	rjmp	.+6      	; 0xe6c <vfprintf+0x152>
     e66:	65 2d       	mov	r22, r5
     e68:	70 e0       	ldi	r23, 0x00	; 0
     e6a:	02 c0       	rjmp	.+4      	; 0xe70 <vfprintf+0x156>
     e6c:	6f ef       	ldi	r22, 0xFF	; 255
     e6e:	7f ef       	ldi	r23, 0xFF	; 255
     e70:	c5 01       	movw	r24, r10
     e72:	2c 87       	std	Y+12, r18	; 0x0c
     e74:	0e 94 93 08 	call	0x1126	; 0x1126 <strnlen>
     e78:	2c 01       	movw	r4, r24
     e7a:	83 01       	movw	r16, r6
     e7c:	2c 85       	ldd	r18, Y+12	; 0x0c
     e7e:	2f 77       	andi	r18, 0x7F	; 127
     e80:	22 2e       	mov	r2, r18
     e82:	17 c0       	rjmp	.+46     	; 0xeb2 <vfprintf+0x198>
     e84:	38 01       	movw	r6, r16
     e86:	f2 e0       	ldi	r31, 0x02	; 2
     e88:	6f 0e       	add	r6, r31
     e8a:	71 1c       	adc	r7, r1
     e8c:	f8 01       	movw	r30, r16
     e8e:	a0 80       	ld	r10, Z
     e90:	b1 80       	ldd	r11, Z+1	; 0x01
     e92:	26 ff       	sbrs	r18, 6
     e94:	03 c0       	rjmp	.+6      	; 0xe9c <vfprintf+0x182>
     e96:	65 2d       	mov	r22, r5
     e98:	70 e0       	ldi	r23, 0x00	; 0
     e9a:	02 c0       	rjmp	.+4      	; 0xea0 <vfprintf+0x186>
     e9c:	6f ef       	ldi	r22, 0xFF	; 255
     e9e:	7f ef       	ldi	r23, 0xFF	; 255
     ea0:	c5 01       	movw	r24, r10
     ea2:	2c 87       	std	Y+12, r18	; 0x0c
     ea4:	0e 94 88 08 	call	0x1110	; 0x1110 <strnlen_P>
     ea8:	2c 01       	movw	r4, r24
     eaa:	2c 85       	ldd	r18, Y+12	; 0x0c
     eac:	20 68       	ori	r18, 0x80	; 128
     eae:	22 2e       	mov	r2, r18
     eb0:	83 01       	movw	r16, r6
     eb2:	23 fc       	sbrc	r2, 3
     eb4:	1b c0       	rjmp	.+54     	; 0xeec <vfprintf+0x1d2>
     eb6:	83 2d       	mov	r24, r3
     eb8:	90 e0       	ldi	r25, 0x00	; 0
     eba:	48 16       	cp	r4, r24
     ebc:	59 06       	cpc	r5, r25
     ebe:	b0 f4       	brcc	.+44     	; 0xeec <vfprintf+0x1d2>
     ec0:	b7 01       	movw	r22, r14
     ec2:	80 e2       	ldi	r24, 0x20	; 32
     ec4:	90 e0       	ldi	r25, 0x00	; 0
     ec6:	0e 94 9e 08 	call	0x113c	; 0x113c <fputc>
     eca:	3a 94       	dec	r3
     ecc:	f4 cf       	rjmp	.-24     	; 0xeb6 <vfprintf+0x19c>
     ece:	f5 01       	movw	r30, r10
     ed0:	27 fc       	sbrc	r2, 7
     ed2:	85 91       	lpm	r24, Z+
     ed4:	27 fe       	sbrs	r2, 7
     ed6:	81 91       	ld	r24, Z+
     ed8:	5f 01       	movw	r10, r30
     eda:	b7 01       	movw	r22, r14
     edc:	90 e0       	ldi	r25, 0x00	; 0
     ede:	0e 94 9e 08 	call	0x113c	; 0x113c <fputc>
     ee2:	31 10       	cpse	r3, r1
     ee4:	3a 94       	dec	r3
     ee6:	f1 e0       	ldi	r31, 0x01	; 1
     ee8:	4f 1a       	sub	r4, r31
     eea:	51 08       	sbc	r5, r1
     eec:	41 14       	cp	r4, r1
     eee:	51 04       	cpc	r5, r1
     ef0:	71 f7       	brne	.-36     	; 0xece <vfprintf+0x1b4>
     ef2:	e5 c0       	rjmp	.+458    	; 0x10be <vfprintf+0x3a4>
     ef4:	84 36       	cpi	r24, 0x64	; 100
     ef6:	11 f0       	breq	.+4      	; 0xefc <vfprintf+0x1e2>
     ef8:	89 36       	cpi	r24, 0x69	; 105
     efa:	39 f5       	brne	.+78     	; 0xf4a <vfprintf+0x230>
     efc:	f8 01       	movw	r30, r16
     efe:	27 ff       	sbrs	r18, 7
     f00:	07 c0       	rjmp	.+14     	; 0xf10 <vfprintf+0x1f6>
     f02:	60 81       	ld	r22, Z
     f04:	71 81       	ldd	r23, Z+1	; 0x01
     f06:	82 81       	ldd	r24, Z+2	; 0x02
     f08:	93 81       	ldd	r25, Z+3	; 0x03
     f0a:	0c 5f       	subi	r16, 0xFC	; 252
     f0c:	1f 4f       	sbci	r17, 0xFF	; 255
     f0e:	08 c0       	rjmp	.+16     	; 0xf20 <vfprintf+0x206>
     f10:	60 81       	ld	r22, Z
     f12:	71 81       	ldd	r23, Z+1	; 0x01
     f14:	07 2e       	mov	r0, r23
     f16:	00 0c       	add	r0, r0
     f18:	88 0b       	sbc	r24, r24
     f1a:	99 0b       	sbc	r25, r25
     f1c:	0e 5f       	subi	r16, 0xFE	; 254
     f1e:	1f 4f       	sbci	r17, 0xFF	; 255
     f20:	2f 76       	andi	r18, 0x6F	; 111
     f22:	72 2e       	mov	r7, r18
     f24:	97 ff       	sbrs	r25, 7
     f26:	09 c0       	rjmp	.+18     	; 0xf3a <vfprintf+0x220>
     f28:	90 95       	com	r25
     f2a:	80 95       	com	r24
     f2c:	70 95       	com	r23
     f2e:	61 95       	neg	r22
     f30:	7f 4f       	sbci	r23, 0xFF	; 255
     f32:	8f 4f       	sbci	r24, 0xFF	; 255
     f34:	9f 4f       	sbci	r25, 0xFF	; 255
     f36:	20 68       	ori	r18, 0x80	; 128
     f38:	72 2e       	mov	r7, r18
     f3a:	2a e0       	ldi	r18, 0x0A	; 10
     f3c:	30 e0       	ldi	r19, 0x00	; 0
     f3e:	a4 01       	movw	r20, r8
     f40:	0e 94 d6 08 	call	0x11ac	; 0x11ac <__ultoa_invert>
     f44:	a8 2e       	mov	r10, r24
     f46:	a8 18       	sub	r10, r8
     f48:	44 c0       	rjmp	.+136    	; 0xfd2 <vfprintf+0x2b8>
     f4a:	85 37       	cpi	r24, 0x75	; 117
     f4c:	29 f4       	brne	.+10     	; 0xf58 <vfprintf+0x23e>
     f4e:	2f 7e       	andi	r18, 0xEF	; 239
     f50:	b2 2e       	mov	r11, r18
     f52:	2a e0       	ldi	r18, 0x0A	; 10
     f54:	30 e0       	ldi	r19, 0x00	; 0
     f56:	25 c0       	rjmp	.+74     	; 0xfa2 <vfprintf+0x288>
     f58:	f2 2f       	mov	r31, r18
     f5a:	f9 7f       	andi	r31, 0xF9	; 249
     f5c:	bf 2e       	mov	r11, r31
     f5e:	8f 36       	cpi	r24, 0x6F	; 111
     f60:	c1 f0       	breq	.+48     	; 0xf92 <vfprintf+0x278>
     f62:	18 f4       	brcc	.+6      	; 0xf6a <vfprintf+0x250>
     f64:	88 35       	cpi	r24, 0x58	; 88
     f66:	79 f0       	breq	.+30     	; 0xf86 <vfprintf+0x26c>
     f68:	b4 c0       	rjmp	.+360    	; 0x10d2 <vfprintf+0x3b8>
     f6a:	80 37       	cpi	r24, 0x70	; 112
     f6c:	19 f0       	breq	.+6      	; 0xf74 <vfprintf+0x25a>
     f6e:	88 37       	cpi	r24, 0x78	; 120
     f70:	21 f0       	breq	.+8      	; 0xf7a <vfprintf+0x260>
     f72:	af c0       	rjmp	.+350    	; 0x10d2 <vfprintf+0x3b8>
     f74:	2f 2f       	mov	r18, r31
     f76:	20 61       	ori	r18, 0x10	; 16
     f78:	b2 2e       	mov	r11, r18
     f7a:	b4 fe       	sbrs	r11, 4
     f7c:	0d c0       	rjmp	.+26     	; 0xf98 <vfprintf+0x27e>
     f7e:	8b 2d       	mov	r24, r11
     f80:	84 60       	ori	r24, 0x04	; 4
     f82:	b8 2e       	mov	r11, r24
     f84:	09 c0       	rjmp	.+18     	; 0xf98 <vfprintf+0x27e>
     f86:	24 ff       	sbrs	r18, 4
     f88:	0a c0       	rjmp	.+20     	; 0xf9e <vfprintf+0x284>
     f8a:	9f 2f       	mov	r25, r31
     f8c:	96 60       	ori	r25, 0x06	; 6
     f8e:	b9 2e       	mov	r11, r25
     f90:	06 c0       	rjmp	.+12     	; 0xf9e <vfprintf+0x284>
     f92:	28 e0       	ldi	r18, 0x08	; 8
     f94:	30 e0       	ldi	r19, 0x00	; 0
     f96:	05 c0       	rjmp	.+10     	; 0xfa2 <vfprintf+0x288>
     f98:	20 e1       	ldi	r18, 0x10	; 16
     f9a:	30 e0       	ldi	r19, 0x00	; 0
     f9c:	02 c0       	rjmp	.+4      	; 0xfa2 <vfprintf+0x288>
     f9e:	20 e1       	ldi	r18, 0x10	; 16
     fa0:	32 e0       	ldi	r19, 0x02	; 2
     fa2:	f8 01       	movw	r30, r16
     fa4:	b7 fe       	sbrs	r11, 7
     fa6:	07 c0       	rjmp	.+14     	; 0xfb6 <vfprintf+0x29c>
     fa8:	60 81       	ld	r22, Z
     faa:	71 81       	ldd	r23, Z+1	; 0x01
     fac:	82 81       	ldd	r24, Z+2	; 0x02
     fae:	93 81       	ldd	r25, Z+3	; 0x03
     fb0:	0c 5f       	subi	r16, 0xFC	; 252
     fb2:	1f 4f       	sbci	r17, 0xFF	; 255
     fb4:	06 c0       	rjmp	.+12     	; 0xfc2 <vfprintf+0x2a8>
     fb6:	60 81       	ld	r22, Z
     fb8:	71 81       	ldd	r23, Z+1	; 0x01
     fba:	80 e0       	ldi	r24, 0x00	; 0
     fbc:	90 e0       	ldi	r25, 0x00	; 0
     fbe:	0e 5f       	subi	r16, 0xFE	; 254
     fc0:	1f 4f       	sbci	r17, 0xFF	; 255
     fc2:	a4 01       	movw	r20, r8
     fc4:	0e 94 d6 08 	call	0x11ac	; 0x11ac <__ultoa_invert>
     fc8:	a8 2e       	mov	r10, r24
     fca:	a8 18       	sub	r10, r8
     fcc:	fb 2d       	mov	r31, r11
     fce:	ff 77       	andi	r31, 0x7F	; 127
     fd0:	7f 2e       	mov	r7, r31
     fd2:	76 fe       	sbrs	r7, 6
     fd4:	0b c0       	rjmp	.+22     	; 0xfec <vfprintf+0x2d2>
     fd6:	37 2d       	mov	r19, r7
     fd8:	3e 7f       	andi	r19, 0xFE	; 254
     fda:	a5 14       	cp	r10, r5
     fdc:	50 f4       	brcc	.+20     	; 0xff2 <vfprintf+0x2d8>
     fde:	74 fe       	sbrs	r7, 4
     fe0:	0a c0       	rjmp	.+20     	; 0xff6 <vfprintf+0x2dc>
     fe2:	72 fc       	sbrc	r7, 2
     fe4:	08 c0       	rjmp	.+16     	; 0xff6 <vfprintf+0x2dc>
     fe6:	37 2d       	mov	r19, r7
     fe8:	3e 7e       	andi	r19, 0xEE	; 238
     fea:	05 c0       	rjmp	.+10     	; 0xff6 <vfprintf+0x2dc>
     fec:	ba 2c       	mov	r11, r10
     fee:	37 2d       	mov	r19, r7
     ff0:	03 c0       	rjmp	.+6      	; 0xff8 <vfprintf+0x2de>
     ff2:	ba 2c       	mov	r11, r10
     ff4:	01 c0       	rjmp	.+2      	; 0xff8 <vfprintf+0x2de>
     ff6:	b5 2c       	mov	r11, r5
     ff8:	34 ff       	sbrs	r19, 4
     ffa:	0d c0       	rjmp	.+26     	; 0x1016 <vfprintf+0x2fc>
     ffc:	fe 01       	movw	r30, r28
     ffe:	ea 0d       	add	r30, r10
    1000:	f1 1d       	adc	r31, r1
    1002:	80 81       	ld	r24, Z
    1004:	80 33       	cpi	r24, 0x30	; 48
    1006:	11 f4       	brne	.+4      	; 0x100c <vfprintf+0x2f2>
    1008:	39 7e       	andi	r19, 0xE9	; 233
    100a:	09 c0       	rjmp	.+18     	; 0x101e <vfprintf+0x304>
    100c:	32 ff       	sbrs	r19, 2
    100e:	06 c0       	rjmp	.+12     	; 0x101c <vfprintf+0x302>
    1010:	b3 94       	inc	r11
    1012:	b3 94       	inc	r11
    1014:	04 c0       	rjmp	.+8      	; 0x101e <vfprintf+0x304>
    1016:	83 2f       	mov	r24, r19
    1018:	86 78       	andi	r24, 0x86	; 134
    101a:	09 f0       	breq	.+2      	; 0x101e <vfprintf+0x304>
    101c:	b3 94       	inc	r11
    101e:	33 fd       	sbrc	r19, 3
    1020:	13 c0       	rjmp	.+38     	; 0x1048 <vfprintf+0x32e>
    1022:	30 ff       	sbrs	r19, 0
    1024:	06 c0       	rjmp	.+12     	; 0x1032 <vfprintf+0x318>
    1026:	5a 2c       	mov	r5, r10
    1028:	b3 14       	cp	r11, r3
    102a:	18 f4       	brcc	.+6      	; 0x1032 <vfprintf+0x318>
    102c:	53 0c       	add	r5, r3
    102e:	5b 18       	sub	r5, r11
    1030:	b3 2c       	mov	r11, r3
    1032:	b3 14       	cp	r11, r3
    1034:	68 f4       	brcc	.+26     	; 0x1050 <vfprintf+0x336>
    1036:	b7 01       	movw	r22, r14
    1038:	80 e2       	ldi	r24, 0x20	; 32
    103a:	90 e0       	ldi	r25, 0x00	; 0
    103c:	3c 87       	std	Y+12, r19	; 0x0c
    103e:	0e 94 9e 08 	call	0x113c	; 0x113c <fputc>
    1042:	b3 94       	inc	r11
    1044:	3c 85       	ldd	r19, Y+12	; 0x0c
    1046:	f5 cf       	rjmp	.-22     	; 0x1032 <vfprintf+0x318>
    1048:	b3 14       	cp	r11, r3
    104a:	10 f4       	brcc	.+4      	; 0x1050 <vfprintf+0x336>
    104c:	3b 18       	sub	r3, r11
    104e:	01 c0       	rjmp	.+2      	; 0x1052 <vfprintf+0x338>
    1050:	31 2c       	mov	r3, r1
    1052:	34 ff       	sbrs	r19, 4
    1054:	12 c0       	rjmp	.+36     	; 0x107a <vfprintf+0x360>
    1056:	b7 01       	movw	r22, r14
    1058:	80 e3       	ldi	r24, 0x30	; 48
    105a:	90 e0       	ldi	r25, 0x00	; 0
    105c:	3c 87       	std	Y+12, r19	; 0x0c
    105e:	0e 94 9e 08 	call	0x113c	; 0x113c <fputc>
    1062:	3c 85       	ldd	r19, Y+12	; 0x0c
    1064:	32 ff       	sbrs	r19, 2
    1066:	17 c0       	rjmp	.+46     	; 0x1096 <vfprintf+0x37c>
    1068:	31 fd       	sbrc	r19, 1
    106a:	03 c0       	rjmp	.+6      	; 0x1072 <vfprintf+0x358>
    106c:	88 e7       	ldi	r24, 0x78	; 120
    106e:	90 e0       	ldi	r25, 0x00	; 0
    1070:	02 c0       	rjmp	.+4      	; 0x1076 <vfprintf+0x35c>
    1072:	88 e5       	ldi	r24, 0x58	; 88
    1074:	90 e0       	ldi	r25, 0x00	; 0
    1076:	b7 01       	movw	r22, r14
    1078:	0c c0       	rjmp	.+24     	; 0x1092 <vfprintf+0x378>
    107a:	83 2f       	mov	r24, r19
    107c:	86 78       	andi	r24, 0x86	; 134
    107e:	59 f0       	breq	.+22     	; 0x1096 <vfprintf+0x37c>
    1080:	31 ff       	sbrs	r19, 1
    1082:	02 c0       	rjmp	.+4      	; 0x1088 <vfprintf+0x36e>
    1084:	8b e2       	ldi	r24, 0x2B	; 43
    1086:	01 c0       	rjmp	.+2      	; 0x108a <vfprintf+0x370>
    1088:	80 e2       	ldi	r24, 0x20	; 32
    108a:	37 fd       	sbrc	r19, 7
    108c:	8d e2       	ldi	r24, 0x2D	; 45
    108e:	b7 01       	movw	r22, r14
    1090:	90 e0       	ldi	r25, 0x00	; 0
    1092:	0e 94 9e 08 	call	0x113c	; 0x113c <fputc>
    1096:	a5 14       	cp	r10, r5
    1098:	38 f4       	brcc	.+14     	; 0x10a8 <vfprintf+0x38e>
    109a:	b7 01       	movw	r22, r14
    109c:	80 e3       	ldi	r24, 0x30	; 48
    109e:	90 e0       	ldi	r25, 0x00	; 0
    10a0:	0e 94 9e 08 	call	0x113c	; 0x113c <fputc>
    10a4:	5a 94       	dec	r5
    10a6:	f7 cf       	rjmp	.-18     	; 0x1096 <vfprintf+0x37c>
    10a8:	aa 94       	dec	r10
    10aa:	f4 01       	movw	r30, r8
    10ac:	ea 0d       	add	r30, r10
    10ae:	f1 1d       	adc	r31, r1
    10b0:	80 81       	ld	r24, Z
    10b2:	b7 01       	movw	r22, r14
    10b4:	90 e0       	ldi	r25, 0x00	; 0
    10b6:	0e 94 9e 08 	call	0x113c	; 0x113c <fputc>
    10ba:	a1 10       	cpse	r10, r1
    10bc:	f5 cf       	rjmp	.-22     	; 0x10a8 <vfprintf+0x38e>
    10be:	33 20       	and	r3, r3
    10c0:	09 f4       	brne	.+2      	; 0x10c4 <vfprintf+0x3aa>
    10c2:	51 ce       	rjmp	.-862    	; 0xd66 <vfprintf+0x4c>
    10c4:	b7 01       	movw	r22, r14
    10c6:	80 e2       	ldi	r24, 0x20	; 32
    10c8:	90 e0       	ldi	r25, 0x00	; 0
    10ca:	0e 94 9e 08 	call	0x113c	; 0x113c <fputc>
    10ce:	3a 94       	dec	r3
    10d0:	f6 cf       	rjmp	.-20     	; 0x10be <vfprintf+0x3a4>
    10d2:	f7 01       	movw	r30, r14
    10d4:	86 81       	ldd	r24, Z+6	; 0x06
    10d6:	97 81       	ldd	r25, Z+7	; 0x07
    10d8:	02 c0       	rjmp	.+4      	; 0x10de <vfprintf+0x3c4>
    10da:	8f ef       	ldi	r24, 0xFF	; 255
    10dc:	9f ef       	ldi	r25, 0xFF	; 255
    10de:	2c 96       	adiw	r28, 0x0c	; 12
    10e0:	0f b6       	in	r0, 0x3f	; 63
    10e2:	f8 94       	cli
    10e4:	de bf       	out	0x3e, r29	; 62
    10e6:	0f be       	out	0x3f, r0	; 63
    10e8:	cd bf       	out	0x3d, r28	; 61
    10ea:	df 91       	pop	r29
    10ec:	cf 91       	pop	r28
    10ee:	1f 91       	pop	r17
    10f0:	0f 91       	pop	r16
    10f2:	ff 90       	pop	r15
    10f4:	ef 90       	pop	r14
    10f6:	df 90       	pop	r13
    10f8:	cf 90       	pop	r12
    10fa:	bf 90       	pop	r11
    10fc:	af 90       	pop	r10
    10fe:	9f 90       	pop	r9
    1100:	8f 90       	pop	r8
    1102:	7f 90       	pop	r7
    1104:	6f 90       	pop	r6
    1106:	5f 90       	pop	r5
    1108:	4f 90       	pop	r4
    110a:	3f 90       	pop	r3
    110c:	2f 90       	pop	r2
    110e:	08 95       	ret

00001110 <strnlen_P>:
    1110:	fc 01       	movw	r30, r24
    1112:	05 90       	lpm	r0, Z+
    1114:	61 50       	subi	r22, 0x01	; 1
    1116:	70 40       	sbci	r23, 0x00	; 0
    1118:	01 10       	cpse	r0, r1
    111a:	d8 f7       	brcc	.-10     	; 0x1112 <strnlen_P+0x2>
    111c:	80 95       	com	r24
    111e:	90 95       	com	r25
    1120:	8e 0f       	add	r24, r30
    1122:	9f 1f       	adc	r25, r31
    1124:	08 95       	ret

00001126 <strnlen>:
    1126:	fc 01       	movw	r30, r24
    1128:	61 50       	subi	r22, 0x01	; 1
    112a:	70 40       	sbci	r23, 0x00	; 0
    112c:	01 90       	ld	r0, Z+
    112e:	01 10       	cpse	r0, r1
    1130:	d8 f7       	brcc	.-10     	; 0x1128 <strnlen+0x2>
    1132:	80 95       	com	r24
    1134:	90 95       	com	r25
    1136:	8e 0f       	add	r24, r30
    1138:	9f 1f       	adc	r25, r31
    113a:	08 95       	ret

0000113c <fputc>:
    113c:	0f 93       	push	r16
    113e:	1f 93       	push	r17
    1140:	cf 93       	push	r28
    1142:	df 93       	push	r29
    1144:	fb 01       	movw	r30, r22
    1146:	23 81       	ldd	r18, Z+3	; 0x03
    1148:	21 fd       	sbrc	r18, 1
    114a:	03 c0       	rjmp	.+6      	; 0x1152 <fputc+0x16>
    114c:	8f ef       	ldi	r24, 0xFF	; 255
    114e:	9f ef       	ldi	r25, 0xFF	; 255
    1150:	28 c0       	rjmp	.+80     	; 0x11a2 <fputc+0x66>
    1152:	22 ff       	sbrs	r18, 2
    1154:	16 c0       	rjmp	.+44     	; 0x1182 <fputc+0x46>
    1156:	46 81       	ldd	r20, Z+6	; 0x06
    1158:	57 81       	ldd	r21, Z+7	; 0x07
    115a:	24 81       	ldd	r18, Z+4	; 0x04
    115c:	35 81       	ldd	r19, Z+5	; 0x05
    115e:	42 17       	cp	r20, r18
    1160:	53 07       	cpc	r21, r19
    1162:	44 f4       	brge	.+16     	; 0x1174 <fputc+0x38>
    1164:	a0 81       	ld	r26, Z
    1166:	b1 81       	ldd	r27, Z+1	; 0x01
    1168:	9d 01       	movw	r18, r26
    116a:	2f 5f       	subi	r18, 0xFF	; 255
    116c:	3f 4f       	sbci	r19, 0xFF	; 255
    116e:	31 83       	std	Z+1, r19	; 0x01
    1170:	20 83       	st	Z, r18
    1172:	8c 93       	st	X, r24
    1174:	26 81       	ldd	r18, Z+6	; 0x06
    1176:	37 81       	ldd	r19, Z+7	; 0x07
    1178:	2f 5f       	subi	r18, 0xFF	; 255
    117a:	3f 4f       	sbci	r19, 0xFF	; 255
    117c:	37 83       	std	Z+7, r19	; 0x07
    117e:	26 83       	std	Z+6, r18	; 0x06
    1180:	10 c0       	rjmp	.+32     	; 0x11a2 <fputc+0x66>
    1182:	eb 01       	movw	r28, r22
    1184:	09 2f       	mov	r16, r25
    1186:	18 2f       	mov	r17, r24
    1188:	00 84       	ldd	r0, Z+8	; 0x08
    118a:	f1 85       	ldd	r31, Z+9	; 0x09
    118c:	e0 2d       	mov	r30, r0
    118e:	09 95       	icall
    1190:	89 2b       	or	r24, r25
    1192:	e1 f6       	brne	.-72     	; 0x114c <fputc+0x10>
    1194:	8e 81       	ldd	r24, Y+6	; 0x06
    1196:	9f 81       	ldd	r25, Y+7	; 0x07
    1198:	01 96       	adiw	r24, 0x01	; 1
    119a:	9f 83       	std	Y+7, r25	; 0x07
    119c:	8e 83       	std	Y+6, r24	; 0x06
    119e:	81 2f       	mov	r24, r17
    11a0:	90 2f       	mov	r25, r16
    11a2:	df 91       	pop	r29
    11a4:	cf 91       	pop	r28
    11a6:	1f 91       	pop	r17
    11a8:	0f 91       	pop	r16
    11aa:	08 95       	ret

000011ac <__ultoa_invert>:
    11ac:	fa 01       	movw	r30, r20
    11ae:	aa 27       	eor	r26, r26
    11b0:	28 30       	cpi	r18, 0x08	; 8
    11b2:	51 f1       	breq	.+84     	; 0x1208 <__ultoa_invert+0x5c>
    11b4:	20 31       	cpi	r18, 0x10	; 16
    11b6:	81 f1       	breq	.+96     	; 0x1218 <__ultoa_invert+0x6c>
    11b8:	e8 94       	clt
    11ba:	6f 93       	push	r22
    11bc:	6e 7f       	andi	r22, 0xFE	; 254
    11be:	6e 5f       	subi	r22, 0xFE	; 254
    11c0:	7f 4f       	sbci	r23, 0xFF	; 255
    11c2:	8f 4f       	sbci	r24, 0xFF	; 255
    11c4:	9f 4f       	sbci	r25, 0xFF	; 255
    11c6:	af 4f       	sbci	r26, 0xFF	; 255
    11c8:	b1 e0       	ldi	r27, 0x01	; 1
    11ca:	3e d0       	rcall	.+124    	; 0x1248 <__ultoa_invert+0x9c>
    11cc:	b4 e0       	ldi	r27, 0x04	; 4
    11ce:	3c d0       	rcall	.+120    	; 0x1248 <__ultoa_invert+0x9c>
    11d0:	67 0f       	add	r22, r23
    11d2:	78 1f       	adc	r23, r24
    11d4:	89 1f       	adc	r24, r25
    11d6:	9a 1f       	adc	r25, r26
    11d8:	a1 1d       	adc	r26, r1
    11da:	68 0f       	add	r22, r24
    11dc:	79 1f       	adc	r23, r25
    11de:	8a 1f       	adc	r24, r26
    11e0:	91 1d       	adc	r25, r1
    11e2:	a1 1d       	adc	r26, r1
    11e4:	6a 0f       	add	r22, r26
    11e6:	71 1d       	adc	r23, r1
    11e8:	81 1d       	adc	r24, r1
    11ea:	91 1d       	adc	r25, r1
    11ec:	a1 1d       	adc	r26, r1
    11ee:	20 d0       	rcall	.+64     	; 0x1230 <__ultoa_invert+0x84>
    11f0:	09 f4       	brne	.+2      	; 0x11f4 <__ultoa_invert+0x48>
    11f2:	68 94       	set
    11f4:	3f 91       	pop	r19
    11f6:	2a e0       	ldi	r18, 0x0A	; 10
    11f8:	26 9f       	mul	r18, r22
    11fa:	11 24       	eor	r1, r1
    11fc:	30 19       	sub	r19, r0
    11fe:	30 5d       	subi	r19, 0xD0	; 208
    1200:	31 93       	st	Z+, r19
    1202:	de f6       	brtc	.-74     	; 0x11ba <__ultoa_invert+0xe>
    1204:	cf 01       	movw	r24, r30
    1206:	08 95       	ret
    1208:	46 2f       	mov	r20, r22
    120a:	47 70       	andi	r20, 0x07	; 7
    120c:	40 5d       	subi	r20, 0xD0	; 208
    120e:	41 93       	st	Z+, r20
    1210:	b3 e0       	ldi	r27, 0x03	; 3
    1212:	0f d0       	rcall	.+30     	; 0x1232 <__ultoa_invert+0x86>
    1214:	c9 f7       	brne	.-14     	; 0x1208 <__ultoa_invert+0x5c>
    1216:	f6 cf       	rjmp	.-20     	; 0x1204 <__ultoa_invert+0x58>
    1218:	46 2f       	mov	r20, r22
    121a:	4f 70       	andi	r20, 0x0F	; 15
    121c:	40 5d       	subi	r20, 0xD0	; 208
    121e:	4a 33       	cpi	r20, 0x3A	; 58
    1220:	18 f0       	brcs	.+6      	; 0x1228 <__ultoa_invert+0x7c>
    1222:	49 5d       	subi	r20, 0xD9	; 217
    1224:	31 fd       	sbrc	r19, 1
    1226:	40 52       	subi	r20, 0x20	; 32
    1228:	41 93       	st	Z+, r20
    122a:	02 d0       	rcall	.+4      	; 0x1230 <__ultoa_invert+0x84>
    122c:	a9 f7       	brne	.-22     	; 0x1218 <__ultoa_invert+0x6c>
    122e:	ea cf       	rjmp	.-44     	; 0x1204 <__ultoa_invert+0x58>
    1230:	b4 e0       	ldi	r27, 0x04	; 4
    1232:	a6 95       	lsr	r26
    1234:	97 95       	ror	r25
    1236:	87 95       	ror	r24
    1238:	77 95       	ror	r23
    123a:	67 95       	ror	r22
    123c:	ba 95       	dec	r27
    123e:	c9 f7       	brne	.-14     	; 0x1232 <__ultoa_invert+0x86>
    1240:	00 97       	sbiw	r24, 0x00	; 0
    1242:	61 05       	cpc	r22, r1
    1244:	71 05       	cpc	r23, r1
    1246:	08 95       	ret
    1248:	9b 01       	movw	r18, r22
    124a:	ac 01       	movw	r20, r24
    124c:	0a 2e       	mov	r0, r26
    124e:	06 94       	lsr	r0
    1250:	57 95       	ror	r21
    1252:	47 95       	ror	r20
    1254:	37 95       	ror	r19
    1256:	27 95       	ror	r18
    1258:	ba 95       	dec	r27
    125a:	c9 f7       	brne	.-14     	; 0x124e <__ultoa_invert+0xa2>
    125c:	62 0f       	add	r22, r18
    125e:	73 1f       	adc	r23, r19
    1260:	84 1f       	adc	r24, r20
    1262:	95 1f       	adc	r25, r21
    1264:	a0 1d       	adc	r26, r0
    1266:	08 95       	ret

00001268 <_exit>:
    1268:	f8 94       	cli

0000126a <__stop_program>:
    126a:	ff cf       	rjmp	.-2      	; 0x126a <__stop_program>
